{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{\"6Ylu\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"DonateModule\",function(){return donate_module_DonateModule});var common=__webpack_require__(\"SVse\"),fesm2015_forms=__webpack_require__(\"s7LF\"),flex_layout=__webpack_require__(\"u9T3\"),form_field=__webpack_require__(\"Q2Ze\"),coercion=__webpack_require__(\"8LU1\"),collections=__webpack_require__(\"CtHx\"),core=__webpack_require__(\"8Y7J\"),fesm2015_core=__webpack_require__(\"UhP/\"),a11y=__webpack_require__(\"YEUz\");const _c0=[\"button\"],_c1=[\"*\"],MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS=new core.s(\"MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS\"),MAT_BUTTON_TOGGLE_GROUP=new core.s(\"MatButtonToggleGroup\"),MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR={provide:fesm2015_forms.k,useExisting:Object(core.W)(()=>button_toggle_MatButtonToggleGroup),multi:!0};let _uniqueIdCounter=0;class MatButtonToggleChange{constructor(source,value){this.source=source,this.value=value}}let button_toggle_MatButtonToggleGroup=(()=>{class MatButtonToggleGroup{constructor(_changeDetector,defaultOptions){this._changeDetector=_changeDetector,this._vertical=!1,this._multiple=!1,this._disabled=!1,this._controlValueAccessorChangeFn=()=>{},this._onTouched=()=>{},this._name=\"mat-button-toggle-group-\"+_uniqueIdCounter++,this.valueChange=new core.o,this.change=new core.o,this.appearance=defaultOptions&&defaultOptions.appearance?defaultOptions.appearance:\"standard\"}get name(){return this._name}set name(value){this._name=value,this._buttonToggles&&this._buttonToggles.forEach(toggle=>{toggle.name=this._name,toggle._markForCheck()})}get vertical(){return this._vertical}set vertical(value){this._vertical=Object(coercion.c)(value)}get value(){const selected=this._selectionModel?this._selectionModel.selected:[];return this.multiple?selected.map(toggle=>toggle.value):selected[0]?selected[0].value:void 0}set value(newValue){this._setSelectionByValue(newValue),this.valueChange.emit(this.value)}get selected(){const selected=this._selectionModel?this._selectionModel.selected:[];return this.multiple?selected:selected[0]||null}get multiple(){return this._multiple}set multiple(value){this._multiple=Object(coercion.c)(value)}get disabled(){return this._disabled}set disabled(value){this._disabled=Object(coercion.c)(value),this._buttonToggles&&this._buttonToggles.forEach(toggle=>toggle._markForCheck())}ngOnInit(){this._selectionModel=new collections.c(this.multiple,void 0,!1)}ngAfterContentInit(){this._selectionModel.select(...this._buttonToggles.filter(toggle=>toggle.checked))}writeValue(value){this.value=value,this._changeDetector.markForCheck()}registerOnChange(fn){this._controlValueAccessorChangeFn=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_emitChangeEvent(){const selected=this.selected,source=Array.isArray(selected)?selected[selected.length-1]:selected,event=new MatButtonToggleChange(source,this.value);this._controlValueAccessorChangeFn(event.value),this.change.emit(event)}_syncButtonToggle(toggle,select,isUserInput=!1,deferEvents=!1){this.multiple||!this.selected||toggle.checked||(this.selected.checked=!1),this._selectionModel?select?this._selectionModel.select(toggle):this._selectionModel.deselect(toggle):deferEvents=!0,deferEvents?Promise.resolve().then(()=>this._updateModelValue(isUserInput)):this._updateModelValue(isUserInput)}_isSelected(toggle){return this._selectionModel&&this._selectionModel.isSelected(toggle)}_isPrechecked(toggle){return void 0!==this._rawValue&&(this.multiple&&Array.isArray(this._rawValue)?this._rawValue.some(value=>null!=toggle.value&&value===toggle.value):toggle.value===this._rawValue)}_setSelectionByValue(value){this._rawValue=value,this._buttonToggles&&(this.multiple&&value?(Array.isArray(value),this._clearSelection(),value.forEach(currentValue=>this._selectValue(currentValue))):(this._clearSelection(),this._selectValue(value)))}_clearSelection(){this._selectionModel.clear(),this._buttonToggles.forEach(toggle=>toggle.checked=!1)}_selectValue(value){const correspondingOption=this._buttonToggles.find(toggle=>null!=toggle.value&&toggle.value===value);correspondingOption&&(correspondingOption.checked=!0,this._selectionModel.select(correspondingOption))}_updateModelValue(isUserInput){isUserInput&&this._emitChangeEvent(),this.valueChange.emit(this.value)}}return MatButtonToggleGroup.ɵfac=function(t){return new(t||MatButtonToggleGroup)(core.Qb(core.h),core.Qb(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,8))},MatButtonToggleGroup.ɵdir=core.Lb({type:MatButtonToggleGroup,selectors:[[\"mat-button-toggle-group\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Jb(dirIndex,button_toggle_MatButtonToggle,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._buttonToggles=_t)}},hostAttrs:[\"role\",\"group\",1,\"mat-button-toggle-group\"],hostVars:5,hostBindings:function(rf,ctx){2&rf&&(core.Eb(\"aria-disabled\",ctx.disabled),core.Ib(\"mat-button-toggle-vertical\",ctx.vertical)(\"mat-button-toggle-group-appearance-standard\",\"standard\"===ctx.appearance))},inputs:{appearance:\"appearance\",name:\"name\",vertical:\"vertical\",value:\"value\",multiple:\"multiple\",disabled:\"disabled\"},outputs:{valueChange:\"valueChange\",change:\"change\"},exportAs:[\"matButtonToggleGroup\"],features:[core.Cb([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,{provide:MAT_BUTTON_TOGGLE_GROUP,useExisting:MatButtonToggleGroup}])]}),MatButtonToggleGroup})();class MatButtonToggleBase{}const _MatButtonToggleMixinBase=Object(fesm2015_core.w)(MatButtonToggleBase);let button_toggle_MatButtonToggle=(()=>{class MatButtonToggle extends _MatButtonToggleMixinBase{constructor(toggleGroup,_changeDetectorRef,_elementRef,_focusMonitor,defaultTabIndex,defaultOptions){super(),this._changeDetectorRef=_changeDetectorRef,this._elementRef=_elementRef,this._focusMonitor=_focusMonitor,this._isSingleSelector=!1,this._checked=!1,this.ariaLabelledby=null,this._disabled=!1,this.change=new core.o;const parsedTabIndex=Number(defaultTabIndex);this.tabIndex=parsedTabIndex||0===parsedTabIndex?parsedTabIndex:null,this.buttonToggleGroup=toggleGroup,this.appearance=defaultOptions&&defaultOptions.appearance?defaultOptions.appearance:\"standard\"}get buttonId(){return`${this.id}-button`}get appearance(){return this.buttonToggleGroup?this.buttonToggleGroup.appearance:this._appearance}set appearance(value){this._appearance=value}get checked(){return this.buttonToggleGroup?this.buttonToggleGroup._isSelected(this):this._checked}set checked(value){const newValue=Object(coercion.c)(value);newValue!==this._checked&&(this._checked=newValue,this.buttonToggleGroup&&this.buttonToggleGroup._syncButtonToggle(this,this._checked),this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled||this.buttonToggleGroup&&this.buttonToggleGroup.disabled}set disabled(value){this._disabled=Object(coercion.c)(value)}ngOnInit(){const group=this.buttonToggleGroup;this._isSingleSelector=group&&!group.multiple,this.id=this.id||\"mat-button-toggle-\"+_uniqueIdCounter++,this._isSingleSelector&&(this.name=group.name),group&&(group._isPrechecked(this)?this.checked=!0:group._isSelected(this)!==this._checked&&group._syncButtonToggle(this,this._checked))}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){const group=this.buttonToggleGroup;this._focusMonitor.stopMonitoring(this._elementRef),group&&group._isSelected(this)&&group._syncButtonToggle(this,!1,!1,!0)}focus(options){this._buttonElement.nativeElement.focus(options)}_onButtonClick(){const newChecked=!!this._isSingleSelector||!this._checked;newChecked!==this._checked&&(this._checked=newChecked,this.buttonToggleGroup&&(this.buttonToggleGroup._syncButtonToggle(this,this._checked,!0),this.buttonToggleGroup._onTouched())),this.change.emit(new MatButtonToggleChange(this,this.value))}_markForCheck(){this._changeDetectorRef.markForCheck()}}return MatButtonToggle.ɵfac=function(t){return new(t||MatButtonToggle)(core.Qb(MAT_BUTTON_TOGGLE_GROUP,8),core.Qb(core.h),core.Qb(core.l),core.Qb(a11y.h),core.bc(\"tabindex\"),core.Qb(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,8))},MatButtonToggle.ɵcmp=core.Kb({type:MatButtonToggle,selectors:[[\"mat-button-toggle\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Lc(_c0,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._buttonElement=_t.first)}},hostAttrs:[\"role\",\"presentation\",1,\"mat-button-toggle\"],hostVars:12,hostBindings:function(rf,ctx){1&rf&&core.ec(\"focus\",function(){return ctx.focus()}),2&rf&&(core.Eb(\"aria-label\",null)(\"aria-labelledby\",null)(\"id\",ctx.id)(\"name\",null),core.Ib(\"mat-button-toggle-standalone\",!ctx.buttonToggleGroup)(\"mat-button-toggle-checked\",ctx.checked)(\"mat-button-toggle-disabled\",ctx.disabled)(\"mat-button-toggle-appearance-standard\",\"standard\"===ctx.appearance))},inputs:{disableRipple:\"disableRipple\",ariaLabelledby:[\"aria-labelledby\",\"ariaLabelledby\"],tabIndex:\"tabIndex\",appearance:\"appearance\",checked:\"checked\",disabled:\"disabled\",id:\"id\",name:\"name\",ariaLabel:[\"aria-label\",\"ariaLabel\"],value:\"value\"},outputs:{change:\"change\"},exportAs:[\"matButtonToggle\"],features:[core.Ab],ngContentSelectors:_c1,decls:6,vars:9,consts:[[\"type\",\"button\",1,\"mat-button-toggle-button\",\"mat-focus-indicator\",3,\"id\",\"disabled\",\"click\"],[\"button\",\"\"],[1,\"mat-button-toggle-label-content\"],[1,\"mat-button-toggle-focus-overlay\"],[\"matRipple\",\"\",1,\"mat-button-toggle-ripple\",3,\"matRippleTrigger\",\"matRippleDisabled\"]],template:function(rf,ctx){if(1&rf&&(core.oc(),core.Wb(0,\"button\",0,1),core.ec(\"click\",function(){return ctx._onButtonClick()}),core.Wb(2,\"span\",2),core.nc(3),core.Vb(),core.Vb(),core.Rb(4,\"span\",3),core.Rb(5,\"span\",4)),2&rf){const _r0=core.vc(1);core.pc(\"id\",ctx.buttonId)(\"disabled\",ctx.disabled||null),core.Eb(\"tabindex\",ctx.disabled?-1:ctx.tabIndex)(\"aria-pressed\",ctx.checked)(\"name\",ctx.name||null)(\"aria-label\",ctx.ariaLabel)(\"aria-labelledby\",ctx.ariaLabelledby),core.Db(5),core.pc(\"matRippleTrigger\",_r0)(\"matRippleDisabled\",ctx.disableRipple||ctx.disabled)}},directives:[fesm2015_core.q],styles:[\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"],encapsulation:2,changeDetection:0}),MatButtonToggle})(),button_toggle_MatButtonToggleModule=(()=>{class MatButtonToggleModule{}return MatButtonToggleModule.ɵmod=core.Ob({type:MatButtonToggleModule}),MatButtonToggleModule.ɵinj=core.Nb({factory:function(t){return new(t||MatButtonToggleModule)},imports:[[fesm2015_core.j,fesm2015_core.r],fesm2015_core.j]}),MatButtonToggleModule})();var input=__webpack_require__(\"e6WT\"),fesm2015_button=__webpack_require__(\"Dxy4\"),icon=__webpack_require__(\"Tj54\"),tooltip=__webpack_require__(\"ZFy/\"),progress_spinner=__webpack_require__(\"pu8Q\"),src=__webpack_require__(\"g7MM\"),gtag_src=__webpack_require__(\"fi6C\"),readme_src=__webpack_require__(\"C1VQ\"),redirect_src=__webpack_require__(\"CSIE\"),switchMap=__webpack_require__(\"eIep\"),map=__webpack_require__(\"lJxs\"),shareReplay=__webpack_require__(\"UXun\"),BehaviorSubject=__webpack_require__(\"2Vo4\"),lib=__webpack_require__(\"uTCh\");const STRIPE_ELEMENTS_OPTIONS=new core.s(\"wizdm.stripe.elements.options\");let elements_directive_StripeElementsDirective=(()=>{class StripeElementsDirective{constructor(stripe,options){this.locale$=new BehaviorSubject.a(void 0),this.elements$=stripe.stripe$.pipe(Object(switchMap.a)(stripe=>this.locale$.pipe(Object(map.a)(locale=>stripe.elements(Object.assign(Object.assign({},options),{locale:locale}))))),Object(shareReplay.a)(1))}set StripeElements(locale){this.locale$.next(locale)}create(elementType,options){return this.elements$.pipe(Object(map.a)(elements=>elements.create(elementType,options)))}}return StripeElementsDirective.ɵfac=function(t){return new(t||StripeElementsDirective)(core.Qb(lib.b),core.Qb(STRIPE_ELEMENTS_OPTIONS,8))},StripeElementsDirective.ɵdir=core.Lb({type:StripeElementsDirective,selectors:[[\"\",\"StripeElements\",\"\"]],inputs:{StripeElements:\"StripeElements\"},exportAs:[\"StripeElements\"]}),StripeElementsDirective})();var take=__webpack_require__(\"IzEk\"),tap=__webpack_require__(\"vkgz\"),Subject=__webpack_require__(\"XNiG\");let element_directive_StripeElementDirective=(()=>{class StripeElementDirective{constructor(elementType,elements,ref){if(this.init$=new Subject.a,this._options={},this.valueChange=new core.o,this.readyChange=new core.o(!0),this.focusChange=new core.o,this.blurChange=new core.o,this.escapeChange=new core.o,!elements)throw new Error(\"\\n      You're attempting to use a Stripe Element out of a proper StripeElements container.\\n      Make sure to wrap all the controls within a wm-stripe-elements directive.\\n    \");this.element$=this.init$.pipe(Object(take.a)(1),Object(switchMap.a)(options=>elements.create(elementType,options).pipe(Object(tap.a)(elm=>(this._instance&&this._instance.destroy(),elm.on(\"ready\",()=>{this.readyChange.emit(this._ready=!0)}),elm.on(\"focus\",()=>{this._focused=!0,this.focusChange.emit()}),elm.on(\"blur\",()=>{this._focused=!1,this.blurChange.emit()}),elm.mount(ref.nativeElement),this._instance=elm)))),Object(shareReplay.a)(1)),this.sub=this.element$.subscribe()}get instance(){return this._instance}get value(){return this._value}get empty(){return!this._value||this._value.empty}get complete(){return!!this._value&&this._value.complete}get error(){return!!this._value&&this._value.error||null}get ready(){return!!this._ready}get focused(){return!!this._focused}get disabled(){return!1}get options(){return this._options||(this._options={})}get classes(){return this._options.classes||(this._options.classes={})}get style(){return this._options.style||(this._options.style={})}init(options){this.init$.next(options)}forward(fn){if(this.instance)return fn(this.instance);this.element$.pipe(Object(take.a)(1)).subscribe(instance=>fn(instance))}disable(_){}focus(){this.forward(instance=>instance.focus())}blur(){this.forward(instance=>instance.blur())}clear(){this.forward(instance=>instance.clear())}set classBase(value){this.classes.base=value}set classComplete(value){this.classes.complete=value}set classEmpty(value){this.classes.empty=value}set classFocus(value){this.classes.focus=value}set classInvalid(value){this.classes.invalid=value}ngOnDestroy(){this.forward(instance=>instance.destroy()),this.sub.unsubscribe()}}return StripeElementDirective.ɵfac=function(t){core.dc()},StripeElementDirective.ɵdir=core.Lb({type:StripeElementDirective,inputs:{classBase:\"classBase\",classComplete:\"classComplete\",classEmpty:\"classEmpty\",classFocus:\"classFocus\",classInvalid:\"classInvalid\"},outputs:{valueChange:\"change\",readyChange:\"ready\",focusChange:\"focus\",blurChange:\"blur\",escapeChange:\"escape\"}}),StripeElementDirective})();var Subscription=__webpack_require__(\"quSY\");let control_directive_StripeControlDirective=(()=>{class StripeControlDirective{constructor(element){this.element=element,this.sub=new Subscription.a}ngOnDestroy(){this.sub.unsubscribe()}writeValue(value){value||this.element.clear()}setDisabledState(disabled){this.element.disable(disabled)}registerOnChange(fn){this.sub.add(this.element.valueChange.subscribe(value=>fn(value.complete?this.element.instance:null)))}registerOnTouched(fn){this.sub.add(this.element.blurChange.subscribe(()=>fn()))}validate(control){if(this.element.complete){const errorType=this.element.error&&this.element.error.type;return errorType?{[errorType]:this.element.error.message}:null}return{required:!0}}}return StripeControlDirective.ɵfac=function(t){return new(t||StripeControlDirective)(core.Qb(element_directive_StripeElementDirective))},StripeControlDirective.ɵdir=core.Lb({type:StripeControlDirective}),StripeControlDirective})(),elements_module_StripeElementsModule=(()=>{class StripeElementsModule{constructor(platformId){if(!Object(common.v)(platformId))throw new Error(\"StripeModule package supports Browsers only\")}static init(options){return{ngModule:StripeElementsModule,providers:[{provide:STRIPE_ELEMENTS_OPTIONS,useValue:options}]}}}return StripeElementsModule.ɵmod=core.Ob({type:StripeElementsModule}),StripeElementsModule.ɵinj=core.Nb({factory:function(t){return new(t||StripeElementsModule)(core.ac(core.D))}}),StripeElementsModule})(),card_component_StripeCardControl=(()=>{class StripeCardControl extends control_directive_StripeControlDirective{}return StripeCardControl.ɵfac=function(t){return ɵStripeCardControl_BaseFactory(t||StripeCardControl)},StripeCardControl.ɵdir=core.Lb({type:StripeCardControl,selectors:[[\"wm-stripe-card\",\"ngModel\",\"\"],[\"wm-stripe-card\",\"formControl\",\"\"],[\"wm-stripe-card\",\"formControlName\",\"\"]],features:[core.Cb([{provide:fesm2015_forms.k,useExisting:Object(core.W)(()=>StripeCardControl),multi:!0},{provide:fesm2015_forms.j,useExisting:Object(core.W)(()=>StripeCardControl),multi:!0}]),core.Ab]}),StripeCardControl})();const ɵStripeCardControl_BaseFactory=core.Yb(card_component_StripeCardControl);let card_component_StripeCard=(()=>{class StripeCard extends element_directive_StripeElementDirective{constructor(elements,ref){super(\"card\",elements,ref),this.ref=ref,this.forward(elm=>{elm.on(\"change\",value=>this.valueChange.emit(this._value=value)),elm.on(\"escape\",()=>this.escapeChange.emit())})}get disabled(){return!!this.options.disabled}disable(disabled){this.disabled=disabled,this.forward(elm=>elm.update(this.options))}ngOnInit(){this.init(this.options)}ngOnChanges(){this.forward(elm=>elm.update(this.options))}set styleBase(value){this.style.base=\"auto\"===value?function(el){const computed=null===window||void 0===window?void 0:window.getComputedStyle(el);return{color:computed.color,fontFamily:computed.fontFamily,fontSize:computed.fontSize,fontStyle:computed.fontStyle,fontVariant:computed.fontVariant,fontWeight:computed.fontWeight,letterSpacing:computed.letterSpacing,textDecoration:computed.textDecoration,textShadow:computed.textShadow,textTransform:computed.textTransform}}(this.ref.nativeElement):value}set styleComplete(value){this.style.complete=value}styleEmpty(value){this.style.empty=value}styleInvalid(value){this.style.invalid=value}set hideIcon(value){this.options.hideIcon=Object(coercion.c)(value)}set hidePostalCode(value){this.options.hidePostalCode=Object(coercion.c)(value)}set iconStyle(value){this.options.iconStyle=value}set disabled(value){this.options.disabled=Object(coercion.c)(value)}}return StripeCard.ɵfac=function(t){return new(t||StripeCard)(core.Qb(elements_directive_StripeElementsDirective,8),core.Qb(core.l))},StripeCard.ɵcmp=core.Kb({type:StripeCard,selectors:[[\"wm-stripe-card\"]],inputs:{styleBase:\"styleBase\",styleComplete:\"styleComplete\",styleEmpty:\"styleEmpty\",styleInvalid:\"styleInvalid\",hideIcon:\"hideIcon\",hidePostalCode:\"hidePostalCode\",iconStyle:\"iconStyle\",disabled:\"disabled\"},features:[core.Cb([{provide:element_directive_StripeElementDirective,useExisting:Object(core.W)(()=>StripeCard)}]),core.Ab,core.Bb],decls:0,vars:0,template:function(rf,ctx){},encapsulation:2}),StripeCard})(),card_module_StripeCardModule=(()=>{class StripeCardModule{}return StripeCardModule.ɵmod=core.Ob({type:StripeCardModule}),StripeCardModule.ɵinj=core.Nb({factory:function(t){return new(t||StripeCardModule)},imports:[[]]}),StripeCardModule})();var merge=__webpack_require__(\"VRyK\");let material_directive_StripeMaterialDirective=(()=>{class StripeMaterialDirective{constructor(element){this.element=element,this.stateChanges=Object(merge.a)(element.readyChange,element.focusChange,element.blurChange,element.valueChange)}get value(){return this.element.value||null}get focused(){return this.element.focused}get empty(){return!this.element.empty}get disabled(){return this.element.disabled}get shouldLabelFloat(){return!0}get errorState(){const value=this.element.value;return!!value&&!!value.error}setDescribedByIds(ids){}onContainerClick(event){this.element.focus()}}return StripeMaterialDirective.ɵfac=function(t){return new(t||StripeMaterialDirective)(core.Qb(element_directive_StripeElementDirective))},StripeMaterialDirective.ɵdir=core.Lb({type:StripeMaterialDirective,selectors:[[\"\",\"matStripe\",\"\"]],hostAttrs:[1,\"wm-stripe-material\"],features:[core.Cb([{provide:form_field.d,useExisting:Object(core.W)(()=>StripeMaterialDirective)}])]}),StripeMaterialDirective})(),material_module_StripeMaterialModule=(()=>{class StripeMaterialModule{}return StripeMaterialModule.ɵmod=core.Ob({type:StripeMaterialModule}),StripeMaterialModule.ɵinj=core.Nb({factory:function(t){return new(t||StripeMaterialModule)},imports:[[]]}),StripeMaterialModule})();var delay=__webpack_require__(\"3E0/\"),startWith=__webpack_require__(\"JX91\"),lib_functions=__webpack_require__(\"+aPl\"),platform=__webpack_require__(\"OWci\"),animations=__webpack_require__(\"GS7A\");let $animations=[Object(animations.o)(\"error\",[Object(animations.n)(\":enter\",[Object(animations.m)({opacity:\"0\",height:\"0\",transform:\"scaleY(0) rotateX(90deg)\"}),Object(animations.e)(\"500ms ease\",Object(animations.m)(\"*\"))]),Object(animations.n)(\":leave\",[Object(animations.e)(\"500ms ease\",Object(animations.m)({opacity:\"0\",height:\"0\",transform:\"scaleY(0) rotateX(90deg)\"}))])])];var of=__webpack_require__(\"LRne\"),environment=__webpack_require__(\"HOC2\"),content_directive=__webpack_require__(\"Qfjl\"),gtag_directive=__webpack_require__(\"FkMH\"),readme_component=__webpack_require__(\"n8oj\"),flex=__webpack_require__(\"VDRc\");function DonateComponent_ng_container_0_mat_error_12_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.form||null==msgs_r1.form.name?null:msgs_r1.form.name.error)||\"Please provide your name\")}}function DonateComponent_ng_container_0_mat_error_20_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.form||null==msgs_r1.form.email?null:msgs_r1.form.email.error)||\"Please provide a valid email\")}}function DonateComponent_ng_container_0_mat_button_toggle_27_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-button-toggle\",23),core.ec(\"mousedown\",function(){return!1}),core.Ic(1),core.Vb()),2&rf){const option_r17=ctx.$implicit;core.pc(\"value\",option_r17.value),core.Db(1),core.Jc(option_r17.label)}}function DonateComponent_ng_container_0_mat_error_34_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.form||null==msgs_r1.form.amount?null:msgs_r1.form.amount.error)||\"Please choose a proper amount\")}}function DonateComponent_ng_container_0_mat_error_43_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){core.ic();const _r11=core.vc(41);core.Db(1),core.Jc(_r11.error.message)}}function DonateComponent_ng_container_0_p_46_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"p\",24),core.Ic(1),core.Vb()),2&rf){const ctx_r13=core.ic(2);core.pc(\"@error\",void 0),core.Db(1),core.Jc(ctx_r13.error)}}function DonateComponent_ng_container_0_mat_progress_spinner_48_Template(rf,ctx){1&rf&&core.Rb(0,\"mat-progress-spinner\",25)}function DonateComponent_ng_container_0_Template(rf,ctx){if(1&rf){const _r21=core.Xb();core.Ub(0,1),core.Wb(1,\"h1\"),core.Ic(2),core.Vb(),core.Wb(3,\"p\",2),core.Ic(4,\" Thanks to your generosity we are able to cover for the costs exceeding the free quotas of the various online services the project is based upon. \"),core.Vb(),core.Wb(5,\"form\",3,4),core.ec(\"ngSubmit\",function(){core.yc(_r21);const ctx_r20=core.ic();return ctx_r20.pay(ctx_r20.stripe)}),core.Wb(7,\"mat-form-field\"),core.Wb(8,\"mat-label\"),core.Ic(9),core.Vb(),core.Wb(10,\"input\",5,6),core.ec(\"ngModelChange\",function($event){return core.yc(_r21),core.ic().name=$event}),core.Vb(),core.Gc(12,DonateComponent_ng_container_0_mat_error_12_Template,2,1,\"mat-error\",7),core.Wb(13,\"mat-hint\"),core.Ic(14),core.Vb(),core.Vb(),core.Wb(15,\"mat-form-field\"),core.Wb(16,\"mat-label\"),core.Ic(17),core.Vb(),core.Wb(18,\"input\",8,9),core.ec(\"ngModelChange\",function($event){return core.yc(_r21),core.ic().email=$event}),core.Vb(),core.Gc(20,DonateComponent_ng_container_0_mat_error_20_Template,2,1,\"mat-error\",7),core.Wb(21,\"mat-hint\"),core.Ic(22),core.Vb(),core.Vb(),core.Wb(23,\"mat-form-field\",10),core.Wb(24,\"mat-label\"),core.Ic(25),core.Vb(),core.Wb(26,\"mat-button-toggle-group\",11),core.ec(\"ngModelChange\",function($event){return core.yc(_r21),core.ic().amount=$event}),core.Gc(27,DonateComponent_ng_container_0_mat_button_toggle_27_Template,2,2,\"mat-button-toggle\",12),core.Wb(28,\"mat-button-toggle\",13),core.ec(\"mousedown\",function(){return!1}),core.Ic(29),core.Vb(),core.Wb(30,\"input\",14,15),core.ec(\"ngModelChange\",function($event){return core.yc(_r21),core.ic().amount=$event}),core.Vb(),core.Vb(),core.Wb(32,\"mat-hint\"),core.Ic(33),core.Vb(),core.Gc(34,DonateComponent_ng_container_0_mat_error_34_Template,2,1,\"mat-error\",7),core.Wb(35,\"button\",16),core.ec(\"mousedown\",function(){return!1})(\"click\",function(){return core.yc(_r21),core.ic().toggleCurrency()}),core.Rb(36,\"mat-icon\",17),core.Vb(),core.Vb(),core.Wb(37,\"mat-form-field\"),core.Wb(38,\"mat-label\"),core.Ic(39),core.Vb(),core.Wb(40,\"wm-stripe-card\",18,19),core.ec(\"ngModelChange\",function($event){return core.yc(_r21),core.ic().card=$event})(\"ready\",function($event){return core.yc(_r21),core.ic().ready=$event}),core.jc(42,\"async\"),core.Vb(),core.Gc(43,DonateComponent_ng_container_0_mat_error_43_Template,2,1,\"mat-error\",7),core.Wb(44,\"mat-hint\"),core.Ic(45),core.Vb(),core.Vb(),core.Gc(46,DonateComponent_ng_container_0_p_46_Template,2,2,\"p\",20),core.Wb(47,\"button\",21),core.Gc(48,DonateComponent_ng_container_0_mat_progress_spinner_48_Template,1,0,\"mat-progress-spinner\",22),core.Wb(49,\"span\"),core.Ic(50),core.Vb(),core.Vb(),core.Vb(),core.Tb()}if(2&rf){const msgs_r1=ctx.$implicit,lang_r2=ctx.language,_r3=core.vc(6),_r4=core.vc(11),_r6=core.vc(19),_r9=core.vc(31),_r11=core.vc(41),ctx_r0=core.ic();core.Db(2),core.Jc(ctx_r0.completed?msgs_r1.thanks||\"Thank You 🙏🏻\":msgs_r1.title||\"Contribute to Wizdm\"),core.Db(1),core.pc(\"wm-readme\",msgs_r1.intro),core.Db(2),core.pc(\"StripeElements\",lang_r2),core.Db(4),core.Jc((null==msgs_r1.form||null==msgs_r1.form.name?null:msgs_r1.form.name.label)||\"Name\"),core.Db(1),core.pc(\"ngModel\",ctx_r0.name)(\"disabled\",!ctx_r0.ready||ctx_r0.progress),core.Db(2),core.pc(\"ngIf\",!_r4.valid),core.Db(2),core.Jc((null==msgs_r1.form||null==msgs_r1.form.name?null:msgs_r1.form.name.hint)||\"Your name here\"),core.Db(3),core.Jc((null==msgs_r1.form||null==msgs_r1.form.email?null:msgs_r1.form.email.label)||\"Email\"),core.Db(1),core.pc(\"ngModel\",ctx_r0.email)(\"disabled\",!ctx_r0.ready||ctx_r0.progress),core.Db(2),core.pc(\"ngIf\",!_r6.valid),core.Db(2),core.Jc((null==msgs_r1.form||null==msgs_r1.form.email?null:msgs_r1.form.email.hint)||\"We'll send you the rececipt here\"),core.Db(3),core.Jc((null==msgs_r1.form||null==msgs_r1.form.amount?null:msgs_r1.form.amount.label)||\"Amount\"),core.Db(1),core.pc(\"ngModel\",ctx_r0.amount),core.Db(1),core.pc(\"ngForOf\",(null==msgs_r1.form||null==msgs_r1.form.amount?null:msgs_r1.form.amount.options)||ctx_r0.defaultAmoutOptions),core.Db(2),core.Kc(\"\",(null==msgs_r1||null==msgs_r1.form||null==msgs_r1.form.amount?null:msgs_r1.form.amount.custom)||\"Other:\",\" \"),core.Db(1),core.pc(\"ngModel\",ctx_r0.amount)(\"placeholder\",(null==msgs_r1.form||null==msgs_r1.form.amount?null:msgs_r1.form.amount.placeholder)||\"Enter the amount\")(\"disabled\",!ctx_r0.ready||ctx_r0.progress),core.Db(3),core.Jc((null==msgs_r1.form||null==msgs_r1.form.amout?null:msgs_r1.form.amout.hint)||\"Choose the amount\"),core.Db(1),core.pc(\"ngIf\",!_r9.valid),core.Db(1),core.pc(\"disabled\",_r9.disabled),core.Db(1),core.pc(\"fontIcon\",\"eur\"===ctx_r0.currency?\"fa-euro-sign\":\"fa-dollar-sign\"),core.Db(3),core.Jc((null==msgs_r1.form?null:msgs_r1.form.card.label)||\"Credit card\"),core.Db(1),core.pc(\"ngModel\",ctx_r0.card)(\"disabled\",!ctx_r0.ready||ctx_r0.progress)(\"styleBase\",core.kc(42,34,ctx_r0.autoMode$)||\"auto\"),core.Db(3),core.pc(\"ngIf\",_r11.error),core.Db(2),core.Jc((null==msgs_r1.form||null==msgs_r1.form.card?null:msgs_r1.form.card.hint)||\"Powered by Stripe\"),core.Db(1),core.pc(\"ngIf\",ctx_r0.error),core.Db(1),core.pc(\"disabled\",!_r3.valid||!ctx_r0.ready||ctx_r0.progress),core.Db(1),core.pc(\"ngIf\",ctx_r0.progress),core.Db(2),core.Jc((null==msgs_r1.form?null:msgs_r1.form.action)||\"Donate Now\")}}let donate_component_DonateComponent=(()=>{class DonateComponent{constructor(stripe,functions,dark){this.stripe=stripe,this.functions=functions,this.email=\"\",this.name=\"\",this.currency=\"eur\",this.ready=!1,this.progress=!1,this.completed=!1,this.defaultAmoutOptions=[{label:\"5\",value:5},{label:\"25\",value:25},{label:\"100\",value:100}],this.createPaymentIntent=this.functions.callable(\"createPaymentIntent\"),this.autoMode$=dark.pipe(Object(switchMap.a)(()=>Object(of.a)(\"auto\").pipe(Object(delay.a)(0),Object(startWith.a)({}))))}toggleCurrency(){this.currency=\"eur\"===this.currency?\"usd\":\"eur\"}pay(){this.completed=!1,this.progress=!0,this.error=\"\",console.log(\"Creating payment intent for\",this.amount,this.currency),this.createPaymentIntent({amount:100*this.amount,currency:this.currency,testMode:!environment.a.production}).then(intent=>(console.log(\"Confirming payment intent\",intent.id),this.stripe.confirmCardPayment(intent.client_secret,{payment_method:{card:this.card,billing_details:{name:this.name,email:this.email}}}))).then(result=>{var _a,_b;console.log(\"Transaction completed\",null===(_a=result.paymentIntent)||void 0===_a?void 0:_a.status),this.error=null===(_b=result.error)||void 0===_b?void 0:_b.message,this.progress=!1,this.completed=!this.error,this.card.clear()}).catch(e=>{console.log(\"Transaction terminated\",e),this.error=e.message||e.code,this.completed=this.progress=!1,this.card.clear()})}}return DonateComponent.ɵfac=function(t){return new(t||DonateComponent)(core.Qb(lib.b),core.Qb(lib_functions.b),core.Qb(platform.a))},DonateComponent.ɵcmp=core.Kb({type:DonateComponent,selectors:[[\"wm-donate\"]],decls:1,vars:1,consts:[[\"scrollPositionRestoration\",\"top\",\"gtag\",\"donate\",4,\"wmContent\",\"wmContentSelect\"],[\"scrollPositionRestoration\",\"top\",\"gtag\",\"donate\"],[3,\"wm-readme\"],[\"fxLayout\",\"column\",\"fxLayoutAlign\",\"center stretch\",\"fxLayoutGap\",\"16px\",3,\"StripeElements\",\"ngSubmit\"],[\"form\",\"ngForm\"],[\"matInput\",\"\",\"name\",\"name\",\"required\",\"\",3,\"ngModel\",\"disabled\",\"ngModelChange\"],[\"formName\",\"ngModel\"],[4,\"ngIf\"],[\"matInput\",\"\",\"name\",\"email\",\"email\",\"\",\"required\",\"\",3,\"ngModel\",\"disabled\",\"ngModelChange\"],[\"formEmail\",\"ngModel\"],[\"floatLabel\",\"always\"],[\"name\",\"amount\",3,\"ngModel\",\"ngModelChange\"],[3,\"value\",\"mousedown\",4,\"ngFor\",\"ngForOf\"],[\"value\",\"\",3,\"mousedown\"],[\"matInput\",\"\",\"name\",\"amount\",\"required\",\"\",\"autocomplete\",\"off\",\"pattern\",\"\\\\d*\",2,\"text-align\",\"center\",3,\"ngModel\",\"placeholder\",\"disabled\",\"ngModelChange\"],[\"formAmount\",\"ngModel\"],[\"mat-icon-button\",\"\",\"matSuffix\",\"\",\"matTooltip\",\"Switch currency\",\"type\",\"button\",3,\"disabled\",\"mousedown\",\"click\"],[\"inline\",\"\",\"fontSet\",\"fas\",3,\"fontIcon\"],[\"matStripe\",\"\",\"hidePostalCode\",\"\",\"name\",\"card\",\"required\",\"\",3,\"ngModel\",\"disabled\",\"styleBase\",\"ngModelChange\",\"ready\"],[\"formCard\",\"\"],[\"class\",\"mat-error\",4,\"ngIf\"],[\"mat-flat-button\",\"\",\"type\",\"submit\",\"color\",\"primary\",3,\"disabled\"],[\"mode\",\"indeterminate\",\"diameter\",\"30\",4,\"ngIf\"],[3,\"value\",\"mousedown\"],[1,\"mat-error\"],[\"mode\",\"indeterminate\",\"diameter\",\"30\"]],template:function(rf,ctx){1&rf&&core.Gc(0,DonateComponent_ng_container_0_Template,51,36,\"ng-container\",0),2&rf&&core.pc(\"wmContentSelect\",\"donate\")},directives:[content_directive.a,gtag_directive.a,readme_component.a,fesm2015_forms.u,fesm2015_forms.n,fesm2015_forms.o,flex.e,flex.d,flex.f,elements_directive_StripeElementsDirective,form_field.c,form_field.g,input.b,fesm2015_forms.c,fesm2015_forms.s,fesm2015_forms.m,fesm2015_forms.p,common.m,form_field.f,fesm2015_forms.d,button_toggle_MatButtonToggleGroup,common.l,button_toggle_MatButtonToggle,fesm2015_forms.q,fesm2015_button.b,form_field.i,tooltip.b,icon.a,card_component_StripeCard,card_component_StripeCardControl,material_directive_StripeMaterialDirective,form_field.b,progress_spinner.a],pipes:[common.b],styles:[\"[_nghost-%COMP%]{position:relative;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;box-sizing:border-box;padding:24px}[_nghost-%COMP%]   form[_ngcontent-%COMP%]{max-width:80%;width:400px}[_nghost-%COMP%]   p[_ngcontent-%COMP%]{text-align:justify}[_nghost-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%], [_nghost-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]{border:none}[_nghost-%COMP%]   .mat-progress-spinner[_ngcontent-%COMP%]{position:absolute;left:calc(50% - 15px);top:calc(50% - 15px)}\"],data:{animation:$animations}}),DonateComponent})();__webpack_require__(\"J3Me\");const{stripeElements:stripeElements}=environment.a,routes=[{path:\"\",content:\"donate\",component:donate_component_DonateComponent}];let donate_module_DonateModule=(()=>{class DonateModule{}return DonateModule.ɵmod=core.Ob({type:DonateModule}),DonateModule.ɵinj=core.Nb({factory:function(t){return new(t||DonateModule)},imports:[[common.c,fesm2015_forms.i,flex_layout.a,form_field.e,button_toggle_MatButtonToggleModule,fesm2015_button.c,input.c,icon.b,tooltip.c,progress_spinner.b,gtag_src.a,readme_src.a,redirect_src.a,elements_module_StripeElementsModule,card_module_StripeCardModule,material_module_StripeMaterialModule,elements_module_StripeElementsModule.init(stripeElements),src.e.forChild(routes)]]}),DonateModule})()}}]);","name":"25-es2015.e7828925119a771814ce.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[25],{\n\n/***/ \"6Ylu\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"DonateModule\", function() { return /* binding */ donate_module_DonateModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/fesm2015/common.js\nvar common = __webpack_require__(\"SVse\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"s7LF\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex-layout.js + 1 modules\nvar flex_layout = __webpack_require__(\"u9T3\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/form-field.js\nvar form_field = __webpack_require__(\"Q2Ze\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/coercion.js\nvar coercion = __webpack_require__(\"8LU1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/collections.js\nvar collections = __webpack_require__(\"CtHx\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/fesm2015/core.js\nvar core = __webpack_require__(\"8Y7J\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/core.js + 1 modules\nvar fesm2015_core = __webpack_require__(\"UhP/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/a11y.js\nvar a11y = __webpack_require__(\"YEUz\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/button-toggle.js\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\n\n\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */],\n    useExisting: /*@__PURE__*/ Object(core[\"W\" /* forwardRef */])(() => button_toggle_MatButtonToggleGroup),\n    multi: true\n};\nlet _uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nlet button_toggle_MatButtonToggleGroup = /*@__PURE__*/ (() => {\n    class MatButtonToggleGroup {\n        constructor(_changeDetector, defaultOptions) {\n            this._changeDetector = _changeDetector;\n            this._vertical = false;\n            this._multiple = false;\n            this._disabled = false;\n            /**\n             * The method to be called in order to update ngModel.\n             * Now `ngModel` binding is not supported in multiple selection mode.\n             */\n            this._controlValueAccessorChangeFn = () => { };\n            /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n            this._onTouched = () => { };\n            this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n            /**\n             * Event that emits whenever the value of the group changes.\n             * Used to facilitate two-way data binding.\n             * @docs-private\n             */\n            this.valueChange = new core[\"o\" /* EventEmitter */]();\n            /** Event emitted when the group's value changes. */\n            this.change = new core[\"o\" /* EventEmitter */]();\n            this.appearance =\n                defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n        }\n        /** `name` attribute for the underlying `input` element. */\n        get name() { return this._name; }\n        set name(value) {\n            this._name = value;\n            if (this._buttonToggles) {\n                this._buttonToggles.forEach(toggle => {\n                    toggle.name = this._name;\n                    toggle._markForCheck();\n                });\n            }\n        }\n        /** Whether the toggle group is vertical. */\n        get vertical() { return this._vertical; }\n        set vertical(value) {\n            this._vertical = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Value of the toggle group. */\n        get value() {\n            const selected = this._selectionModel ? this._selectionModel.selected : [];\n            if (this.multiple) {\n                return selected.map(toggle => toggle.value);\n            }\n            return selected[0] ? selected[0].value : undefined;\n        }\n        set value(newValue) {\n            this._setSelectionByValue(newValue);\n            this.valueChange.emit(this.value);\n        }\n        /** Selected button toggles in the group. */\n        get selected() {\n            const selected = this._selectionModel ? this._selectionModel.selected : [];\n            return this.multiple ? selected : (selected[0] || null);\n        }\n        /** Whether multiple button toggles can be selected. */\n        get multiple() { return this._multiple; }\n        set multiple(value) {\n            this._multiple = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Whether multiple button toggle group is disabled. */\n        get disabled() { return this._disabled; }\n        set disabled(value) {\n            this._disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (this._buttonToggles) {\n                this._buttonToggles.forEach(toggle => toggle._markForCheck());\n            }\n        }\n        ngOnInit() {\n            this._selectionModel = new collections[\"c\" /* SelectionModel */](this.multiple, undefined, false);\n        }\n        ngAfterContentInit() {\n            this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n        }\n        /**\n         * Sets the model value. Implemented as part of ControlValueAccessor.\n         * @param value Value to be set to the model.\n         */\n        writeValue(value) {\n            this.value = value;\n            this._changeDetector.markForCheck();\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnChange(fn) {\n            this._controlValueAccessorChangeFn = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n        }\n        /** Dispatch change event with current selection and group value. */\n        _emitChangeEvent() {\n            const selected = this.selected;\n            const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n            const event = new MatButtonToggleChange(source, this.value);\n            this._controlValueAccessorChangeFn(event.value);\n            this.change.emit(event);\n        }\n        /**\n         * Syncs a button toggle's selected state with the model value.\n         * @param toggle Toggle to be synced.\n         * @param select Whether the toggle should be selected.\n         * @param isUserInput Whether the change was a result of a user interaction.\n         * @param deferEvents Whether to defer emitting the change events.\n         */\n        _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n            // Deselect the currently-selected toggle, if we're in single-selection\n            // mode and the button being toggled isn't selected at the moment.\n            if (!this.multiple && this.selected && !toggle.checked) {\n                this.selected.checked = false;\n            }\n            if (this._selectionModel) {\n                if (select) {\n                    this._selectionModel.select(toggle);\n                }\n                else {\n                    this._selectionModel.deselect(toggle);\n                }\n            }\n            else {\n                deferEvents = true;\n            }\n            // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n            // the side-effect is that we may end up updating the model value out of sequence in others\n            // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n            if (deferEvents) {\n                Promise.resolve().then(() => this._updateModelValue(isUserInput));\n            }\n            else {\n                this._updateModelValue(isUserInput);\n            }\n        }\n        /** Checks whether a button toggle is selected. */\n        _isSelected(toggle) {\n            return this._selectionModel && this._selectionModel.isSelected(toggle);\n        }\n        /** Determines whether a button toggle should be checked on init. */\n        _isPrechecked(toggle) {\n            if (typeof this._rawValue === 'undefined') {\n                return false;\n            }\n            if (this.multiple && Array.isArray(this._rawValue)) {\n                return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n            }\n            return toggle.value === this._rawValue;\n        }\n        /** Updates the selection state of the toggles in the group based on a value. */\n        _setSelectionByValue(value) {\n            this._rawValue = value;\n            if (!this._buttonToggles) {\n                return;\n            }\n            if (this.multiple && value) {\n                if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw Error('Value must be an array in multiple-selection mode.');\n                }\n                this._clearSelection();\n                value.forEach((currentValue) => this._selectValue(currentValue));\n            }\n            else {\n                this._clearSelection();\n                this._selectValue(value);\n            }\n        }\n        /** Clears the selected toggles. */\n        _clearSelection() {\n            this._selectionModel.clear();\n            this._buttonToggles.forEach(toggle => toggle.checked = false);\n        }\n        /** Selects a value if there's a toggle that corresponds to it. */\n        _selectValue(value) {\n            const correspondingOption = this._buttonToggles.find(toggle => {\n                return toggle.value != null && toggle.value === value;\n            });\n            if (correspondingOption) {\n                correspondingOption.checked = true;\n                this._selectionModel.select(correspondingOption);\n            }\n        }\n        /** Syncs up the group's value with the model and emits the change event. */\n        _updateModelValue(isUserInput) {\n            // Only emit the change event for user input.\n            if (isUserInput) {\n                this._emitChangeEvent();\n            }\n            // Note: we emit this one no matter whether it was a user interaction, because\n            // it is used by Angular to sync up the two-way data binding.\n            this.valueChange.emit(this.value);\n        }\n    }\n    MatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\n    MatButtonToggleGroup.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, button_toggle_MatButtonToggle, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._buttonToggles = _t);\n            }\n        }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"aria-disabled\", ctx.disabled);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n            }\n        }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n            ])] });\n    return MatButtonToggleGroup;\n})();\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nclass MatButtonToggleBase {\n}\nconst _MatButtonToggleMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"w\" /* mixinDisableRipple */])(MatButtonToggleBase);\nlet button_toggle_MatButtonToggle = /*@__PURE__*/ (() => {\n    class MatButtonToggle extends _MatButtonToggleMixinBase {\n        constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n            super();\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            this._focusMonitor = _focusMonitor;\n            this._isSingleSelector = false;\n            this._checked = false;\n            /**\n             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n             */\n            this.ariaLabelledby = null;\n            this._disabled = false;\n            /** Event emitted when the group value changes. */\n            this.change = new core[\"o\" /* EventEmitter */]();\n            const parsedTabIndex = Number(defaultTabIndex);\n            this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n            this.buttonToggleGroup = toggleGroup;\n            this.appearance =\n                defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n        }\n        /** Unique ID for the underlying `button` element. */\n        get buttonId() { return `${this.id}-button`; }\n        /** The appearance style of the button. */\n        get appearance() {\n            return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n        }\n        set appearance(value) {\n            this._appearance = value;\n        }\n        /** Whether the button is checked. */\n        get checked() {\n            return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n        }\n        set checked(value) {\n            const newValue = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (newValue !== this._checked) {\n                this._checked = newValue;\n                if (this.buttonToggleGroup) {\n                    this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n                }\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /** Whether the button is disabled. */\n        get disabled() {\n            return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n        }\n        set disabled(value) { this._disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value); }\n        ngOnInit() {\n            const group = this.buttonToggleGroup;\n            this._isSingleSelector = group && !group.multiple;\n            this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n            if (this._isSingleSelector) {\n                this.name = group.name;\n            }\n            if (group) {\n                if (group._isPrechecked(this)) {\n                    this.checked = true;\n                }\n                else if (group._isSelected(this) !== this._checked) {\n                    // As as side effect of the circular dependency between the toggle group and the button,\n                    // we may end up in a state where the button is supposed to be checked on init, but it\n                    // isn't, because the checked value was assigned too early. This can happen when Ivy\n                    // assigns the static input value before the `ngOnInit` has run.\n                    group._syncButtonToggle(this, this._checked);\n                }\n            }\n        }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true);\n        }\n        ngOnDestroy() {\n            const group = this.buttonToggleGroup;\n            this._focusMonitor.stopMonitoring(this._elementRef);\n            // Remove the toggle from the selection once it's destroyed. Needs to happen\n            // on the next tick in order to avoid \"changed after checked\" errors.\n            if (group && group._isSelected(this)) {\n                group._syncButtonToggle(this, false, false, true);\n            }\n        }\n        /** Focuses the button. */\n        focus(options) {\n            this._buttonElement.nativeElement.focus(options);\n        }\n        /** Checks the button toggle due to an interaction with the underlying native button. */\n        _onButtonClick() {\n            const newChecked = this._isSingleSelector ? true : !this._checked;\n            if (newChecked !== this._checked) {\n                this._checked = newChecked;\n                if (this.buttonToggleGroup) {\n                    this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                    this.buttonToggleGroup._onTouched();\n                }\n            }\n            // Emit a change event when it's the single selector\n            this.change.emit(new MatButtonToggleChange(this, this.value));\n        }\n        /**\n         * Marks the button toggle as needing checking for change detection.\n         * This method is exposed because the parent button toggle group will directly\n         * update bound properties of the radio button.\n         */\n        _markForCheck() {\n            // When the group value changes, the button will not be notified.\n            // Use `markForCheck` to explicit update button toggle's status.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    MatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(core[\"Qb\" /* ɵɵdirectiveInject */](MAT_BUTTON_TOGGLE_GROUP, 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](a11y[\"h\" /* FocusMonitor */]), core[\"bc\" /* ɵɵinjectAttribute */]('tabindex'), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\n    MatButtonToggle.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](_c0, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._buttonElement = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"], hostVars: 12, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n            }\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n            }\n        }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */]();\n                core[\"Wb\" /* ɵɵelementStart */](0, \"button\", 0, 1);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n                core[\"Wb\" /* ɵɵelementStart */](2, \"span\", 2);\n                core[\"nc\" /* ɵɵprojection */](3);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelement */](4, \"span\", 3);\n                core[\"Rb\" /* ɵɵelement */](5, \"span\", 4);\n            }\n            if (rf & 2) {\n                const _r0 = core[\"vc\" /* ɵɵreference */](1);\n                core[\"pc\" /* ɵɵproperty */](\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n                core[\"Eb\" /* ɵɵattribute */](\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n                core[\"Db\" /* ɵɵadvance */](5);\n                core[\"pc\" /* ɵɵproperty */](\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n            }\n        }, directives: [fesm2015_core[\"q\" /* MatRipple */]], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatButtonToggle;\n})();\nlet button_toggle_MatButtonToggleModule = /*@__PURE__*/ (() => {\n    class MatButtonToggleModule {\n    }\n    MatButtonToggleModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatButtonToggleModule });\n    MatButtonToggleModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); }, imports: [[fesm2015_core[\"j\" /* MatCommonModule */], fesm2015_core[\"r\" /* MatRippleModule */]], fesm2015_core[\"j\" /* MatCommonModule */]] });\n    return MatButtonToggleModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](button_toggle_MatButtonToggleModule, { declarations: function () { return [button_toggle_MatButtonToggleGroup, button_toggle_MatButtonToggle]; }, imports: function () { return [fesm2015_core[\"j\" /* MatCommonModule */], fesm2015_core[\"r\" /* MatRippleModule */]]; }, exports: function () { return [fesm2015_core[\"j\" /* MatCommonModule */], button_toggle_MatButtonToggleGroup, button_toggle_MatButtonToggle]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=button-toggle.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/input.js\nvar input = __webpack_require__(\"e6WT\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/button.js\nvar fesm2015_button = __webpack_require__(\"Dxy4\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/icon.js\nvar icon = __webpack_require__(\"Tj54\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/tooltip.js + 1 modules\nvar tooltip = __webpack_require__(\"ZFy/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/progress-spinner.js\nvar progress_spinner = __webpack_require__(\"pu8Q\");\n\n// EXTERNAL MODULE: ./content/src/index.ts + 1 modules\nvar src = __webpack_require__(\"g7MM\");\n\n// EXTERNAL MODULE: ./gtag/src/index.ts + 1 modules\nvar gtag_src = __webpack_require__(\"fi6C\");\n\n// EXTERNAL MODULE: ./readme/src/index.ts + 2 modules\nvar readme_src = __webpack_require__(\"C1VQ\");\n\n// EXTERNAL MODULE: ./redirect/src/index.ts + 1 modules\nvar redirect_src = __webpack_require__(\"CSIE\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js\nvar switchMap = __webpack_require__(\"eIep\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js\nvar shareReplay = __webpack_require__(\"UXun\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./stripe/src/lib/index.ts\nvar lib = __webpack_require__(\"uTCh\");\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/elements.directive.ts\n\n\n\n\n\n\n/** StripeElementsModule configuration token */\nconst STRIPE_ELEMENTS_OPTIONS = new core[\"s\" /* InjectionToken */]('wizdm.stripe.elements.options');\n/** Relays the Elements funcitons enabling dynamic locale */\nlet elements_directive_StripeElementsDirective = /*@__PURE__*/ (() => {\n    class StripeElementsDirective {\n        constructor(stripe, options) {\n            this.locale$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](undefined);\n            this.elements$ = stripe.stripe$.pipe(Object(switchMap[\"a\" /* switchMap */])(stripe => this.locale$.pipe(Object(map[\"a\" /* map */])(locale => stripe.elements(Object.assign(Object.assign({}, options), { locale }))))), Object(shareReplay[\"a\" /* shareReplay */])(1));\n        }\n        /** The Elements locale to use. The locale is automatically detected when undefined */\n        set StripeElements(locale) {\n            this.locale$.next(locale);\n        }\n        /** Creates a Stripe Element of the given type using the given locale and options */\n        create(elementType, options) {\n            return this.elements$.pipe(Object(map[\"a\" /* map */])(elements => elements.create(elementType, options)));\n        }\n    }\n    StripeElementsDirective.ɵfac = function StripeElementsDirective_Factory(t) { return new (t || StripeElementsDirective)(core[\"Qb\" /* ɵɵdirectiveInject */](lib[\"b\" /* StripeService */]), core[\"Qb\" /* ɵɵdirectiveInject */](STRIPE_ELEMENTS_OPTIONS, 8)); };\n    StripeElementsDirective.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeElementsDirective, selectors: [[\"\", \"StripeElements\", \"\"]], inputs: { StripeElements: \"StripeElements\" }, exportAs: [\"StripeElements\"] });\n    return StripeElementsDirective;\n})();\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/take.js\nvar take = __webpack_require__(\"IzEk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/tap.js + 1 modules\nvar tap = __webpack_require__(\"vkgz\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/element.directive.ts\n\n\n\n\n\n\n/** @dynamic\n * Base element class turning a StripeElement into an Angular component with common features\n * To be used as the base class for all the Stripe related specific components: StripeCard...\n */\nlet element_directive_StripeElementDirective = /*@__PURE__*/ (() => {\n    class StripeElementDirective {\n        constructor(elementType, elements, ref) {\n            this.init$ = new Subject[\"a\" /* Subject */]();\n            this._options = {};\n            /** Emits on value changes */\n            this.valueChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when fully loaded */\n            this.readyChange = new core[\"o\" /* EventEmitter */](true);\n            /** Emits when focused */\n            this.focusChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when blurred */\n            this.blurChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when escape is pressed */\n            this.escapeChange = new core[\"o\" /* EventEmitter */]();\n            // Ensures the element is used within the StripeElement container\n            if (!elements) {\n                throw new Error(`\n      You're attempting to use a Stripe Element out of a proper StripeElements container.\n      Make sure to wrap all the controls within a wm-stripe-elements directive.\n    `);\n            }\n            // Creates the StripeElement observable\n            this.element$ = this.init$.pipe(Object(take[\"a\" /* take */])(1), Object(switchMap[\"a\" /* switchMap */])(options => elements.create(elementType, options).pipe(Object(tap[\"a\" /* tap */])(elm => {\n                // Disposes of the previous element instance, if any\n                this._instance && this._instance.destroy();\n                // Hooks on the common element's events\n                elm.on('ready', () => { this.readyChange.emit(this._ready = true); });\n                elm.on('focus', () => { this._focused = true; this.focusChange.emit(); });\n                elm.on('blur', () => { this._focused = false; this.blurChange.emit(); });\n                // Mounts the element on the DOM\n                elm.mount(ref.nativeElement);\n                // Keeps track of the current StripeElement instance\n                return this._instance = elm;\n            }))), Object(shareReplay[\"a\" /* shareReplay */])(1));\n            // Subscribes to the element's observable waiting for the init$ to emit\n            this.sub = this.element$.subscribe();\n        }\n        /** The StripeElement instance */\n        get instance() { return this._instance; }\n        /** The latest change value */\n        get value() { return this._value; }\n        /** True whenever the element is empty */\n        get empty() { return !this._value || this._value.empty; }\n        /** True whenever the element is complete and valid */\n        get complete() { return !!this._value && this._value.complete; }\n        /** The StripeError or null */\n        get error() { return !!this._value && this._value.error || null; }\n        /** True whenever the element is fully loaded */\n        get ready() { return !!this._ready; }\n        /** True whenever the element is focused */\n        get focused() { return !!this._focused; }\n        /** True whenever the element is disabled */\n        get disabled() { return false; }\n        /** Returns the current options object */\n        get options() { return this._options || (this._options = {}); }\n        /** Returns the current option classes object, if any */\n        get classes() { return this._options.classes || (this._options.classes = {}); }\n        /** Returns the current option style object, if any */\n        get style() { return this._options.style || (this._options.style = {}); }\n        /** Initialize the StripeElement with the given options */\n        init(options) {\n            // Pushes the initial element options object triggering the element$ Observable to emit\n            this.init$.next(options);\n        }\n        /** Forwards the given call to the StripeElement */\n        forward(fn) {\n            // Short circuits with the current instance, if any\n            if (this.instance) {\n                return fn(this.instance);\n            }\n            // Resolves the observable to get the latest instance otherwise\n            this.element$.pipe(Object(take[\"a\" /* take */])(1)).subscribe(instance => fn(instance));\n        }\n        /** Disables the element whenever possible. Ovverrides this default implementation to forward the status down the Element */\n        disable(_) { }\n        /** Focuses the element */\n        focus() { this.forward(instance => instance.focus()); }\n        /** Blurs the element */\n        blur() { this.forward(instance => instance.blur()); }\n        /** Clears the element */\n        clear() { this.forward(instance => instance.clear()); }\n        /** Class applied to the StripeElement's container. Defaults to StripeElement */\n        set classBase(value) { this.classes.base = value; }\n        /** The class name to apply when the Element is complete. Defaults to StripeElement--complete */\n        set classComplete(value) { this.classes.complete = value; }\n        /** The class name to apply when the Element is empty. Defaults to StripeElement--empty */\n        set classEmpty(value) { this.classes.empty = value; }\n        /** The class name to apply when the Element has focus. Defaults to StripeElement--focus */\n        set classFocus(value) { this.classes.focus = value; }\n        /** The class name to apply when the Element is invalid. Defaults to StripeElement--invalid */\n        set classInvalid(value) { this.classes.invalid = value; }\n        // Disposes of the element\n        ngOnDestroy() {\n            this.forward(instance => instance.destroy());\n            this.sub.unsubscribe();\n        }\n    }\n    StripeElementDirective.ɵfac = function StripeElementDirective_Factory(t) { core[\"dc\" /* ɵɵinvalidFactory */](); };\n    StripeElementDirective.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeElementDirective, inputs: { classBase: \"classBase\", classComplete: \"classComplete\", classEmpty: \"classEmpty\", classFocus: \"classFocus\", classInvalid: \"classInvalid\" }, outputs: { valueChange: \"change\", readyChange: \"ready\", focusChange: \"focus\", blurChange: \"blur\", escapeChange: \"escape\" } });\n    return StripeElementDirective;\n})();\nfunction computeBaseStyle(el) {\n    // Computes the element's base style to match the given HTML element\n    const computed = window === null || window === void 0 ? void 0 : window.getComputedStyle(el);\n    return {\n        color: computed.color,\n        fontFamily: computed.fontFamily,\n        fontSize: computed.fontSize,\n        fontStyle: computed.fontStyle,\n        fontVariant: computed.fontVariant,\n        fontWeight: computed.fontWeight,\n        letterSpacing: computed.letterSpacing,\n        textDecoration: computed.textDecoration,\n        textShadow: computed.textShadow,\n        textTransform: computed.textTransform\n    };\n}\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subscription.js + 1 modules\nvar Subscription = __webpack_require__(\"quSY\");\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/control.directive.ts\n\n\n\n\n\n/** @dynamic\n * Base class bridging the StripeElement with the Angular's form API implementing both a ControlValueAccessor\n * and a sync Validator enabling the use with FormControl\n */\nlet control_directive_StripeControlDirective = /*@__PURE__*/ (() => {\n    class StripeControlDirective {\n        constructor(element) {\n            this.element = element;\n            this.sub = new Subscription[\"a\" /* Subscription */]();\n        }\n        ngOnDestroy() { this.sub.unsubscribe(); }\n        /**\n         * Called by the forms API to write to the view when programmatic changes from model to view are requested.\n         * NOTE: Only clearing the control is allowed\n         */\n        writeValue(value) {\n            if (!value) {\n                this.element.clear();\n            }\n        }\n        /**\n         * Function that is called by the forms API when the control status changes to or from 'DISABLED'.\n         * Depending on the status, it enables or disables the appropriate DOM element.\n         */\n        setDisabledState(disabled) {\n            this.element.disable(disabled);\n        }\n        /**\n         * Registers a callback function that is called when the control's value changes in the UI.\n         * The value passed along the FormControl is the stripe Element instance to be used in the\n         * payment_method object to setup or confirm the payment.\n         */\n        registerOnChange(fn) {\n            this.sub.add(this.element.valueChange.subscribe(value => fn(value.complete ? this.element.instance : null)));\n        }\n        /** Registers a callback function is called by the forms API on initialization to update the form model on blur. */\n        registerOnTouched(fn) {\n            this.sub.add(this.element.blurChange.subscribe(() => fn()));\n        }\n        /** Performs synchronous validation against the provided control. */\n        validate(control) {\n            // Whenever the element is complete...\n            if (this.element.complete) {\n                // Checks for errors\n                const errorType = this.element.error && this.element.error.type;\n                // Translates the StripeError into a ValidationError passing along the message\n                return errorType ? { [errorType]: this.element.error.message } : null;\n            }\n            return { required: true };\n        }\n    }\n    StripeControlDirective.ɵfac = function StripeControlDirective_Factory(t) { return new (t || StripeControlDirective)(core[\"Qb\" /* ɵɵdirectiveInject */](element_directive_StripeElementDirective)); };\n    StripeControlDirective.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeControlDirective });\n    return StripeControlDirective;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/elements.module.ts\n\n\n\n\nlet elements_module_StripeElementsModule = /*@__PURE__*/ (() => {\n    class StripeElementsModule {\n        constructor(platformId) {\n            if (!Object(common[\"v\" /* isPlatformBrowser */])(platformId)) {\n                throw new Error('StripeModule package supports Browsers only');\n            }\n        }\n        static init(options) {\n            return {\n                ngModule: StripeElementsModule,\n                /** Provides the global StripeElementsOptions object */\n                providers: [{ provide: STRIPE_ELEMENTS_OPTIONS, useValue: options }]\n            };\n        }\n    }\n    StripeElementsModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: StripeElementsModule });\n    StripeElementsModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function StripeElementsModule_Factory(t) { return new (t || StripeElementsModule)(core[\"ac\" /* ɵɵinject */](core[\"D\" /* PLATFORM_ID */])); } });\n    return StripeElementsModule;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/index.ts\n\n\n\n\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/card/card.component.ts\n\n\n\n\n\n\n/** Bridge with the Angular's form API */\nlet card_component_StripeCardControl = /*@__PURE__*/ (() => {\n    class StripeCardControl extends control_directive_StripeControlDirective {\n    }\n    StripeCardControl.ɵfac = function StripeCardControl_Factory(t) { return ɵStripeCardControl_BaseFactory(t || StripeCardControl); };\n    StripeCardControl.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeCardControl, selectors: [[\"wm-stripe-card\", \"ngModel\", \"\"], [\"wm-stripe-card\", \"formControl\", \"\"], [\"wm-stripe-card\", \"formControlName\", \"\"]], features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardControl), multi: true },\n                { provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardControl), multi: true }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return StripeCardControl;\n})();\nconst ɵStripeCardControl_BaseFactory = /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](card_component_StripeCardControl);\n/** Stripe Card Element for Angular */\nlet card_component_StripeCard = /*@__PURE__*/ (() => {\n    class StripeCard extends element_directive_StripeElementDirective {\n        constructor(elements, ref) {\n            super('card', elements, ref);\n            this.ref = ref;\n            // Hooks on CardElement specific events\n            this.forward(elm => {\n                elm.on('change', value => this.valueChange.emit(this._value = value));\n                elm.on('escape', () => this.escapeChange.emit());\n            });\n        }\n        // Overrides the disabled getter to effectively return the status\n        get disabled() { return !!this.options.disabled; }\n        // Ovverrides the disable function forwarding the call to the StripeElement \n        disable(disabled) {\n            this.disabled = disabled;\n            this.forward(elm => elm.update(this.options));\n        }\n        // Initializes the element\n        ngOnInit() { this.init(this.options); }\n        // Updates the element on input changes\n        ngOnChanges() { this.forward(elm => elm.update(this.options)); }\n        /** Element's custom base style.\n         * @see https://stripe.com/docs/js/appendix/style\n         * Setting this input value to 'auto' enables the automatic detection of the element's style */\n        set styleBase(value) {\n            this.style.base = (value === 'auto') ? computeBaseStyle(this.ref.nativeElement) : value;\n        }\n        /** Element's custom complete style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        set styleComplete(value) {\n            this.style.complete = value;\n        }\n        /** Element's custom empty style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleEmpty(value) {\n            this.style.empty = value;\n        }\n        /** Element's custom invalid style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleInvalid(value) {\n            this.style.invalid = value;\n        }\n        /** Hides the card icon */\n        set hideIcon(value) {\n            this.options.hideIcon = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Hides the postal code */\n        set hidePostalCode(value) {\n            this.options.hidePostalCode = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Selects the icon style */\n        set iconStyle(value) {\n            this.options.iconStyle = value;\n        }\n        /** Disables the element */\n        set disabled(value) {\n            this.options.disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n    }\n    StripeCard.ɵfac = function StripeCard_Factory(t) { return new (t || StripeCard)(core[\"Qb\" /* ɵɵdirectiveInject */](elements_directive_StripeElementsDirective, 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    StripeCard.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: StripeCard, selectors: [[\"wm-stripe-card\"]], inputs: { styleBase: \"styleBase\", styleComplete: \"styleComplete\", styleEmpty: \"styleEmpty\", styleInvalid: \"styleInvalid\", hideIcon: \"hideIcon\", hidePostalCode: \"hidePostalCode\", iconStyle: \"iconStyle\", disabled: \"disabled\" }, features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: element_directive_StripeElementDirective, useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCard) }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]], decls: 0, vars: 0, template: function StripeCard_Template(rf, ctx) { }, encapsulation: 2 });\n    return StripeCard;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/card/card-expiry.component.ts\n\n\n\n\n\n\n/** Bridge with the Angular's form API */\nlet card_expiry_component_StripeCardExpiryControl = /*@__PURE__*/ (() => {\n    class StripeCardExpiryControl extends control_directive_StripeControlDirective {\n    }\n    StripeCardExpiryControl.ɵfac = function StripeCardExpiryControl_Factory(t) { return ɵStripeCardExpiryControl_BaseFactory(t || StripeCardExpiryControl); };\n    StripeCardExpiryControl.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeCardExpiryControl, selectors: [[\"wm-stripe-card-expiry\", \"ngModel\", \"\"], [\"wm-stripe-card-expiry\", \"formControl\", \"\"], [\"wm-stripe-card-expiry\", \"formControlName\", \"\"]], features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardExpiryControl), multi: true },\n                { provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardExpiryControl), multi: true }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return StripeCardExpiryControl;\n})();\nconst ɵStripeCardExpiryControl_BaseFactory = /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](card_expiry_component_StripeCardExpiryControl);\n/** Stripe Card Exipation Date Element for Angular */\nlet card_expiry_component_StripeCardExpiry = /*@__PURE__*/ (() => {\n    class StripeCardExpiry extends element_directive_StripeElementDirective {\n        constructor(elements, ref) {\n            super('cardExpiry', elements, ref);\n            this.ref = ref;\n            // Hooks on CardElement specific events\n            this.forward(elm => {\n                elm.on('change', value => this.valueChange.emit(this._value = value));\n                elm.on('escape', () => this.escapeChange.emit());\n            });\n        }\n        // Overrides the disabled getter to effectively return the status\n        get disabled() { return !!this.options.disabled; }\n        // Ovverrides the disable function forwarding the call to the StripeElement \n        disable(disabled) {\n            this.disabled = disabled;\n            this.forward(elm => elm.update(this.options));\n        }\n        // Initializes the element\n        ngOnInit() { this.init(this.options); }\n        // Updates the element on input changes\n        ngOnChanges() { this.forward(elm => elm.update(this.options)); }\n        /** Element's custom base style.\n         * @see https://stripe.com/docs/js/appendix/style\n         * Setting this input value to 'auto' enables the automatic detection of the element's style */\n        set styleBase(value) {\n            this.style.base = (value === 'auto') ? computeBaseStyle(this.ref.nativeElement) : value;\n        }\n        /** Element's custom complete style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        set styleComplete(value) {\n            this.style.complete = value;\n        }\n        /** Element's custom empty style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleEmpty(value) {\n            this.style.empty = value;\n        }\n        /** Element's custom invalid style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleInvalid(value) {\n            this.style.invalid = value;\n        }\n        /** A placeholder text */\n        set placeholder(value) {\n            this.options.placeholder = value;\n        }\n        /** Disables the element */\n        set disabled(value) {\n            this.options.disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n    }\n    StripeCardExpiry.ɵfac = function StripeCardExpiry_Factory(t) { return new (t || StripeCardExpiry)(core[\"Qb\" /* ɵɵdirectiveInject */](elements_directive_StripeElementsDirective, 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    StripeCardExpiry.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: StripeCardExpiry, selectors: [[\"wm-stripe-card-expiry\"]], inputs: { styleBase: \"styleBase\", styleComplete: \"styleComplete\", styleEmpty: \"styleEmpty\", styleInvalid: \"styleInvalid\", placeholder: \"placeholder\", disabled: \"disabled\" }, features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: element_directive_StripeElementDirective, useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardExpiry) }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]], decls: 0, vars: 0, template: function StripeCardExpiry_Template(rf, ctx) { }, encapsulation: 2 });\n    return StripeCardExpiry;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/card/card-cvc.component.ts\n\n\n\n\n\n\n/** Bridge with the Angular's form API */\nlet card_cvc_component_StripeCardCvcControl = /*@__PURE__*/ (() => {\n    class StripeCardCvcControl extends control_directive_StripeControlDirective {\n    }\n    StripeCardCvcControl.ɵfac = function StripeCardCvcControl_Factory(t) { return ɵStripeCardCvcControl_BaseFactory(t || StripeCardCvcControl); };\n    StripeCardCvcControl.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeCardCvcControl, selectors: [[\"wm-stripe-card-cvc\", \"ngModel\", \"\"], [\"wm-stripe-card-cvc\", \"formControl\", \"\"], [\"wm-stripe-card-cvc\", \"formControlName\", \"\"]], features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardCvcControl), multi: true },\n                { provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardCvcControl), multi: true }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return StripeCardCvcControl;\n})();\nconst ɵStripeCardCvcControl_BaseFactory = /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](card_cvc_component_StripeCardCvcControl);\n/** Stripe Card CVC Element for Angular */\nlet card_cvc_component_StripeCardCvc = /*@__PURE__*/ (() => {\n    class StripeCardCvc extends element_directive_StripeElementDirective {\n        constructor(elements, ref) {\n            super('cardCvc', elements, ref);\n            this.ref = ref;\n            // Hooks on CardElement specific events\n            this.forward(elm => {\n                elm.on('change', value => this.valueChange.emit(this._value = value));\n                elm.on('escape', () => this.escapeChange.emit());\n            });\n        }\n        // Overrides the disabled getter to effectively return the status\n        get disabled() { return !!this.options.disabled; }\n        // Ovverrides the disable function forwarding the call to the StripeElement \n        disable(disabled) {\n            this.disabled = disabled;\n            this.forward(elm => elm.update(this.options));\n        }\n        // Initializes the element\n        ngOnInit() { this.init(this.options); }\n        // Updates the element on input changes\n        ngOnChanges() { this.forward(elm => elm.update(this.options)); }\n        /** Element's custom base style.\n         * @see https://stripe.com/docs/js/appendix/style\n         * Setting this input value to 'auto' enables the automatic detection of the element's style */\n        set styleBase(value) {\n            this.style.base = (value === 'auto') ? computeBaseStyle(this.ref.nativeElement) : value;\n        }\n        /** Element's custom complete style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        set styleComplete(value) {\n            this.style.complete = value;\n        }\n        /** Element's custom empty style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleEmpty(value) {\n            this.style.empty = value;\n        }\n        /** Element's custom invalid style.\n         * @see https://stripe.com/docs/js/appendix/style */\n        styleInvalid(value) {\n            this.style.invalid = value;\n        }\n        /** A placeholder text */\n        set placeholder(value) {\n            this.options.placeholder = value;\n        }\n        /** Disables the element */\n        set disabled(value) {\n            this.options.disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n    }\n    StripeCardCvc.ɵfac = function StripeCardCvc_Factory(t) { return new (t || StripeCardCvc)(core[\"Qb\" /* ɵɵdirectiveInject */](elements_directive_StripeElementsDirective, 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    StripeCardCvc.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: StripeCardCvc, selectors: [[\"wm-stripe-card-cvc\"]], inputs: { styleBase: \"styleBase\", styleComplete: \"styleComplete\", styleEmpty: \"styleEmpty\", styleInvalid: \"styleInvalid\", placeholder: \"placeholder\", disabled: \"disabled\" }, features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: element_directive_StripeElementDirective, useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeCardCvc) }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]], decls: 0, vars: 0, template: function StripeCardCvc_Template(rf, ctx) { }, encapsulation: 2 });\n    return StripeCardCvc;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/card/card.module.ts\n\nlet card_module_StripeCardModule = /*@__PURE__*/ (() => {\n    class StripeCardModule {\n    }\n    StripeCardModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: StripeCardModule });\n    StripeCardModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function StripeCardModule_Factory(t) { return new (t || StripeCardModule)(); }, imports: [[]] });\n    return StripeCardModule;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/elements/card/index.ts\n\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// CONCATENATED MODULE: ./stripe/src/lib/material/material.directive.ts\n\n\n\n\n\n\n/**\n * MatFormFieldControl implementation for StripeElement\n */\nlet material_directive_StripeMaterialDirective = /*@__PURE__*/ (() => {\n    class StripeMaterialDirective {\n        constructor(element) {\n            this.element = element;\n            this.stateChanges = Object(merge[\"a\" /* merge */])(element.readyChange, element.focusChange, element.blurChange, element.valueChange);\n        }\n        /** The value of the control. */\n        get value() { return this.element.value || null; }\n        ;\n        /** Whether the control is focused. */\n        get focused() { return this.element.focused; }\n        /** Whether the control is empty. */\n        get empty() { return !this.element.empty; }\n        /** Whether the control is disabled. */\n        get disabled() { return this.element.disabled; }\n        /** Whether the `MatFormField` label should try to float. */\n        get shouldLabelFloat() { return true; }\n        ;\n        /** Whether the control is in an error state. */\n        get errorState() {\n            const value = this.element.value;\n            return !!value && !!value.error;\n        }\n        ;\n        /** Sets the list of element IDs that currently describe this control. */\n        setDescribedByIds(ids) { }\n        /** Handles a click on the control's container. */\n        onContainerClick(event) {\n            this.element.focus();\n        }\n        ;\n    }\n    StripeMaterialDirective.ɵfac = function StripeMaterialDirective_Factory(t) { return new (t || StripeMaterialDirective)(core[\"Qb\" /* ɵɵdirectiveInject */](element_directive_StripeElementDirective)); };\n    StripeMaterialDirective.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: StripeMaterialDirective, selectors: [[\"\", \"matStripe\", \"\"]], hostAttrs: [1, \"wm-stripe-material\"], features: [core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: form_field[\"d\" /* MatFormFieldControl */], useExisting: Object(core[\"W\" /* forwardRef */])(() => StripeMaterialDirective) }\n            ])] });\n    return StripeMaterialDirective;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/material/material.module.ts\n\nlet material_module_StripeMaterialModule = /*@__PURE__*/ (() => {\n    class StripeMaterialModule {\n    }\n    StripeMaterialModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: StripeMaterialModule });\n    StripeMaterialModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function StripeMaterialModule_Factory(t) { return new (t || StripeMaterialModule)(); }, imports: [[]] });\n    return StripeMaterialModule;\n})();\n\n// CONCATENATED MODULE: ./stripe/src/lib/material/index.ts\n\n\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/delay.js + 1 modules\nvar delay = __webpack_require__(\"3E0/\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/startWith.js\nvar startWith = __webpack_require__(\"JX91\");\n\n// EXTERNAL MODULE: ./connect/src/lib/functions/index.ts\nvar lib_functions = __webpack_require__(\"+aPl\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/utils/platform/index.ts + 5 modules\nvar platform = __webpack_require__(\"OWci\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/animations/fesm2015/animations.js\nvar animations = __webpack_require__(\"GS7A\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/donate/donate.animations.ts\n\nconst $timing = '500ms ease';\nlet $animations = [\n    Object(animations[\"o\" /* trigger */])('error', [\n        Object(animations[\"n\" /* transition */])(':enter', [\n            Object(animations[\"m\" /* style */])({\n                opacity: '0',\n                height: '0',\n                transform: 'scaleY(0) rotateX(90deg)'\n            }),\n            Object(animations[\"e\" /* animate */])($timing, Object(animations[\"m\" /* style */])('*'))\n        ]),\n        Object(animations[\"n\" /* transition */])(':leave', [\n            Object(animations[\"e\" /* animate */])($timing, Object(animations[\"m\" /* style */])({\n                opacity: '0',\n                height: '0',\n                transform: 'scaleY(0) rotateX(90deg)'\n            }))\n        ])\n    ])\n];\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./wizdm/src/environments/environment.ts + 2 modules\nvar environment = __webpack_require__(\"HOC2\");\n\n// EXTERNAL MODULE: ./content/src/lib/streamer/content.directive.ts\nvar content_directive = __webpack_require__(\"Qfjl\");\n\n// EXTERNAL MODULE: ./gtag/src/lib/gtag.directive.ts\nvar gtag_directive = __webpack_require__(\"FkMH\");\n\n// EXTERNAL MODULE: ./readme/src/lib/readme.component.ts\nvar readme_component = __webpack_require__(\"n8oj\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex.js\nvar flex = __webpack_require__(\"VDRc\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/donate/donate.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction DonateComponent_ng_container_0_mat_error_12_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.name == null ? null : msgs_r1.form.name.error) || \"Please provide your name\");\n    }\n}\nfunction DonateComponent_ng_container_0_mat_error_20_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.email == null ? null : msgs_r1.form.email.error) || \"Please provide a valid email\");\n    }\n}\nfunction DonateComponent_ng_container_0_mat_button_toggle_27_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-button-toggle\", 23);\n        core[\"ec\" /* ɵɵlistener */](\"mousedown\", function DonateComponent_ng_container_0_mat_button_toggle_27_Template_mat_button_toggle_mousedown_0_listener() { return false; });\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const option_r17 = ctx.$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"value\", option_r17.value);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](option_r17.label);\n    }\n}\nfunction DonateComponent_ng_container_0_mat_error_34_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.amount == null ? null : msgs_r1.form.amount.error) || \"Please choose a proper amount\");\n    }\n}\nfunction DonateComponent_ng_container_0_mat_error_43_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"ic\" /* ɵɵnextContext */]();\n        const _r11 = core[\"vc\" /* ɵɵreference */](41);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](_r11.error.message);\n    }\n}\nfunction DonateComponent_ng_container_0_p_46_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"p\", 24);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r13 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"pc\" /* ɵɵproperty */](\"@error\", undefined);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](ctx_r13.error);\n    }\n}\nfunction DonateComponent_ng_container_0_mat_progress_spinner_48_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"mat-progress-spinner\", 25);\n    }\n}\nfunction DonateComponent_ng_container_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r21 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](0, 1);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"h1\");\n        core[\"Ic\" /* ɵɵtext */](2);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](3, \"p\", 2);\n        core[\"Ic\" /* ɵɵtext */](4, \" Thanks to your generosity we are able to cover for the costs exceeding the free quotas of the various online services the project is based upon. \");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](5, \"form\", 3, 4);\n        core[\"ec\" /* ɵɵlistener */](\"ngSubmit\", function DonateComponent_ng_container_0_Template_form_ngSubmit_5_listener() { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r20 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r20.pay(ctx_r20.stripe); });\n        core[\"Wb\" /* ɵɵelementStart */](7, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](8, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](9);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](10, \"input\", 5, 6);\n        core[\"ec\" /* ɵɵlistener */](\"ngModelChange\", function DonateComponent_ng_container_0_Template_input_ngModelChange_10_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r22 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r22.name = $event; });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](12, DonateComponent_ng_container_0_mat_error_12_Template, 2, 1, \"mat-error\", 7);\n        core[\"Wb\" /* ɵɵelementStart */](13, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](14);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](15, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](16, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](17);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](18, \"input\", 8, 9);\n        core[\"ec\" /* ɵɵlistener */](\"ngModelChange\", function DonateComponent_ng_container_0_Template_input_ngModelChange_18_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r23 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r23.email = $event; });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](20, DonateComponent_ng_container_0_mat_error_20_Template, 2, 1, \"mat-error\", 7);\n        core[\"Wb\" /* ɵɵelementStart */](21, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](22);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](23, \"mat-form-field\", 10);\n        core[\"Wb\" /* ɵɵelementStart */](24, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](25);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](26, \"mat-button-toggle-group\", 11);\n        core[\"ec\" /* ɵɵlistener */](\"ngModelChange\", function DonateComponent_ng_container_0_Template_mat_button_toggle_group_ngModelChange_26_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r24 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r24.amount = $event; });\n        core[\"Gc\" /* ɵɵtemplate */](27, DonateComponent_ng_container_0_mat_button_toggle_27_Template, 2, 2, \"mat-button-toggle\", 12);\n        core[\"Wb\" /* ɵɵelementStart */](28, \"mat-button-toggle\", 13);\n        core[\"ec\" /* ɵɵlistener */](\"mousedown\", function DonateComponent_ng_container_0_Template_mat_button_toggle_mousedown_28_listener() { return false; });\n        core[\"Ic\" /* ɵɵtext */](29);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](30, \"input\", 14, 15);\n        core[\"ec\" /* ɵɵlistener */](\"ngModelChange\", function DonateComponent_ng_container_0_Template_input_ngModelChange_30_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r26 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r26.amount = $event; });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](32, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](33);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](34, DonateComponent_ng_container_0_mat_error_34_Template, 2, 1, \"mat-error\", 7);\n        core[\"Wb\" /* ɵɵelementStart */](35, \"button\", 16);\n        core[\"ec\" /* ɵɵlistener */](\"mousedown\", function DonateComponent_ng_container_0_Template_button_mousedown_35_listener() { return false; })(\"click\", function DonateComponent_ng_container_0_Template_button_click_35_listener() { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r28 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r28.toggleCurrency(); });\n        core[\"Rb\" /* ɵɵelement */](36, \"mat-icon\", 17);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](37, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](38, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](39);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](40, \"wm-stripe-card\", 18, 19);\n        core[\"ec\" /* ɵɵlistener */](\"ngModelChange\", function DonateComponent_ng_container_0_Template_wm_stripe_card_ngModelChange_40_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r29 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r29.card = $event; })(\"ready\", function DonateComponent_ng_container_0_Template_wm_stripe_card_ready_40_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r21); const ctx_r30 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r30.ready = $event; });\n        core[\"jc\" /* ɵɵpipe */](42, \"async\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](43, DonateComponent_ng_container_0_mat_error_43_Template, 2, 1, \"mat-error\", 7);\n        core[\"Wb\" /* ɵɵelementStart */](44, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](45);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](46, DonateComponent_ng_container_0_p_46_Template, 2, 2, \"p\", 20);\n        core[\"Wb\" /* ɵɵelementStart */](47, \"button\", 21);\n        core[\"Gc\" /* ɵɵtemplate */](48, DonateComponent_ng_container_0_mat_progress_spinner_48_Template, 1, 0, \"mat-progress-spinner\", 22);\n        core[\"Wb\" /* ɵɵelementStart */](49, \"span\");\n        core[\"Ic\" /* ɵɵtext */](50);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const lang_r2 = ctx.language;\n        const _r3 = core[\"vc\" /* ɵɵreference */](6);\n        const _r4 = core[\"vc\" /* ɵɵreference */](11);\n        const _r6 = core[\"vc\" /* ɵɵreference */](19);\n        const _r9 = core[\"vc\" /* ɵɵreference */](31);\n        const _r11 = core[\"vc\" /* ɵɵreference */](41);\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](ctx_r0.completed ? msgs_r1.thanks || \"Thank You \\uD83D\\uDE4F\\uD83C\\uDFFB\" : msgs_r1.title || \"Contribute to Wizdm\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"wm-readme\", msgs_r1.intro);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"StripeElements\", lang_r2);\n        core[\"Db\" /* ɵɵadvance */](4);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.name == null ? null : msgs_r1.form.name.label) || \"Name\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.name)(\"disabled\", !ctx_r0.ready || ctx_r0.progress);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", !_r4.valid);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.name == null ? null : msgs_r1.form.name.hint) || \"Your name here\");\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.email == null ? null : msgs_r1.form.email.label) || \"Email\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.email)(\"disabled\", !ctx_r0.ready || ctx_r0.progress);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", !_r6.valid);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.email == null ? null : msgs_r1.form.email.hint) || \"We'll send you the rececipt here\");\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.amount == null ? null : msgs_r1.form.amount.label) || \"Amount\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.amount);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngForOf\", (msgs_r1.form == null ? null : msgs_r1.form.amount == null ? null : msgs_r1.form.amount.options) || ctx_r0.defaultAmoutOptions);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\"\", (msgs_r1 == null ? null : msgs_r1.form == null ? null : msgs_r1.form.amount == null ? null : msgs_r1.form.amount.custom) || \"Other:\", \"\\u00A0\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.amount)(\"placeholder\", (msgs_r1.form == null ? null : msgs_r1.form.amount == null ? null : msgs_r1.form.amount.placeholder) || \"Enter the amount\")(\"disabled\", !ctx_r0.ready || ctx_r0.progress);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.amout == null ? null : msgs_r1.form.amout.hint) || \"Choose the amount\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", !_r9.valid);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"disabled\", _r9.disabled);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"fontIcon\", ctx_r0.currency === \"eur\" ? \"fa-euro-sign\" : \"fa-dollar-sign\");\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.card.label) || \"Credit card\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.card)(\"disabled\", !ctx_r0.ready || ctx_r0.progress)(\"styleBase\", core[\"kc\" /* ɵɵpipeBind1 */](42, 34, ctx_r0.autoMode$) || \"auto\");\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", _r11.error);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.card == null ? null : msgs_r1.form.card.hint) || \"Powered by Stripe\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.error);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"disabled\", !_r3.valid || !ctx_r0.ready || ctx_r0.progress);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.progress);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.form == null ? null : msgs_r1.form.action) || \"Donate Now\");\n    }\n}\nlet donate_component_DonateComponent = /*@__PURE__*/ (() => {\n    class DonateComponent {\n        constructor(stripe, functions, dark) {\n            this.stripe = stripe;\n            this.functions = functions;\n            this.email = '';\n            this.name = '';\n            this.currency = 'eur';\n            this.ready = false;\n            this.progress = false;\n            this.completed = false;\n            this.defaultAmoutOptions = [\n                { label: \"5\", value: 5 },\n                { label: \"25\", value: 25 },\n                { label: \"100\", value: 100 }\n            ];\n            // createPaymentIntent runs server side on cloudFunctions\n            this.createPaymentIntent = this.functions.callable('createPaymentIntent');\n            // Uses an observable to refresh the Card Element automatic style detection on theme changes\n            this.autoMode$ = dark.pipe(Object(switchMap[\"a\" /* switchMap */])(() => Object(of[\"a\" /* of */])('auto').pipe(Object(delay[\"a\" /* delay */])(0), Object(startWith[\"a\" /* startWith */])({}))));\n        }\n        /** Toggles the curency between EUR and USD */\n        toggleCurrency() {\n            this.currency = this.currency === 'eur' ? 'usd' : 'eur';\n        }\n        // Process the payment\n        pay() {\n            this.completed = false;\n            this.progress = true;\n            this.error = '';\n            console.log(\"Creating payment intent for\", this.amount, this.currency);\n            // Starts by creating the payment intent server side\n            this.createPaymentIntent({\n                // Amount goes in cents\n                amount: this.amount * 100,\n                currency: this.currency,\n                // Enables testMode when in developent so the private test key will be used instead of the live one.\n                testMode: !environment[\"a\" /* environment */].production\n            }).then(intent => {\n                console.log(\"Confirming payment intent\", intent.id);\n                // Once creates, use the client_secret to confirm the intent with the credit card details\n                // from the card element\n                return this.stripe.confirmCardPayment(intent.client_secret, {\n                    payment_method: {\n                        card: this.card,\n                        billing_details: {\n                            name: this.name,\n                            email: this.email\n                        }\n                    }\n                });\n            }).then(result => {\n                var _a, _b;\n                console.log(\"Transaction completed\", (_a = result.paymentIntent) === null || _a === void 0 ? void 0 : _a.status);\n                // Tracks the errors, if any\n                this.error = (_b = result.error) === null || _b === void 0 ? void 0 : _b.message;\n                // Stops the progress\n                this.progress = false;\n                // Displays the completion \n                this.completed = !this.error;\n                // Clears the card\n                this.card.clear();\n            }).catch((e) => {\n                console.log(\"Transaction terminated\", e);\n                // Tracks the errors, if any\n                this.error = e.message || e.code;\n                // Stops the progress\n                this.completed = this.progress = false;\n                // Clears the card\n                this.card.clear();\n            });\n        }\n    }\n    DonateComponent.ɵfac = function DonateComponent_Factory(t) { return new (t || DonateComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](lib[\"b\" /* StripeService */]), core[\"Qb\" /* ɵɵdirectiveInject */](lib_functions[\"b\" /* FunctionsService */]), core[\"Qb\" /* ɵɵdirectiveInject */](platform[\"a\" /* DarkModeObserver */])); };\n    DonateComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: DonateComponent, selectors: [[\"wm-donate\"]], decls: 1, vars: 1, consts: [[\"scrollPositionRestoration\", \"top\", \"gtag\", \"donate\", 4, \"wmContent\", \"wmContentSelect\"], [\"scrollPositionRestoration\", \"top\", \"gtag\", \"donate\"], [3, \"wm-readme\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center stretch\", \"fxLayoutGap\", \"16px\", 3, \"StripeElements\", \"ngSubmit\"], [\"form\", \"ngForm\"], [\"matInput\", \"\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"formName\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"name\", \"email\", \"email\", \"\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"formEmail\", \"ngModel\"], [\"floatLabel\", \"always\"], [\"name\", \"amount\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"mousedown\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"\", 3, \"mousedown\"], [\"matInput\", \"\", \"name\", \"amount\", \"required\", \"\", \"autocomplete\", \"off\", \"pattern\", \"\\\\d*\", 2, \"text-align\", \"center\", 3, \"ngModel\", \"placeholder\", \"disabled\", \"ngModelChange\"], [\"formAmount\", \"ngModel\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"matTooltip\", \"Switch currency\", \"type\", \"button\", 3, \"disabled\", \"mousedown\", \"click\"], [\"inline\", \"\", \"fontSet\", \"fas\", 3, \"fontIcon\"], [\"matStripe\", \"\", \"hidePostalCode\", \"\", \"name\", \"card\", \"required\", \"\", 3, \"ngModel\", \"disabled\", \"styleBase\", \"ngModelChange\", \"ready\"], [\"formCard\", \"\"], [\"class\", \"mat-error\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 3, \"disabled\"], [\"mode\", \"indeterminate\", \"diameter\", \"30\", 4, \"ngIf\"], [3, \"value\", \"mousedown\"], [1, \"mat-error\"], [\"mode\", \"indeterminate\", \"diameter\", \"30\"]], template: function DonateComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, DonateComponent_ng_container_0_Template, 51, 36, \"ng-container\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"donate\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], gtag_directive[\"a\" /* GtagDirective */], readme_component[\"a\" /* ReadmeComponent */], fesm2015_forms[\"u\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"n\" /* NgControlStatusGroup */], fesm2015_forms[\"o\" /* NgForm */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"d\" /* DefaultLayoutAlignDirective */], flex[\"f\" /* DefaultLayoutGapDirective */], elements_directive_StripeElementsDirective, form_field[\"c\" /* MatFormField */], form_field[\"g\" /* MatLabel */], input[\"b\" /* MatInput */], fesm2015_forms[\"c\" /* DefaultValueAccessor */], fesm2015_forms[\"s\" /* RequiredValidator */], fesm2015_forms[\"m\" /* NgControlStatus */], fesm2015_forms[\"p\" /* NgModel */], common[\"m\" /* NgIf */], form_field[\"f\" /* MatHint */], fesm2015_forms[\"d\" /* EmailValidator */], button_toggle_MatButtonToggleGroup, common[\"l\" /* NgForOf */], button_toggle_MatButtonToggle, fesm2015_forms[\"q\" /* PatternValidator */], fesm2015_button[\"b\" /* MatButton */], form_field[\"i\" /* MatSuffix */], tooltip[\"b\" /* MatTooltip */], icon[\"a\" /* MatIcon */], card_component_StripeCard, card_component_StripeCardControl, material_directive_StripeMaterialDirective, form_field[\"b\" /* MatError */], progress_spinner[\"a\" /* MatProgressSpinner */]], pipes: [common[\"b\" /* AsyncPipe */]], styles: [\"[_nghost-%COMP%]{position:relative;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;box-sizing:border-box;padding:24px}[_nghost-%COMP%]   form[_ngcontent-%COMP%]{max-width:80%;width:400px}[_nghost-%COMP%]   p[_ngcontent-%COMP%]{text-align:justify}[_nghost-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%], [_nghost-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]{border:none}[_nghost-%COMP%]   .mat-progress-spinner[_ngcontent-%COMP%]{position:absolute;left:calc(50% - 15px);top:calc(50% - 15px)}\"], data: { animation: $animations } });\n    return DonateComponent;\n})();\n\n// EXTERNAL MODULE: ./content/src/lib/router/content-router.module.ts\nvar content_router_module = __webpack_require__(\"J3Me\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/donate/donate.module.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Environment\n\n\n\n\nconst { stripeElements } = environment[\"a\" /* environment */];\nconst routes = [\n    {\n        path: '',\n        content: 'donate',\n        component: donate_component_DonateComponent\n    }\n];\nlet donate_module_DonateModule = /*@__PURE__*/ (() => {\n    class DonateModule {\n    }\n    DonateModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: DonateModule });\n    DonateModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function DonateModule_Factory(t) { return new (t || DonateModule)(); }, imports: [[\n                common[\"c\" /* CommonModule */],\n                fesm2015_forms[\"i\" /* FormsModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                form_field[\"e\" /* MatFormFieldModule */],\n                button_toggle_MatButtonToggleModule,\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                input[\"c\" /* MatInputModule */],\n                icon[\"b\" /* MatIconModule */],\n                tooltip[\"c\" /* MatTooltipModule */],\n                progress_spinner[\"b\" /* MatProgressSpinnerModule */],\n                gtag_src[\"a\" /* GtagModule */],\n                readme_src[\"a\" /* ReadmeModule */],\n                redirect_src[\"a\" /* RedirectModule */],\n                elements_module_StripeElementsModule,\n                card_module_StripeCardModule,\n                material_module_StripeMaterialModule,\n                elements_module_StripeElementsModule.init(stripeElements),\n                src[\"e\" /* ContentRouterModule */].forChild(routes)\n            ]] });\n    return DonateModule;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}
{"version":3,"sources":["webpack:///node_modules/prismjs/components/prism-markdown.js"],"names":["Prism","inner","source","createInline","pattern","replace","RegExp","tableCell","tableRow","tableLine","languages","markdown","extend","insertBefore","lookbehind","greedy","inside","alias","yaml","punctuation","forEach","token","content","hooks","add","env","language","walkTokens","tokens","i","l","length","type","codeLang","codeBlock","lang","exec","toLowerCase","push","classes","cls","match","grammar","plugins","autoloader","id","Date","valueOf","Math","floor","random","attributes","loadLanguages","ele","document","getElementById","innerHTML","highlight","textContent","code","md"],"mappings":";;;;;;;;;;;;AAAC,iBAAUA,KAAV,EAAiB;AAEjB;AACA,YAAIC,KAAK,GAAG,6CAA6CC,MAAzD;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,iBAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC9BA,iBAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,UAAhB,EAA4B,YAAY;AAAE,mBAAOJ,KAAP;AAAe,WAAzD,CAAV;AACA,iBAAOK,MAAM,CAAC,0BAA0BJ,MAA1B,GAAmC,KAAnC,GAA2CE,OAA3C,GAAqD,GAAtD,CAAb;AACA;;AAGD,YAAIG,SAAS,GAAG,4DAA4DL,MAA5E;AACA,YAAIM,QAAQ,GAAG,+CAA+CN,MAA/C,CAAsDG,OAAtD,CAA8D,KAA9D,EAAqE,YAAY;AAAE,iBAAOE,SAAP;AAAmB,SAAtG,CAAf;AACA,YAAIE,SAAS,GAAG,sEAAsEP,MAAtF;AAGAF,aAAK,CAACU,SAAN,CAAgBC,QAAhB,GAA2BX,KAAK,CAACU,SAAN,CAAgBE,MAAhB,CAAuB,QAAvB,EAAiC,EAAjC,CAA3B;AACAZ,aAAK,CAACU,SAAN,CAAgBG,YAAhB,CAA6B,UAA7B,EAAyC,QAAzC,EAAmD;AAClD,gCAAsB;AACrBT,mBAAO,EAAE,iDADY;AAErBU,sBAAU,EAAE,IAFS;AAGrBC,kBAAM,EAAE,IAHa;AAIrBC,kBAAM,EAAE;AACP,6BAAe,WADR;AAEP,6BAAe;AACdZ,uBAAO,EAAE,gBADK;AAEda,qBAAK,EAAE,CAAC,MAAD,EAAS,eAAT,CAFO;AAGdD,sBAAM,EAAEhB,KAAK,CAACU,SAAN,CAAgBQ;AAHV;AAFR;AAJa,WAD4B;AAclD,wBAAc;AACb;AACAd,mBAAO,EAAE,iBAFI;AAGba,iBAAK,EAAE;AAHM,WAdoC;AAmBlD,mBAAS;AACRb,mBAAO,EAAEE,MAAM,CAAC,MAAME,QAAN,GAAiBC,SAAjB,GAA6B,KAA7B,GAAqCD,QAArC,GAAgD,IAAjD,EAAuD,GAAvD,CADP;AAERQ,kBAAM,EAAE;AACP,iCAAmB;AAClBZ,uBAAO,EAAEE,MAAM,CAAC,OAAOE,QAAP,GAAkBC,SAAlB,GAA8B,MAA9B,GAAuCD,QAAvC,GAAkD,KAAnD,CADG;AAElBM,0BAAU,EAAE,IAFM;AAGlBE,sBAAM,EAAE;AACP,gCAAc;AACbZ,2BAAO,EAAEE,MAAM,CAACC,SAAD,CADF;AAEbS,0BAAM,EAAEhB,KAAK,CAACU,SAAN,CAAgBC;AAFX,mBADP;AAKP,iCAAe;AALR;AAHU,eADZ;AAYP,4BAAc;AACbP,uBAAO,EAAEE,MAAM,CAAC,OAAOE,QAAP,GAAkB,GAAlB,GAAwBC,SAAxB,GAAoC,GAArC,CADF;AAEbK,0BAAU,EAAE,IAFC;AAGbE,sBAAM,EAAE;AACP,iCAAe;AADR;AAHK,eAZP;AAmBP,kCAAoB;AACnBZ,uBAAO,EAAEE,MAAM,CAAC,MAAME,QAAN,GAAiB,GAAlB,CADI;AAEnBQ,sBAAM,EAAE;AACP,kCAAgB;AACfZ,2BAAO,EAAEE,MAAM,CAACC,SAAD,CADA;AAEfU,yBAAK,EAAE,WAFQ;AAGfD,0BAAM,EAAEhB,KAAK,CAACU,SAAN,CAAgBC;AAHT,mBADT;AAMP,iCAAe;AANR;AAFW;AAnBb;AAFA,WAnByC;AAqDlD,kBAAQ,CACP;AACC;AACAP,mBAAO,EAAE,sFAFV;AAGCU,sBAAU,EAAE,IAHb;AAICG,iBAAK,EAAE;AAJR,WADO,EAOP;AACC;AACA;AACAb,mBAAO,EAAE,qBAHV;AAICa,iBAAK,EAAE;AAJR,WAPO,EAaP;AACC;AACA;AACA;AACAb,mBAAO,EAAE,oBAJV;AAKCW,kBAAM,EAAE,IALT;AAMCC,kBAAM,EAAE;AACP,4BAAc;AACbZ,uBAAO,EAAE,oDADI;AAEbU,0BAAU,EAAE;AAFC,eADP;AAKP,+BAAiB;AAChBV,uBAAO,EAAE,UADO;AAEhBU,0BAAU,EAAE;AAFI,eALV;AASP,6BAAe;AATR;AANT,WAbO,CArD0C;AAqFlD,mBAAS,CACR;AACC;AACA;AAEA;AACA;AACAV,mBAAO,EAAE,yCANV;AAOCa,iBAAK,EAAE,WAPR;AAQCD,kBAAM,EAAE;AACPG,yBAAW,EAAE;AADN;AART,WADQ,EAaR;AACC;AACA;AACAf,mBAAO,EAAE,YAHV;AAICU,sBAAU,EAAE,IAJb;AAKCG,iBAAK,EAAE,WALR;AAMCD,kBAAM,EAAE;AACPG,yBAAW,EAAE;AADN;AANT,WAbQ,CArFyC;AA6GlD,gBAAM;AACL;AACA;AACA;AACA;AACAf,mBAAO,EAAE,uCALJ;AAMLU,sBAAU,EAAE,IANP;AAOLG,iBAAK,EAAE;AAPF,WA7G4C;AAsHlD,kBAAQ;AACP;AACA;AACA;AACA;AACAb,mBAAO,EAAE,kCALF;AAMPU,sBAAU,EAAE,IANL;AAOPG,iBAAK,EAAE;AAPA,WAtH0C;AA+HlD,2BAAiB;AAChB;AACA;AACA;AACA;AACAb,mBAAO,EAAE,oHALO;AAMhBY,kBAAM,EAAE;AACP,0BAAY;AACXZ,uBAAO,EAAE,eADE;AAEXU,0BAAU,EAAE;AAFD,eADL;AAKP,wBAAU,8DALH;AAMP,6BAAe;AANR,aANQ;AAchBG,iBAAK,EAAE;AAdS,WA/HiC;AA+IlD,kBAAQ;AACP;AACA;AAEA;AACAb,mBAAO,EAAED,YAAY,CAAC,kGAAkGD,MAAnG,CALd;AAMPY,sBAAU,EAAE,IANL;AAOPC,kBAAM,EAAE,IAPD;AAQPC,kBAAM,EAAE;AACP,yBAAW;AACVZ,uBAAO,EAAE,qBADC;AAEVU,0BAAU,EAAE,IAFF;AAGVE,sBAAM,EAAE,EAHE,CAGC;;AAHD,eADJ;AAMP,6BAAe;AANR;AARD,WA/I0C;AAgKlD,oBAAU;AACT;AACA;AAEA;AACAZ,mBAAO,EAAED,YAAY,CAAC,kGAAkGD,MAAnG,CALZ;AAMTY,sBAAU,EAAE,IANH;AAOTC,kBAAM,EAAE,IAPC;AAQTC,kBAAM,EAAE;AACP,yBAAW;AACVZ,uBAAO,EAAE,mBADC;AAEVU,0BAAU,EAAE,IAFF;AAGVE,sBAAM,EAAE,EAHE,CAGC;;AAHD,eADJ;AAMP,6BAAe;AANR;AARC,WAhKwC;AAiLlD,oBAAU;AACT;AACA;AACAZ,mBAAO,EAAED,YAAY,CAAC,4BAA4BD,MAA7B,CAHZ;AAITY,sBAAU,EAAE,IAJH;AAKTC,kBAAM,EAAE,IALC;AAMTC,kBAAM,EAAE;AACP,yBAAW;AACVZ,uBAAO,EAAE,sBADC;AAEVU,0BAAU,EAAE,IAFF;AAGVE,sBAAM,EAAE,EAHE,CAGC;;AAHD,eADJ;AAMP,6BAAe;AANR;AANC,WAjLwC;AAgMlD,iBAAO;AACN;AACA;AACA;AACAZ,mBAAO,EAAED,YAAY,CAAC,mGAAmGD,MAApG,CAJf;AAKNY,sBAAU,EAAE,IALN;AAMNC,kBAAM,EAAE,IANF;AAONC,kBAAM,EAAE;AACP,0BAAY,IADL;AAEP,yBAAW;AACVZ,uBAAO,EAAE,mBADC;AAEVU,0BAAU,EAAE,IAFF;AAGVE,sBAAM,EAAE,EAHE,CAGC;;AAHD,eAFJ;AAOP,0BAAY;AACXZ,uBAAO,EAAE,4BADE;AAEXU,0BAAU,EAAE;AAFD,eAPL;AAWP,qBAAO;AACNV,uBAAO,EAAE,gBADH;AAENU,0BAAU,EAAE;AAFN,eAXA;AAeP,wBAAU;AACTV,uBAAO,EAAE,mCADA;AAETU,0BAAU,EAAE;AAFH;AAfH;AAPF;AAhM2C,SAAnD;AA8NA,SAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,QAA1B,EAAoCM,OAApC,CAA4C,UAAUC,KAAV,EAAiB;AAC5D,WAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,QAA1B,EAAoCD,OAApC,CAA4C,UAAUJ,MAAV,EAAkB;AAC7D,gBAAIK,KAAK,KAAKL,MAAd,EAAsB;AACrBhB,mBAAK,CAACU,SAAN,CAAgBC,QAAhB,CAAyBU,KAAzB,EAAgCL,MAAhC,CAAuCM,OAAvC,CAA+CN,MAA/C,CAAsDA,MAAtD,IAAgEhB,KAAK,CAACU,SAAN,CAAgBC,QAAhB,CAAyBK,MAAzB,CAAhE;AACA;AACD,WAJD;AAKA,SAND;AAQAhB,aAAK,CAACuB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAChD,cAAIA,GAAG,CAACC,QAAJ,KAAiB,UAAjB,IAA+BD,GAAG,CAACC,QAAJ,KAAiB,IAApD,EAA0D;AACzD;AACA;;AAED,mBAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC3B,gBAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAAjC,EAA2C;AAC1C;AACA;;AAED,iBAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;AAC9C,kBAAIR,KAAK,GAAGO,MAAM,CAACC,CAAD,CAAlB;;AAEA,kBAAIR,KAAK,CAACW,IAAN,KAAe,MAAnB,EAA2B;AAC1BL,0BAAU,CAACN,KAAK,CAACC,OAAP,CAAV;AACA;AACA;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,kBAAIW,QAAQ,GAAGZ,KAAK,CAACC,OAAN,CAAc,CAAd,CAAf;AACA,kBAAIY,SAAS,GAAGb,KAAK,CAACC,OAAN,CAAc,CAAd,CAAhB;;AAEA,kBAAIW,QAAQ,IAAIC,SAAZ,IACHD,QAAQ,CAACD,IAAT,KAAkB,eADf,IACkCE,SAAS,CAACF,IAAV,KAAmB,YADrD,IAEH,OAAOC,QAAQ,CAACX,OAAhB,KAA4B,QAF7B,EAEuC;AAEtC;AAEA;AACA,oBAAIa,IAAI,GAAGF,QAAQ,CAACX,OAAT,CAAiBjB,OAAjB,CAAyB,MAAzB,EAAiC,OAAjC,EAA0CA,OAA1C,CAAkD,SAAlD,EAA6D,IAA7D,CAAX,CALsC,CAMtC;;AACA8B,oBAAI,GAAG,CAAC,eAAeC,IAAf,CAAoBD,IAApB,KAA6B,CAAC,EAAD,CAA9B,EAAoC,CAApC,EAAuCE,WAAvC,EAAP;AACA,oBAAIpB,KAAK,GAAG,cAAckB,IAA1B,CARsC,CAUtC;;AACA,oBAAI,CAACD,SAAS,CAACjB,KAAf,EAAsB;AACrBiB,2BAAS,CAACjB,KAAV,GAAkB,CAACA,KAAD,CAAlB;AACA,iBAFD,MAEO,IAAI,OAAOiB,SAAS,CAACjB,KAAjB,KAA2B,QAA/B,EAAyC;AAC/CiB,2BAAS,CAACjB,KAAV,GAAkB,CAACiB,SAAS,CAACjB,KAAX,EAAkBA,KAAlB,CAAlB;AACA,iBAFM,MAEA;AACNiB,2BAAS,CAACjB,KAAV,CAAgBqB,IAAhB,CAAqBrB,KAArB;AACA;AACD;AACD;AACD;;AAEDU,oBAAU,CAACF,GAAG,CAACG,MAAL,CAAV;AACA,SA5DD;AA8DA5B,aAAK,CAACuB,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,EAAwB,UAAUC,GAAV,EAAe;AACtC,cAAIA,GAAG,CAACO,IAAJ,KAAa,YAAjB,EAA+B;AAC9B;AACA;;AAED,cAAIC,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAIJ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,GAAG,CAACc,OAAJ,CAAYR,MAAhC,EAAwCF,CAAC,GAAGC,CAA5C,EAA+CD,CAAC,EAAhD,EAAoD;AACnD,gBAAIW,GAAG,GAAGf,GAAG,CAACc,OAAJ,CAAYV,CAAZ,CAAV;AACA,gBAAIY,KAAK,GAAG,gBAAgBL,IAAhB,CAAqBI,GAArB,CAAZ;;AACA,gBAAIC,KAAJ,EAAW;AACVR,sBAAQ,GAAGQ,KAAK,CAAC,CAAD,CAAhB;AACA;AACA;AACD;;AAED,cAAIC,OAAO,GAAG1C,KAAK,CAACU,SAAN,CAAgBuB,QAAhB,CAAd;;AAEA,cAAI,CAACS,OAAL,EAAc;AACb,gBAAIT,QAAQ,IAAIA,QAAQ,KAAK,MAAzB,IAAmCjC,KAAK,CAAC2C,OAAN,CAAcC,UAArD,EAAiE;AAChE,kBAAIC,EAAE,GAAG,QAAQ,IAAIC,IAAJ,GAAWC,OAAX,EAAR,GAA+B,GAA/B,GAAqCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAA9C;AACAzB,iBAAG,CAAC0B,UAAJ,CAAe,IAAf,IAAuBN,EAAvB;AAEA7C,mBAAK,CAAC2C,OAAN,CAAcC,UAAd,CAAyBQ,aAAzB,CAAuCnB,QAAvC,EAAiD,YAAY;AAC5D,oBAAIoB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBV,EAAxB,CAAV;;AACA,oBAAIQ,GAAJ,EAAS;AACRA,qBAAG,CAACG,SAAJ,GAAgBxD,KAAK,CAACyD,SAAN,CAAgBJ,GAAG,CAACK,WAApB,EAAiC1D,KAAK,CAACU,SAAN,CAAgBuB,QAAhB,CAAjC,EAA4DA,QAA5D,CAAhB;AACA;AACD,eALD;AAMA;AACD,WAZD,MAYO;AACN;AACA,gBAAI0B,IAAI,GAAGlC,GAAG,CAACH,OAAJ,CAAYjB,OAAZ,CAAoB,OAApB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,QAA1C,EAAoD,GAApD,CAAX;AAEAoB,eAAG,CAACH,OAAJ,GAActB,KAAK,CAACyD,SAAN,CAAgBE,IAAhB,EAAsBjB,OAAtB,EAA+BT,QAA/B,CAAd;AACA;AACD,SAnCD;AAqCAjC,aAAK,CAACU,SAAN,CAAgBkD,EAAhB,GAAqB5D,KAAK,CAACU,SAAN,CAAgBC,QAArC;AAEA,OAtWA,EAsWCX,KAtWD,CAAD","file":"prismjs-components-prism-markdown-es5.js","sourcesContent":["(function (Prism) {\n\n\t// Allow only one line break\n\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n\n\t/**\n\t * This function is intended for the creation of the bold or italic pattern.\n\t *\n\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t *\n\t * _Note:_ Keep in mind that this adds a capturing group.\n\t *\n\t * @param {string} pattern\n\t * @returns {RegExp}\n\t */\n\tfunction createInline(pattern) {\n\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t}\n\n\n\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'front-matter-block': {\n\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t'font-matter': {\n\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\tinside: {\n\t\t\t\t'table-data-rows': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-line': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-header-row': {\n\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// `code`\n\t\t\t\t// ``code``\n\t\t\t\tpattern: /``.+?``|`[^`\\r\\n]+`/,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ```optional language\n\t\t\t\t// code block\n\t\t\t\t// ```\n\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code-block': {\n\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'code-language': {\n\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /```/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'title': [\n\t\t\t{\n\t\t\t\t// title 1\n\t\t\t\t// =======\n\n\t\t\t\t// title 2\n\t\t\t\t// -------\n\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// # title 1\n\t\t\t\t// ###### title 6\n\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\n\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\n\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /[*_]/\n\t\t\t}\n\t\t},\n\t\t'strike': {\n\t\t\t// ~~strike through~~\n\t\t\t// ~strike~\n\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /~~?/\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example][id]\n\t\t\t// [example] [id]\n\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /^!/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n\t\t\tif (token !== inside) {\n\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t}\n\t\t});\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction walkTokens(tokens) {\n\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t *\n\t\t\t\t * token.content = [\n\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t * ];\n\t\t\t\t */\n\n\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp')\n\t\t\t\t\t// only use the first word\n\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t// add alias\n\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twalkTokens(env.tokens);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'code-block') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar codeLang = '';\n\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\tvar cls = env.classes[i];\n\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\tif (match) {\n\t\t\t\tcodeLang = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar grammar = Prism.languages[codeLang];\n\n\t\tif (!grammar) {\n\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// reverse Prism.util.encode\n\t\t\tvar code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n\t\t\tenv.content = Prism.highlight(code, grammar, codeLang);\n\t\t}\n\t});\n\n\tPrism.languages.md = Prism.languages.markdown;\n\n}(Prism));\n"]}
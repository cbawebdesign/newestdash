{"version":3,"sources":["webpack:///wizdm/src/app/pages/admin/user-access/user-access.component.ts","webpack:///wizdm/src/app/pages/admin/user-access/user-access.component.html","webpack:///wizdm/src/app/pages/admin/user-access/user-access.module.ts"],"names":["UserAccessComponent","auth","client","identifiers","post","uid","data","patch","email","listUsers","pipe","users","getUserByEmail","subscribe","user","result","customClaims","updateUser","admin","routes","path","content","component","UserAccessModule","forChild"],"mappings":"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","file":"user-access-user-access-module-es5.js","sourcesContent":["import { UserRecord, UserUpdate, UserIdentifier } from '../admin-types';\nimport { FunctionsClient } from '@wizdm/connect/functions/client';\nimport { AuthService } from '@wizdm/connect/auth';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'wm-user-access',\n  templateUrl: './user-access.component.html',\n  styleUrls: ['./user-access.component.scss']\n})\nexport class UserAccessComponent {\n\n  public email: string;\n  public result: any;\n\n  constructor(readonly auth: AuthService, private client: FunctionsClient) { }\n\n  /** List users based on idntifiers (uid, email, phone... */\n  private listUsers(identifiers: UserIdentifier[]): Observable<UserRecord[]> {\n\n    return this.client.post<UserIdentifier[], UserRecord[]>('users', identifiers);\n  }\n\n  /** Updates a user record */\n  private updateUser(uid: string, data: UserUpdate): Observable<UserRecord> {\n\n    return this.client.patch<UserUpdate, UserRecord>(`users/${uid}`, data);\n  }\n\n  private getUserByEmail(email: string): Observable<UserRecord> {\n\n    return this.listUsers([{ email }]).pipe( map( users => users[0] ));\n  }\n\n  public viewAccess(email: string) {\n\n    return this.getUserByEmail(email).subscribe( user => \n      this.result = user && user.customClaims \n    );\n  }\n\n  public grantAccess(email: string) {\n\n    return this.getUserByEmail(email).pipe(\n      switchMap( user => this.updateUser(user.uid, { \n        customClaims: { \n          admin: true \n        }\n      }))\n    ).subscribe( user => this.result = user );\n  }\n\n  public revokeAccess(email: string) {\n\n    return this.getUserByEmail(email).pipe(\n      switchMap( user => this.updateUser(user.uid, { \n        customClaims: null \n      }))\n    ).subscribe( user => this.result = user );\n  }\n}\n","\n<!-- Localized content -->\n<div *wmContent=\"let msgs select 'admin-access'\" \n      fxLayout=\"row\" fxLayoutAlign=\"center start\" \n      fxLayout.lt-sm=\"column\" fxLayoutAlign.lt-sm=\"center center\" \n      fxLayoutGap=\"16px\">\n\n  <!-- Users email form field -->\n  <mat-form-field>\n\n    <mat-label>{{ msgs.email?.label || 'Email' }}</mat-label>\n    <input matInput [(ngModel)]=\"email\" name=\"email\" email required #input=\"ngModel\">\n    <mat-hint>{{ msgs.email?.hint }}</mat-hint>\n    <mat-error *ngIf=\"input.errors?.required\">{{ msgs.email?.errors?.required }}</mat-error>\n    <mat-error *ngIf=\"input.errors?.email\">{{ msgs.email?.errors?.email }}</mat-error>\n\n  </mat-form-field>\n\n  <!-- Actions -->\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n\n    <button mat-button fxFlex=\"33\" [color]=\"msgs.actions?.view?.color || 'primary'\" [disabled]=\"input.invalid\" (click)=\"viewAccess(email)\">\n      {{ msgs.actions?.view?.caption || 'View priviledges' }}\n    </button>\n\n    <button mat-button fxFlex=\"33\" [color]=\"msgs.actions?.grant?.color || 'accent'\" [disabled]=\"input.invalid\" (click)=\"grantAccess(email)\">\n      {{ msgs.actions?.grant?.caption || 'Grant admin priviledges' }}\n    </button>\n\n    <button mat-button fxFlex=\"33\" [color]=\"msgs.actions?.revoke?.color || 'warn'\" [disabled]=\"input.invalid\" (click)=\"revokeAccess(email)\">\n      {{ msgs.actions?.reoke?.caption || 'Revoke admin proviledges' }}\n    </button>\n\n  </div>\n\n</div> \n\n<p>{{ result | json }}</p>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { UserAccessComponent } from './user-access.component';\n\nconst routes: RoutesWithContent = [{\n\n  path: '',\n  content: 'admin-access',\n  component: UserAccessComponent\n}];\n\n@NgModule({\n  declarations: [ UserAccessComponent ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class UserAccessModule { }\n"]}
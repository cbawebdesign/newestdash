{"version":3,"sources":["webpack:///wizdm/src/app/pages/admin/profile-fixer/profile-fixer.component.ts","webpack:///wizdm/src/app/pages/admin/profile-fixer/profile-fixer.component.html","webpack:///wizdm/src/app/pages/admin/profile-fixer/profile-fixer.module.ts"],"names":["run$","ProfileFixerComponent","client","users","st","report$","pipe","batch","listAllUsers","listAllProfiles","listAllFolders","profiles","folders","missing","orphans","currentId","errorsCount","report","user","index","uid","currentIndex","profile","length","id","push","folderIndex","findIndex","folder","name","splice","analyzeProfile","start","slice","done","db","get","qf","orderBy","sentinelId","prefix","reference","listAll","result","prefixes","userName","userNameMissing","concat","fullName","fullNameMissing","searchIndex","searchIndexMissing","formatData","lastName","some","value","set","ref","doc","userData","orphan","deleteFolder","subscribe","guesses","Promise","all","map","guessUserName","then","find","guess","console","log","update","forEach","createMissingProfile","deleteOrphanProfile","guessMissingUserNames","computeMissingSearchIndex","commit","toPromise","routes","path","content","component","canDeactivate","ProfileFixerModule","forChild"],"mappings":"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","file":"profile-fixer-profile-fixer-module-es5.js","sourcesContent":["import { Observable, Subject, forkJoin, of, from, defer, concat, empty } from 'rxjs';\nimport { DatabaseService } from '@wizdm/connect/database';\nimport { DatabaseBatch } from '@wizdm/connect/database/document';\nimport { StorageService, StorageRef } from '@wizdm/connect/storage';\nimport { FunctionsClient } from '@wizdm/connect/functions/client';\nimport { UserProfile, UserData } from 'app/utils/user';\nimport { map, scan, tap, switchMap } from 'rxjs/operators';\nimport { animationFrameScheduler } from 'rxjs';\nimport { UserRecord } from '../admin-types';\nimport { Component } from '@angular/core';\nimport { append } from '@wizdm/rxjs';\n\n/** Users Analysis Report */\nexport interface UserReport {\n\n  // Input data\n  users: UserRecord[];\n  profiles: UserData[];\n  folders: StorageRef[];\n\n  // Users vs profiles comparison\n  missing?: UserRecord[];\n  orphans?: UserData[];\n\n  // Profile inconsistencies\n  userNameMissing: UserData[];\n  fullNameMissing: UserData[];\n  searchIndexMissing: UserData[];\n  \n  // Status report\n  currentId?: string;\n  currentIndex?: number;\n  errorsCount?: number;\n  done?: boolean;\n}\n\n@Component({\n  selector: 'wm-profile-fixer',\n  templateUrl: './profile-fixer.component.html',\n  styleUrls: ['./profile-fixer.component.scss']\n})\nexport class ProfileFixerComponent {\n\n  readonly report$: Observable<UserReport>;\n  readonly run$ = new Subject<void>();\n  \n  /** WriteBatch collecting all the fixes to be applied over the database */\n  public batch: DatabaseBatch;\n\n  /** The DatabaseService */\n  private get db(): DatabaseService { return this.users.db; }\n\n  constructor(private client: FunctionsClient, private users: UserProfile, private st: StorageService ) { \n\n    // Builds the report observable to emit each step of the analysis\n    this.report$ = this.run$.pipe( \n\n      // Starts by resetting the WriteBatch, if any.\n      tap( () => { this.batch = null; }),\n      \n      // Concatenates two tasks\n      switchMap( () => concat( \n        \n        // First task simply emits an empty report to display the 'Fetchind data' message while loading data from the server\n        of({} as UserReport), \n        \n        // Second task starts by loading all the data from the server\n        forkJoin( this.listAllUsers(), this.listAllProfiles(), this.listAllFolders() ).pipe( \n\n          // Collects the results to initialize the repoprt with the input data\n          map( ([users, profiles, folders]) => ({ \n\n            users, profiles, folders, missing: [], orphans: [], currentId: '', errorsCount: 0 \n\n          } as UserReport) ),\n\n          // Runs every UserRecord by the animationScheduler\n          switchMap( report => from(report.users, animationFrameScheduler).pipe(\n\n            // Analyze each record building up the resulting report\n            scan( (report, user, index) => {\n\n              // Keeps track of the pregress\n              report.currentId = user.uid;\n              report.currentIndex = index;\n\n              // Gets the profile supposidely matching the UserRecord. Note that both UserRecord[] and \n              // UserData[] arrays are purposely sorted in ascending uid order server side\n              const profile = report.profiles[index - report.missing.length + report.orphans.length];\n              \n              // Matches the UserRecord with the profile:\n              // 1. Accounts for missing profiles (the user exists without a profile)\n              if(!profile || profile.id > user.uid) { \n      \n                report.missing.push( user ); \n                report.errorsCount++;\n              }\n              // 2. Accounts for orphan profiles (the profile exists without a user)\n              else if(profile.id < user.uid) { \n          \n                report.orphans.push( profile ); \n                report.errorsCount++;\n              }\n\n              // Verifies the user has a storage folder\n              const folderIndex = report.folders.findIndex( folder => folder.name === user.uid);\n              if(folderIndex >= 0) { report.folders.splice(folderIndex, 1); }\n\n              // Analyzes the profile for inconsistencies\n              this.analyzeProfile(profile, report);\n\n              // Emits the current report\n              return report;\n\n            }, report),\n\n            // Once every UserRecord as being analyzed, lets check for orphan profiles\n            append( report => {\n\n              // Computes the starting position accounting for missing and already discovered orphan profiles\n              const start = report.users.length - report.missing.length + report.orphans.length;\n\n              // Completes if there's nothing left to do\n              if(start >= report.profiles.length) { return empty(); }\n\n              // Runs every profile left otherwise\n              return from( report.profiles.slice(start), animationFrameScheduler).pipe(\n\n                // Analyze each orhpan profile\n                scan( (report, profile) => {\n\n                  // Keeps track of the progress\n                  report.currentId = profile.id;\n                  report.currentIndex++;\n\n                  // Collects the orphans \n                  report.orphans.push( profile );\n                  report.errorsCount++;\n\n                  // Emits the report\n                  return report;\n\n                }, report)\n              );\n            }, report),\n\n            // Done\n            append( report => of({ ...report, done: true }))\n          ))\n        )\n      ))\n    );\n  }\n\n  /** List all users returning them in ascending order sorted by uid */\n  private listAllUsers(): Observable<UserRecord[]> {\n\n    return this.client.get<UserRecord[]>('users');\n  }\n\n  /** List all user's profile ordered by id */\n  private listAllProfiles(): Observable<UserData[]> {\n\n    return defer( () => this.users.get( qf => qf.orderBy(this.db.sentinelId) ));\n  }\n\n  /** Deletes a storage folder from the default bucket */\n  private deleteFolder(prefix: string): Observable<void> {\n\n    return this.client.delete<void>(`folders/${prefix}`);\n  }\n\n  /** List all storage folders */\n  private listAllFolders(): Observable<StorageRef[]> {\n\n    return this.st.reference('/').listAll().pipe( map( result => result.prefixes ) );\n  }\n\n  /** Analyzes a profile serching for inconsistencies */\n  private analyzeProfile(profile: UserData, report: UserReport) {\n\n    // Skips when no profile is given\n    if(!profile) { return report; }\n\n    // Checks for user names. Required for user profile navigation\n    if(!profile.userName) { \n        \n      report.userNameMissing = (report['userNameMissing'] || []).concat(profile); \n      report.errorsCount++;\n    }\n\n    // Checks for full names. Required for user sorting\n    if(!profile.fullName) { \n        \n      report.fullNameMissing = (report['fullNameMissing'] || []).concat(profile); \n      report.errorsCount++;\n    } \n\n    // Checks for search indexes. Required for user searching\n    if(!profile.searchIndex) { \n      \n      report.searchIndexMissing = (report['searchIndexMissing'] || []).concat(profile); \n      report.errorsCount++;\n    }\n    else {\n\n      // Computes a new search index to compare the profile with \n      const { searchIndex } = this.users.formatData({ lastName: '', ...profile });\n\n      // Compare the search indexes for equality\n      if(searchIndex.length !== profile.searchIndex.length || searchIndex.some( (value, index) => value !== profile.searchIndex[index])) {\n\n        report.searchIndexMissing = (report['searchIndexMissing'] || []).concat(profile); \n        report.errorsCount++;\n      }\n    }\n\n    return report;\n  }\n\n  /** Creates a new profile from the user record (BatchWrite) */\n  public createMissingProfile(user: UserRecord, report: UserReport) {\n\n    const index = report.missing.findIndex( missing => missing === user);\n    if(index >= 0) { \n\n      const batch = this.batch || ( this.batch = this.db.batch() );\n\n      batch.set(this.users.ref.doc(user.uid), this.users.userData(user as any));\n\n      report.missing.splice(index, 1); \n      report.errorsCount--;\n    }\n  }\n\n  /** Deletes the orphan profile (WriteBatch) */\n  public deleteOrphanProfile(profile: UserData, report: UserReport) {\n\n    const index = report.orphans.findIndex(orphan => orphan === profile);\n    if(index >= 0) { \n\n      const batch = this.batch || ( this.batch = this.db.batch() );\n\n      batch.delete(this.users.ref.doc(profile.id));\n\n      report.orphans.splice(index, 1);\n      report.errorsCount--;\n    }\n  }\n\n  /** Deletes the orphan folder immediately */\n  public deleteOrphanFolder(folder: StorageRef, report: UserReport) {\n\n    const index = report.folders.findIndex(orphan => orphan === folder);\n    if(index >= 0) { \n\n      this.deleteFolder(folder.name).subscribe( () => {\n\n        report.folders.splice(index, 1);\n        report.errorsCount--;\n\n      });\n    }\n  }\n\n  /** Guesse a user nick-name (WriteBatch) */\n  public guessMissingUserNames(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    const guesses: string[] = [];\n\n    Promise.all( profiles.map( profile => {\n\n      const { fullName } = this.users.formatData({ lastName: '', ...profile });\n\n      return this.users.guessUserName(fullName).then( userName => {\n\n        while(guesses.find( guess => guess === userName )) { userName = userName.concat('z'); }\n\n        console.log(\"Guessing\", userName);\n\n        batch.update(this.users.ref.doc(profile.id), { userName });\n\n        guesses.push(userName);\n\n        report.errorsCount--;\n      });\n\n    })).then( () => delete report.userNameMissing );\n  }\n\n  /** Guesses a user's fullName (WriteBatch) */\n  public guessMissingFullNames(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    profiles.forEach( profile => {\n\n      const { fullName } = this.users.formatData({ lastName: '', ...profile });\n\n      batch.update(this.users.ref.doc(profile.id), { fullName });\n      \n      report.errorsCount--;\n\n    });\n\n    delete report.userNameMissing;\n  }\n\n  /** Coputes the search index (WriteBatch) */\n  public computeMissingSearchIndex(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    profiles.forEach( profile => {\n\n      const { searchIndex } = this.users.formatData({ lastName: '', ...profile });\n\n      batch.update(this.users.ref.doc(profile.id), { searchIndex });\n\n      report.errorsCount--;\n\n    });\n\n    delete report.searchIndexMissing;\n  }\n\n  /**  */\n  public fixAllAnomalies(report: UserReport) {\n\n    report.missing?.forEach( user => this.createMissingProfile(user, report) );\n\n    report.orphans?.forEach( profile => this.deleteOrphanProfile(profile, report) );\n\n    this.guessMissingUserNames(report.userNameMissing, report);\n\n    this.computeMissingSearchIndex(report.searchIndexMissing, report);\n  }\n\n  public applyAllFixes(report: UserReport) {\n\n    if(!report) { return; }\n\n    forkJoin( \n      \n      from( this.batch ? this.batch.commit() : empty() ),\n\n      from( report.folders || [] ).pipe( switchMap( folder => this.deleteFolder(folder.name) ) )  \n      \n    ).toPromise().then( () => this.batch = null );\n  }\n}\n","<!-- Localized content -->\n<ng-container *wmContent=\"let msgs select 'admin-fixer'\">\n\n  <!-- Run report button -->\n  <button mat-stroked-button color=\"primary\" (click)=\"run$.next()\">\n\n    <wm-icon [icon]=\"msgs.actions?.run?.icon || 'assignment'\"></wm-icon>\n\n    <span>{{ msgs.actions?.run?.caption || 'Analyze users' }}</span>\n\n  </button>\n\n  <!-- Report body -->\n  <section *ngIf=\"report$ | async as report\">\n\n    <!-- Apply all fixes button projected to the top toolbar -->\n    <ng-container *ngIf=\"batch || report.folders?.length\">\n\n      <ng-template wmActionbar let-mobile=\"isMobile\">\n        \n        <button mat-flat-button type.lt-sm=\"icon\" color=\"primary\" [disabled]=\"!report.done\" (click)=\"applyAllFixes(report)\">\n\n          <wm-icon *ngIf=\"mobile; else applyFixes\" [icon]=\"msgs.actions?.apply?.icon || 'save'\"></wm-icon>\n          \n          <ng-template #applyFixes>{{ msgs.actions?.apply?.caption || 'Apply fixes' }}</ng-template>\n\n        </button>\n\n      </ng-template>\n\n    </ng-container>\n\n    <!-- Report running progress -->\n    <mat-progress-bar color=\"primary\" \n                      [mode]=\"report.users ? 'determinate' : 'query'\" \n                      [value]=\"100 * ((report.currentIndex || 0) + 1) / (report.users?.length || 1)\">\n    </mat-progress-bar>\n\n    <!-- Data querying message -->\n    <ng-template #fetchingUsers><p>Fetching user data...</p></ng-template>\n\n    <!-- Report analysis -->\n    <ng-container *ngIf=\"report.users; else fetchingUsers\">\n\n      <p>Analysing uid {{ report.currentId }}</p>\n\n      <!-- Done, no anomalies -->\n      <ng-template #allFine><p>No anomalies found</p></ng-template>\n\n      <!-- Anomalies found -->\n      <ng-container *ngIf=\"report.errorsCount > 0; else allFine\">\n\n        <p>{{ report.errorsCount }} anomalies detected:</p>\n\n        <!-- List of anomalies -->\n        <ul>\n\n          <!-- Listing missing profiles (user exists without a profile) -->\n          <li *ngFor=\"let missing of report.missing\" fxLayoutGap=\"8px\">\n\n            <span>User <b>{{ missing.uid }}</b> do not have a profile document</span>\n            \n            <button mat-button color=\"accent\" [disabled]=\"!report.done\" (click)=\"createMissingProfile(missing, report)\">Create profile</button>\n          \n          </li>\n\n          <!-- Listing orphan profiles (profile exists without a user) -->\n          <li *ngFor=\"let orphan of report.orphans\" fxLayoutGap=\"8px\">\n\n            <span>Document <b>{{ orphan.id }}</b> do not have a matching user</span>\n\n            <button mat-button color=\"warn\" [disabled]=\"!report.done\" (click)=\"deleteOrphanProfile(orphan, report)\">Delete profile</button>\n          \n          </li>\n\n          <!-- Listing remainng folders (when done) -->\n          <ng-container *ngIf=\"report.done\">\n\n            <li *ngFor=\"let folder of report.folders\" fxLayoutGap=\"8px\">\n\n              <span>Folder <b>{{ folder.name }}</b> do not have a matching user</span>\n\n              <button mat-button color=\"warn\" (click)=\"deleteOrphanFolder(folder, report)\">Delete folder</button>\n            \n            </li>\n\n          </ng-container>\n\n          <!-- Reporting userName missing count -->\n          <li *ngIf=\"report.userNameMissing as missing\" fxLayoutGap=\"8px\">\n\n            <span>{{ missing.length }} user(s) miss a unique user name</span>\n\n            <button mat-button color=\"accent\" (click)=\"guessMissingUserNames(missing, report)\">Guess user names</button>\n\n          </li>\n\n          <!-- Reporting fullName missing count -->\n          <li *ngIf=\"report.fullNameMissing as missing\" fxLayoutGap=\"8px\">\n\n            <span>{{ missing.length }} user(s) miss the fullName field</span>\n\n            <button mat-button color=\"accent\" (click)=\"guessMissingFullNames(missing, report)\">Guess full names</button>\n\n          </li>\n\n          <!-- Reporting searchIndex missing count or mismatch -->\n          <li *ngIf=\"report.searchIndexMissing as indexes\" fxLayoutGap=\"8px\">\n\n            <span>{{ indexes.length }} user(s) aren't searchable or the search index mismatches the user's name</span>\n\n            <button mat-button color=\"accent\" (click)=\"computeMissingSearchIndex(indexes, report)\">Fix search indexes</button>\n\n          </li>\n        \n        </ul>\n\n        <!-- Fix all button at the bottom of the report -->\n        <button mat-stroked-button color=\"warn\" [disabled]=\"!report.done\" (click)=\"fixAllAnomalies(report)\">\n\n          <span>{{ msgs.actions?.fix?.caption || 'Fix all anomalies' }}</span>\n        \n        </button>\n\n      </ng-container><!-- Anomalies list -->\n\n    </ng-container><!-- Anomalies report -->\n\n  </section><!-- Report body -->\n\n  <!-- CanLeave Popup Dialog (based on MatDialog) -->\n  <wm-dialog [dontLeave]=\"batch\">\n\n    <h2 mat-dialog-title><b>{{ msgs.canLeave?.title || 'Unsaved fixes' }}</b></h2>\n  \n    <mat-dialog-content [wm-readme]=\"msgs.canLeave?.message\">\n      <span>You're about to leave the page without saving the applied fixes.<br>Please confirm.</span>\n    </mat-dialog-content>\n  \n    <mat-dialog-actions align=\"end\">\n      <button mat-button color=\"primary\" [mat-dialog-close]=\"false\" cdkFocusInitial>{{ msgs.canLeave?.cancel || 'Stay' }}</button>\n      <button mat-button color=\"warn\" [mat-dialog-close]=\"true\">{{ msgs.canLeave?.ok || 'Leave anyhow' }}</button>\n    </mat-dialog-actions>\n  \n  </wm-dialog>\n\n</ng-container><!-- Localized content -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { DialogModule } from '@wizdm/elements/dialog';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { CanLeaveModule, CanLeaveGuard } from 'app/utils/can-leave';\nimport { ActionbarModule } from 'app/navigator/actionbar';\nimport { ProfileFixerComponent } from './profile-fixer.component';\n\nconst routes: RoutesWithContent = [{\n\n  path: '',\n  content: 'admin-fixer',\n  component: ProfileFixerComponent,\n  canDeactivate: [ CanLeaveGuard ]\n\n}];\n\n@NgModule({\n  declarations: [ ProfileFixerComponent ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    IconModule,\n    ReadmeModule,\n    DialogModule,\n    ButtonChangerModule,\n    ActionbarModule,\n    CanLeaveModule,\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class ProfileFixerModule { }\n"]}
{"version":3,"sources":["./wizdm/src/app/pages/profile/profile.module.ts","./wizdm/src/app/pages/profile/profile.service.ts","./wizdm/src/app/navigator/actionbar/index.ts","./wizdm/src/app/pages/profile/profile.component.ts","./wizdm/src/app/pages/profile/profile.component.html"],"names":[],"mappings":"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","file":"pages-profile-profile-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { AvatarModule } from '@wizdm/elements/avatar';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { ActionbarModule } from 'app/navigator/actionbar';\nimport { ScrollingModule } from 'app/utils/scrolling';\nimport { ProfileService } from './profile.service';\nimport { ProfileComponent } from './profile.component';\n\nconst routes: RoutesWithContent = [\n  {\n    path: '',\n    content: 'profile',\n    component: ProfileComponent,\n    canActivate: [ ProfileService ]\n  }\n];\n\n@NgModule({\n  declarations: [ ProfileComponent ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatButtonModule,\n    AvatarModule,\n    IconModule,\n    ButtonChangerModule,\n    ScrollingModule,\n    ActionbarModule,\n    ContentRouterModule.forChild(routes)\n  ],\n  providers: [ ProfileService ]\n})\nexport class ProfileModule { }\n","import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserProfile } from 'app/utils/user';\nimport { take, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProfileService implements CanActivate {\n\n  constructor(private profile: UserProfile, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    return this.profile.data$.pipe( take(1), map(\n      data => {\n\n        if(!data) { return true; }\n\n        const redirect = state.url.replace(/@me(\\/|$)/, (_, trail) => {\n          return '@' + data.userName + trail;\n        });\n\n        return redirect !== state.url ? this.router.parseUrl(redirect) : true;\n      }\n    ));\n  }\n}","export * from './action.component';\nexport * from './actionbar.directive';\nexport * from './actionbar.module';","import { UserData, UserProfile } from 'app/utils/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'wm-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent  {\n\n  readonly user$: Observable<UserData>;\n\n  public get me(): string { return this.user.uid; }\n\n  constructor(readonly user: UserProfile, route: ActivatedRoute) { \n\n    this.user$ = route.paramMap.pipe( switchMap( params => \n      user.fromUserName(params.get('userName')) || \n      user.fromUserId(params.get('userId'))\n    ));\n  }\n}\n","\n<!-- Localized content -->\n<ng-container *wmContent=\"let msgs select 'profile'\" scrollPositionRestoration=\"top\" gtag=\"profile\">\n\n  <!-- Resolves user's data -->\n  <div class=\"banner\" *ngIf=\"user$ | async as data\"\n       fxLayout=\"row\" fxLayoutAlign=\"start start\" \n       fxLayout.lt-sm=\"column\" fxLayoutAlign.lt-sm=\"start center\">\n\n    <!-- Action Bar (projected in the top toolbar) -->\n    <ng-template wmActionbar let-mobile=\"isMobile\">\n\n      <!-- Edit profile button (my profile) -->\n      <button mat-stroked-button *ngIf=\"data.id === me\"\n              type.lt-sm=\"icon\"\n              color=\"primary\" \n              class=\"edit\" \n              [routerLink]=\"msgs.actions?.edit?.link || '/settings'\">\n        \n        <!-- Use an icon button on small screens -->\n        <wm-icon *ngIf=\"mobile; else editProfile\" [icon]=\"msgs.actions?.edit?.icon || 'edit'\"></wm-icon>\n\n        <!-- Use a stroked button on large screens -->\n        <ng-template #editProfile>{{ msgs.actions?.edit?.caption || 'Edit profile' }}</ng-template>\n    \n      </button>\n\n    </ng-template>\n\n    <!-- User's picture -->\n    <wm-avatar class=\"photo\" [src]=\"data.photo\" color=\"primary\" shape=\"squared\"></wm-avatar>\n\n    <!-- User's name and bio -->\n    <div class=\"text\" fxLayout=\"column\">\n\n      <div class=\"title\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n\n        <!-- Full User's name -->\n        <h1 ngClass.gt-xs=\"mat-display-1\">{{ data.fullName || data.name }}</h1>\n\n        <!-- Message button (not my profile) -->\n        <button mat-flat-button type.lt-sm=\"mini-fab\" color=\"primary\" class=\"edit\" \n                routerLink=\"/chat\" [queryParams]=\"{ with: data.userName }\"\n                *ngIf=\"data.id !== me\">\n\n          <!-- Always display an icon small/large screens -->\n          <wm-icon [icon]=\"msgs.actions?.message?.icon || 'chat_bubble_outline'\"></wm-icon>\n\n          <!-- No text for small screens -->\n          <span fxHide.lt-sm>{{ msgs.actions?.message?.caption || 'Message' }}</span>\n              \n        </button>\n      \n      </div>\n\n      <!-- User's location -->\n      <span class=\"location\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        \n        <wm-icon [icon]=\"msgs.location?.icon || 'location_on'\" inline></wm-icon>\n\n        {{ data.location || msgs.location?.placeholder || 'Planet Earth' }}\n\n      </span>\n\n      <!-- User's bio -->\n      <div class=\"wrapper\"><p>{{ data.bio || msgs.bio?.placeholder || 'Searching for wizdm' }}</p></div>\n\n    </div>\n\n  </div>\n\n</ng-container>\n"],"sourceRoot":"webpack:///"}
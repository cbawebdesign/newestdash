{"version":3,"sources":["./doorbell/src/lib/doorbell.module.ts","./doorbell/src/index.ts","./doorbell/src/lib/doorbell.definitions.ts","./wizdm/src/app/dialogs/feedback/feedback.module.ts","./wizdm/src/app/dialogs/feedback/feedback.component.ts","./wizdm/src/app/dialogs/feedback/feedback.component.html","./doorbell/src/lib/doorbell.service.ts"],"names":[],"mappings":"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","file":"dialogs-feedback-feedback-module-es2015.js","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DoorbellConfig, DoorbellConfigToken } from './doorbell.definitions';\nimport { DoorbellService } from './doorbell.service';\n\n@NgModule({\n  providers: [ DoorbellService ]\n})\nexport class DoorbellModule {\n\n  static init(config: DoorbellConfig): ModuleWithProviders<DoorbellModule> {\n    return {\n      ngModule: DoorbellModule,\n      providers: [\n        { provide: DoorbellConfigToken, useValue: config }\n      ]\n    }\n  }\n}\n","export * from './lib/doorbell.module';\nexport * from './lib/doorbell.service';\nexport * from './lib/doorbell.definitions';\n","import { InjectionToken } from '@angular/core';\n\nexport interface DoorbellConfig {\n  url    : string,//'https://doorbell.io/api/applications'\n  id     : string,//'your id here',\n  appKey : string,//'your key here'\n};\n\nexport interface DoorbellSubmit {\n  email        : string,\n  message      : string,\n  name?        : string\n  ip?          : string,\n  sentiment?   : 'positive'|'neutral'|'negative',\n  tags?        : string|string[],\n  properties?  : { [key: string]: string },\n  //attachments? : number[], Automatically filled up by the uploader()\n  nps?         : number,\n  language?    : string\n};\n\nexport const DoorbellConfigToken = new InjectionToken<DoorbellConfig>('wizdm.doorbel.config');","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { RedirectModule } from '@wizdm/redirect';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { DoorbellModule } from '@wizdm/doorbell';\nimport { FeedbackComponent } from './feedback.component';\n\n// Environment\nimport { environment } from 'env/environment';\nconst  { doorbell } = environment;\n\n/** Dialog route. This route will be used by the DialogLoader, emulating the router, to lazily load the dialog */\nconst routes: RoutesWithContent = [{\n  path: '',\n  content: 'feedback',\n  component: FeedbackComponent,\n  data: { dialogConfig: { maxWidth: '100%' }}\n}];\n\n@NgModule({\n\n  declarations: [ FeedbackComponent ],\n\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressBarModule,\n    RedirectModule,\n    IconModule,\n    // Initialize the doorbell service\n    DoorbellModule.init(doorbell),\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class FeedbackModule { }\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { DoorbellService } from '@wizdm/doorbell';\nimport { UserProfile } from 'app/utils/user';\n\n@Component({\n  selector: 'wm-feedback-dlg',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent {\n\n  public name: string;\n  public email: string;\n  public message: string;\n  public files: FileList;\n  public success = false;\n  public sending = false;\n  public sent = false;\n\n  get me() { return this.user.data || {}; }\n  \n  get authenticated() { return this.user.auth.authenticated; }\n\n  constructor(@Inject(MAT_DIALOG_DATA) data: any, private ref: MatDialogRef<any>, private user: UserProfile, private doorbell: DoorbellService) { \n\n    // Initializes the form with the authenticated user name/email when available\n    this.name = this.me.fullName || this.me.name || '';\n    this.email = this.me.email || '';\n    this.message = '';\n    this.files = null;\n\n    // Prevents user to close the dialog\n    //this.ref.disableClose = true;\n\n    // Rings the doorbell when opening the feedback form\n    this.ref.afterOpened().subscribe( () => this.doorbell.ring() );\n  }\n\n  get fileSizeExceeded(): boolean {\n\n    if(!this.files || this.files.length === 0) { return false; }\n\n    for(let i = 0; i < this.files.length; i++) {\n\n      if(this.files[i].size > this.doorbell.maxFileSize) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public send(language?: string) {\n\n    // Turns the sending flag on\n    this.sending = true;\n\n    // Submit the feedback report to Doorbell.io\n    this.doorbell.submit({ \n\n      // Main form data\n      name: this.name,\n      email: this.email,\n      message: this.message,\n      \n      // Adds the current language\n      language,\n\n      // Includes the user id when available\n      properties: this.authenticated ? { userId: this.me.id } : undefined\n    \n    }, this.files).then( success => {\n\n      // Tracks the result\n      this.success = success;\n\n      // Turns the sending flag off\n      this.sending = false;\n\n      // Flags as sent showing the resulting message\n      this.sent = true;\n    }); \n  }\n}\n","\n<!-- Gets the localized content -->\n<ng-container *wmContent=\"let msgs select 'feedback'; let lang = language\">\n\n  <!-- Common header with close button -->\n  <header mat-dialog-title fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\n    \n    <span>{{ msgs.title || 'Feedback'}}</span>\n    \n    <!-- Closes the dialog returning the feedback sending result -->\n    <button mat-icon-button [mat-dialog-close]=\"success\">\n      <wm-icon inline=\"true\" icon=\"close\"></wm-icon>\n    </button>\n\n  </header>\n\n  <!-- Thank you message on feedback sent -->\n  <ng-template #thankYou>\n\n    <mat-dialog-content [ngSwitch]=\"success\">\n\n      <p class=\"message color-default primary\" *ngSwitchCase=\"true\">{{ msgs.notifications?.success || 'Succeeded' }}</p>\n\n      <p class=\"message color-default warn\" *ngSwitchCase=\"false\">{{ msgs.notifications?.error || 'Error' }}</p>\n    \n    </mat-dialog-content>\n\n  </ng-template>\n\n  <!-- Feedback form to fill-in -->\n  <form (ngSubmit)=\"send(lang)\" *ngIf=\"!sent; else thankYou\" [disabled]=\"sending\" #form=\"ngForm\">\n\n    <mat-dialog-content fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\" fxLayoutGap=\"10px\">\n\n      <!-- Name -->\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{ msgs.name?.label || 'Name' }}</mat-label>\n        <input matInput [(ngModel)]=\"name\" name=\"name\" [disabled]=\"authenticated\">\n        <mat-hint>{{ msgs.name?.hint }}</mat-hint>\n      </mat-form-field>\n  \n      <!-- Email -->\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{ msgs.email?.label || 'Email' }}</mat-label>\n        <input matInput [(ngModel)]=\"email\" name=\"email\" [disabled]=\"authenticated && !!me.email\" required email #emailInput=\"ngModel\">\n        <mat-hint>{{ msgs.email?.hint }}</mat-hint>\n        <mat-error *ngIf=\"emailInput.errors?.required\">{{ msgs.email?.errors?.required || 'Email required' }}</mat-error>\n        <mat-error *ngIf=\"emailInput.errors?.email\">{{ msgs.email?.errors?.invalid || 'Invalid email' }}</mat-error>\n      </mat-form-field>\n\n      <!-- Message -->\n      <mat-form-field appearance=\"outline\">\n        <mat-label>{{ msgs.message?.label || 'Message' }}</mat-label>\n        <textarea matInput [(ngModel)]=\"message\" name=\"message\" rows=\"5\" required cdkFocusInitial #messageInput=\"ngModel\"></textarea>\n        <mat-hint>{{ msgs.message?.hint }}</mat-hint>\n        <mat-error *ngIf=\"messageInput.errors?.required\">{{ msgs.message?.errors?.required || 'Message required' }}</mat-error>\n      </mat-form-field>\n\n      <!-- Attachments -->\n      <ng-container *ngIf=\"msgs.attachments && msgs.attachments.enable\">\n\n        <input style=\"display:none\" type=\"file\" multiple (change)=\"files = $event.target.files\" #openfile />\n        \n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\" class=\"upload\" \n          [style.pointer-events]=\"sending ? 'none' : undefined\"\n          [class.color-disabled]=\"sending\"\n          (click)=\"openfile.value=''; openfile.click()\">\n\n          <wm-icon [icon]=\"msgs.attachments.icon || 'attach_file'\"></wm-icon>\n\n          <span class=\"mat-error\" *ngIf=\"fileSizeExceeded; else filesOk\">\n            {{ msgs.attachments.errors?.sizeExceeded || 'File size exeeded' }}\n          </span>\n          <ng-template #filesOk>\n\n            <span>{{ msgs.attachments.label || 'Attachments' }}</span>\n            \n            <span *ngIf=\"files?.length > 0\">&nbsp;({{ files.length }})</span>\n\n          </ng-template>\n        \n        </div>\n      </ng-container>\n\n    </mat-dialog-content>\n\n    <!-- Submit button -->\n    <mat-dialog-actions align=\"end\">\n\n      <mat-progress-bar *ngIf=\"sending\" mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>\n\n      <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid || sending\">{{ msgs.send || 'Send' }}</button>\n\n    </mat-dialog-actions>\n\n  </form>\n\n  <!-- Credits -->\n  <a *ngIf=\"msgs.credits as credits\" class=\"mat-small\" [wmRedirect]=\"credits.url\">{{ credits.caption }}</a>\n\n</ng-container>\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { DoorbellConfig, DoorbellSubmit, DoorbellConfigToken } from './doorbell.definitions';\n\n@Injectable()\nexport class DoorbellService {\n\n  // Attachements allowed up to 5MB\n  readonly maxFileSize = 5 * 1024 * 1024;\n\n  constructor(@Inject(DoorbellConfigToken) private config: DoorbellConfig, private http: HttpClient) { \n\n    if(!config.url || !config.id || !config.appKey) {\n      throw( new Error('DoorbellSerive requires a valid configuration!!!') );\n    }\n  }\n\n  /** Used to signal the feedback form has been opened */\n  public ring(): Promise<boolean> {\n\n    return this.http.post(`${this.config.url}/${this.config.id}/open`, '', { \n      headers: { 'Content-Type': 'text/html' },\n      params: { 'key': this.config.appKey },\n      observe: 'response',\n      responseType: 'text' \n     }).toPromise().then( res => {console.log(res); return res.status === 201;} );\n  }\n\n  /** Submits a feedback form with optional attachments\n   * @param body is the form data content\n   * @param files is the optional list of files to attach\n   */\n  public submit(body: DoorbellSubmit, files?: FileList): Promise<boolean> {\n\n    // Uploads the attachement first\n    return this.uploader(files).pipe( switchMap( attachments => {\n\n      // Submits the form content including the atachment IDs \n      return this.http.post(`${this.config.url}/${this.config.id}/submit`, \n        { ...body, attachments }, { \n          headers: { 'Content-Type': 'application/json' },\n          params: { 'key': this.config.appKey },\n          observe: 'response',\n          responseType: 'text' \n        }\n      );\n    })).toPromise().then( res => res.status === 201 );\n  }\n\n  // Helper function to build a multipart/form-data object from the list of file to attach  \n  private formData(files: FileList): FormData {\n\n    const formData = new FormData();\n\n    // Fills up the form data\n    for(let i = 0; i < files.length; i++) {\n\n      // Skips the file exceedign the maximum size\n      if(files[i].size <= this.maxFileSize) {\n        formData.append(files[i].name, files[i]);\n      }\n    }\n\n    return formData;\n  }\n\n  // Helper function to upload the attachments prior to submit the form\n  private uploader(files?: FileList): Observable<[number]|undefined> {\n\n    // Do nothing when no files are there\n    if(!files || files.length === 0) { return of(undefined); }\n\n    // Post the attachments\n    return this.http.post(`${this.config.url}/${this.config.id}/upload`, \n      this.formData(files), { \n        headers: { 'Accept': 'application/json' }, //'Content-Type': 'multipart/form-data' },\n        params: { 'key': this.config.appKey },\n        observe: 'response',\n        responseType: 'json' \n      }\n    ).pipe(\n      catchError( () => of(undefined) ),\n      map( res => !!res && res.status === 201 ? res.body as [number] : undefined )\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///emoji-keyboard/src/lib/emoji-keyboard.component.ts","webpack:///emoji-keyboard/src/lib/emoji-keyboard.component.html","webpack:///wizdm/src/app/utils/textarea/index.ts","webpack:///wizdm/src/app/utils/textarea/typein-adapter/index.ts","webpack:///emoji/src/lib/input/emoji-input.component.ts","webpack:///emoji/src/lib/input/emoji-input.component.html","webpack:///emoji/src/lib/material/index.ts","webpack:///wizdm/src/app/utils/textarea/textarea-newline/index.ts","webpack:///emoji/src/lib/input/emoji-input.module.ts","webpack:///emoji/src/lib/input/index.ts","webpack:///emoji/src/lib/material/emoji-material.directive.ts","webpack:///wizdm/src/app/utils/textarea/textarea-newline/textarea-newline.directive.ts","webpack:///emoji-keyboard/src/index.ts","webpack:///wizdm/src/app/utils/textarea/typein-adapter/typein-adapter.directive.ts","webpack:///emoji-keyboard/src/lib/emoji-keyboard.module.ts","webpack:///emoji/src/lib/material/emoji-material.module.ts","webpack:///emoji/src/lib/input/emoji-control.directive.ts","webpack:///wizdm/src/app/utils/textarea/textarea.module.ts","webpack:///emoji-keyboard/src/lib/emoji-keys.ts"],"names":["EmojiKeyboardComponent","emojis","elref","zone","favorites$","keySize","mode","_disabled","keyPressed","rows$","window","pipe","onStable","Math","floor","nativeElement","scrollWidth","cols","favs","length","name","id","concat","spliRows","reduce","out","group","push","keys","recentlyUsed","emojiGroups","rows","offsets","computeOffsets","currentId$","scroller","elementScrolled","measureScrollOffset","top","ids","Object","reverse","find","key","value","next","disabled","count","Array","ceil","fill","map","_","i","slice","findIndex","row","scrollTo","emit","EmojiInput","document","utils","valueChange","required","newline","historyTime","historyLimit","store$","start","end","getSelection","defaultView","test","navigator","platform","activeElement","element","focus","blur","undefined","enableHistory","compile","_value","clearHistory","ev","data","insert","del","backspace","shiftKey","isEmoji","repeat","mac","metaKey","ctrlKey","keyAccellerators","redo","undo","editCopy","cp","clipboardData","setData","query","e","getData","source","endsWith","async","subscribe","max","min","sort","apply","collapsed","store","ins","prev","text","caret","update","focused","whenDone","pos","match","matchEmojiCodes","index","offset","tmp","sel","selection","anchorNode","anchorOffset","isCollapsed","focusNode","focusOffset","range","node","collapse","schedule","segment","at","abs","content","segments","seg","nodeType","Node","TEXT_NODE","childNodes","item","child","firstChild","nodeText","nextSibling","nodeValue","ELEMENT_NODE","tagName","alt","sub$","unsubscribe","timeIndex","history","debounce","limit","payload","interval","snapshot","splice","unshift","pop","force","undoable","redoable","shift","EmojiInputModule","EmojiMaterial","formField","ngControl","input","Error","stateChanges","placeholder","empty","errors","event","provide","useExisting","TextareaNewline","code","TypeinAdapter","emoji","textarea","hasFocus","select","selectionStart","selectionEnd","ensureFocus","setRangeText","EmojiKeyboardModule","EmojiMaterialModule","EmojiControl","dispose$","blur$","change$","fn","complete","multi","TextareaModule","EMOJI_KEYS","providedIn","factory","icon"],"mappings":"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","file":"default~dialogs-post-post-dlg-module~pages-chat-chat-module-es5.js","sourcesContent":["import { Component, Input, Output, EventEmitter, Inject, ViewEncapsulation, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { sample, map, take, tap, startWith, switchMap, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { Observable, fromEvent, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMOJI_KEYS, EmojiGroup } from './emoji-keys';\nimport { runInZone } from '@wizdm/rxjs';\n\n@Component({\n  selector: 'wm-emoji-keyboard',\n  templateUrl: './emoji-keyboard.component.html',\n  styleUrls: ['./emoji-keyboard.component.scss'],\n  host: { \"class\": \"wm-emoji-keyboard\" },\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmojiKeyboardComponent {\n\n  @ViewChild(CdkVirtualScrollViewport) scroller: CdkVirtualScrollViewport;\n\n  private favorites$ = new BehaviorSubject<string[]>([]);\n  readonly currentId$: Observable<string>;\n  readonly rows$: Observable<any[]>;\n\n  private offsets: { [key:string]: number };\n  readonly keySize = 40;\n\n  /** The latest favorites */\n  get favorites(): string[] { return this.favorites$.value; }\n\n   /** Mode flag:\n   * 'web' renders emoji as images\n   * 'native' renders the text as it is relying on the OS native support\n   */\n  @Input() mode: 'native'|'web' = 'web';\n\n  /** Array of favorites emoji for the 'Recenlty used' group */\n  @Input() set favorites(favs: string[]) {\n    this.favorites$.next(favs);\n  }\n\n  /** Optional alternative labels for the emoji groups */\n  @Input() labels: { [key:string]: string };\n\n  /** Disables the keyboard */\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n\n  get disabled(): boolean { return this._disabled; }\n  private _disabled: boolean = false;\n\n  /** Emits the selected emoji */\n  @Output() keyPressed = new EventEmitter<string>();\n\n  constructor(@Inject(EMOJI_KEYS) readonly emojis: EmojiGroup[], elref: ElementRef<HTMLElement>, zone: NgZone) { \n\n    // Rows observable adjusting on window resize to work with virtual scrolling\n    this.rows$ = fromEvent(window, 'resize').pipe( \n      // Makes sure to start with a value\n      startWith(null),\n      // Waits for rendering to complete\n      sample(zone.onStable),\n      // Computes the number of columns based on the actual width\n      map( () => Math.floor(elref.nativeElement.scrollWidth / this.keySize) ),\n      // Filters for changes\n      distinctUntilChanged(),\n      // Combines favorites with all emoji keys\n      switchMap( cols => combineLatest(\n        // Splits the favorites first\n        this.favorites$.pipe( map( favs => {\n          // Skips when no favorites\n          if(!favs || favs.length <= 0) { return []; }\n          // Returns the group of recently used \n          return ([{ \n            name: 'Recently used', \n            id: 'recently_used' \n          }] as any[]).concat( this.spliRows(favs, cols) );\n        })),\n        // Splits the emoji groups\n        of(this.emojis.reduce( (out, group: any) => {\n          // Pushes the group first \n          out.push({ name: group.name, id: group.id });\n          // Concats the key rows next\n          return out.concat( this.spliRows(group.keys, cols) );\n        }, []))\n      )), \n      // Concatenates the recently Used with groups\n      map( ([recentlyUsed, emojiGroups]) => recentlyUsed.concat(emojiGroups) ),\n      // At last, computes the scrolling offset for each group\n      tap( rows => this.offsets = this.computeOffsets(rows) )\n    );\n\n    // Builds the current group id observable\n    this.currentId$ = zone.onStable.pipe( \n      // Waits for the rendering to complete\n      take(1), \n      // Updates with scrolling\n      switchMap( () => this.scroller.elementScrolled() ),\n      // Measures the scrolled offset\n      map( () => this.scroller.measureScrollOffset('top') ),\n      // Makes sure to start with 0 offset\n      startWith(0),\n      // Detects the group based on the scrolled offset \n      map( top => {\n        // Computes a reversed array of group ids \n        const ids = Object.keys(this.offsets || {}).reverse();\n        // Seeks for the current group id\n        return ids.find( key => top >= this.offsets[key] ) ||  'recently_used';\n      }),\n      // Filters for changes\n      distinctUntilChanged(),\n      // Runs within the angular's zone\n      runInZone(zone),\n      // Shares the same observable among subscribers\n      shareReplay(1)\n    )\n  }\n\n  ngDoCheck() {\n\n    //this.scroller?.checkViewportSize();\n\n  }\n\n  /** Splits the given array of emoji keys into chuncks of the proper length */\n  private spliRows(keys: string[], count: number): string[][] {\n\n    return Array( Math.ceil(keys.length / (count || 1)))\n      .fill(0).map( (_, i) => keys.slice(i * count, i * count + count ));\n  }\n\n  /** Computes a map of emoji group offsets */\n  private computeOffsets(rows: any[]) {\n\n    return this.emojis.reduce( (map, group) => {\n\n      map[group.id] = this.keySize * rows.findIndex( row => row.id === group.id );\n\n      return map;\n    }, {});\n  }\n\n  /** Scrolls to the given emoji group */\n  public scrollTo(id: string) {\n    this.scroller.scrollTo({ top: this.offsets[id] || 0 });\n  }\n\n  /** Emits the emoji key */\n  public press(key: string) {\n    return this.keyPressed.emit(key), false;\n  }\n}","<!-- Virtual scroll viewport -->\n<cdk-virtual-scroll-viewport fxFlex=\"1 1 auto\" [itemSize]=\"keySize\">\n  \n  <!-- Renders the key rows within the viewport -->\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" [style.height.px]=\"keySize\" *cdkVirtualFor=\"let row of rows$ | async\">\n\n    <!-- Group name -->\n    <span class=\"group\" *ngIf=\"row.id; else keys\">{{ \n      labels && labels[row.id] || row.name \n    }}</span>\n\n    <!-- Emoji keys row -->\n    <ng-template #keys>\n\n      <!-- Renders a button for each key -->\n      <button mat-icon-button [disabled]=\"disabled\" (mousedown)=\"press(key)\" *ngFor=\"let key of row\">\n        <!-- Renders the emoji -->\n        <span class=\"key\" [attr.mode]=\"mode\" [attr.key]=\"key\"></span>\n    \n    </button>\n      \n    </ng-template>\n\n  </div>\n  \n</cdk-virtual-scroll-viewport>\n\n<!-- Renders the group bottom bar -->\n<mat-divider></mat-divider>\n\n<!-- Sticks the bar on the bottom -->\n<nav fxFlex=\"0 0 auto\" fxLayout=\"row\">\n\n  <!-- Starts with latest favorites, when present -->\n  <button mat-button fxFlex=\"100\" \n          [class.selected]=\"(currentId$ | async) === 'recently_used'\" \n          [disabled]=\"disabled\"\n          (click)=\"scrollTo('recently_used')\" \n          *ngIf=\"favorites?.length > 0\">\n\n    <mat-icon>schedule</mat-icon>\n  </button>\n\n  <!-- Fills with group buttons -->\n  <button mat-button fxFlex=\"100\"  \n          [class.selected]=\"(currentId$ | async) === group.id\" \n          [disabled]=\"disabled\"\n          (click)=\"scrollTo(group.id)\"\n          *ngFor=\"let group of emojis\">\n\n    <mat-icon>{{ group.icon }}</mat-icon>\n  </button>\n\n</nav>","export * from './textarea-newline';\nexport * from './typein-adapter';\nexport * from './textarea.module';","export * from './typein-adapter.directive';","import { Component, Input, Output, EventEmitter, HostBinding, HostListener, Inject } from '@angular/core';\nimport { ElementRef, ViewEncapsulation, NgZone } from '@angular/core';\nimport { Subject, Subscription, animationFrameScheduler } from 'rxjs';\nimport { filter, map, timeInterval, take } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EmojiText, emSegment } from '@wizdm/emoji/text';\nimport { EmojiUtils } from '@wizdm/emoji/utils';\nimport { DOCUMENT } from '@angular/common';\nimport { OnDestroy } from '@angular/core';\n\n/** @dynamic - tells ngc to ignore the error on type Document generated by strictEmitMetadata: true */\n@Component({\n  selector: 'wm-emoji-input',\n  templateUrl: './emoji-input.component.html',\n  styleUrls: ['./emoji-input.component.scss'],\n  inputs: ['mode'],\n  encapsulation: ViewEncapsulation.None,\n  host: { \"class\": \"wm-emoji-input\" }\n})\nexport class EmojiInput extends EmojiText implements OnDestroy {\n\n  // Current selection\n  private start: number;\n  private end: number;\n\n  constructor(@Inject(DOCUMENT) private document: Document, private elref: ElementRef<HTMLElement>, private zone: NgZone, utils: EmojiUtils) {\n    super(utils);\n  }\n\n  /** True whenever the curernt selection is collapsed in a cursor */\n  public get collapsed(): boolean { return this.start === this.end; }\n\n  /** Input's HTMLElement */\n  public get element(): HTMLElement { return this.elref.nativeElement; }\n\n  /** The Document's Selection object */\n  private get selection(): Selection { return this.document.getSelection(); }\n\n  /** The Window object */\n  private get window(): Window { return this.document.defaultView; }\n\n  /** True whenever the platform is Mac, iPhone or iPad */\n  private get mac(): boolean { return /Mac|^iP/.test(this.window.navigator.platform); }\n\n  /** True whenever this input has focus */\n  public get focused(): boolean { return this.document.activeElement === this.element; }\n\n  /** Sets the focus on the input's element */\n  public focus() { this.element.focus(); }\n\n  /** Removes focus from the input's element; keystrokes will subsequently go nowhere. */\n  public blur() { this.element.blur(); }\n\n  // Applies the contentediable attribute unless the input is disabled\n  @HostBinding('attr.contenteditable') get editable() { \n    return this.disabled ? undefined : ''; \n  }\n\n  // Marks the input as empty supporting displaying/hiding of the placeholder text\n  @HostBinding('class.empty') get showPlaceholder(): boolean {\n    return !this.value;\n  }\n\n  /** The placeholder text */\n  @HostBinding('attr.placeholder')\n  @Input() placeholder: string;\n\n  /** The input value */\n  @Input() set value(value: string) {\n    // Avoids unecessary changes\n    if(value === this.value) { return; }\n    // Restarts the undo history whenevevr the input value changes.\n    this.enableHistory(this.historyTime, this.historyLimit); \n    // Compiles the new text and emits the update\n    this.compile( this._value = value );\n  }\n\n  // Clears the history while leaving \n  ngOnDestroy() { this.clearHistory(); }\n\n   /** Emits the new text on changes */\n  @Output() valueChange = new EventEmitter<string>();\n  \n  /** Disables the input */\n  @Input('disabled') set disableInput(value: boolean) { this.disabled = coerceBooleanProperty(value); }\n  public disabled = false; \n\n  /** Marks the input as required */\n  @Input('required') set requireInput(value: boolean) { this.required = coerceBooleanProperty(value); }\n  public required = false; \n\n  /** Selects the newline mode. \n   * - None: enter does nothig. \n   * - Always: enter always inserts a new line. \n   * - Shift: enter inserts newline in conjunction with the shift key only */\n  @Input() newline: 'none'|'always'|'shift' = 'always';\n\n  /** Undo history bouncing time */\n  @Input() historyTime: number = 1000;\n\n  /** Undo history limits */\n  @Input() historyLimit: number = 128;\n\n  // Handles beforeinput event\n  @HostListener('beforeinput', ['$event']) beforeInput(ev: InputEvent) { \n    // Divert the insertion content to the internal implementation\n    if(ev.data) { this.insert(ev.data); }\n    // Prevents the default behavior\n    return false;\n  }\n\n  // Handles keydown event\n  @HostListener('keydown', ['$event']) keyDown(ev: KeyboardEvent) {\n\n    switch(ev.key) {\n\n      // Reverts navigation to default\n      case 'ArrowDown': case 'ArrowLeft': case 'ArrowRight': case 'ArrowUp': \n      case 'Tab': case 'Home': case 'End': case 'PageUp': case 'PageDown':\n      return true;\n     \n      // Deletes the current selection\n      case 'Delete':\n      this.del(); break;\n      \n      // Deletes back\n      case 'Backspace':\n      this.backspace(); break;\n\n      // Insert a newline according to the newline input mode\n      case 'Enter': if(this.newline === 'always' || (this.newline === 'shift' && ev.shiftKey)) { \n        this.insert('\\n');\n      }\n      break;\n\n      // Editing\n      default: if(ev.key.length === 1 || this.utils.isEmoji(ev.key) ) {\n\n        // Prevents keyboard repeating giving a chance to Mac's press&hold to work\n        if(ev.repeat && this.mac) { return false; }\n\n        // Intercepts accelerators\n        if(ev.metaKey && this.mac || ev.ctrlKey) {\n          return this.keyAccellerators(ev);\n        }\n\n        // Inserts new content\n        this.insert(ev.key);\n      }\n    }\n\n    // Prevents default\n    return false;\n  }\n\n  /** Handles keayboard accellerators */\n  private keyAccellerators(ev: KeyboardEvent) {\n\n    switch(ev.key) {\n\n      // Ctrl/Cmd Z -> Undo\n      case 'z': case 'Z': \n      // Reverts to Redo whenever shift is pressed on a Mac\n      if(ev.shiftKey && this.mac) { return this.redo(), false; }\n      // Performs thr Undo\n      return this.undo(), false;\n\n      // Ctrl/Cmd Y -> Redo \n      case 'y': case 'Y': \n      // Performs the Redo unless its a Mac\n      if(!this.mac) { return this.redo(), false; }\n    }\n    // Reverts to default\n    return true;\n  }\n\n  // Handles cut event\n  @HostListener('cut', ['$event']) editCut(ev: ClipboardEvent) {\n    // Reverts the cut request to copy the content first...\n    this.editCopy(ev);\n    // Deletes the selection\n    this.del();\n    // Always prevent default\n    return false;\n  } \n  \n  // Handles copy event\n  @HostListener('copy', ['$event']) editCopy(ev: ClipboardEvent) {\n    // Gets the clipboard object\n    const cp = ev.clipboardData || (this.window as any).clipboardData;\n    if(!cp) { return true; }\n    // Copies the selected text\n    try { cp.setData('text', this.query().value.slice(this.start, this.end) ); }\n    catch(e) { /*console.error(e);*/ }\n    // Prevents default\n    return false;\n  }\n\n  // Handles paste event\n  @HostListener('paste', ['$event']) editPaste(ev: ClipboardEvent) {\n    // Gets the clipboard object\n    const cp = (ev.clipboardData || (window as any).clipboardData);\n    if(!cp) { return false; }\n    // Pastes the data from the clipboard\n    try { this.insert( cp.getData('text') ); }\n    catch(e) { /*console.error(e);*/ }\n    // Prevents default\n    return false;\n  }\n\n  /** Compiles the input text into segment accounting for multiple lines */\n  protected compile(source: string): number {\n    // Appends an extra '\\n' forcing the browser displaying a new line normally omitted when at the end\n    return super.compile(source + (source && source.endsWith('\\n') ? '\\n' : ''));\n  }\n\n  /** Wait for the current queue of microtaks to be emptied. The async funtion will than be called after the rendering completed */\n  private whenDone(async: () => void) { \n    this.zone.onStable.pipe( take(1) ).subscribe( () => async() ); \n  }\n\n  /** Selects the text between start and end when specified. \n   * Sets the cursor position otherwise */\n  public select(start: number, end?: number): this {\n\n    this.start = Math.max(start, 0);\n    this.end = Math.min(end || this.start, this.value.length);\n    return this.sort().apply();\n  }\n\n  /** Insert a new text at the current cursor position */\n  public insert(key: string): this {\n    // Skips empty insertions when unfruitful\n    if(!key && this.collapsed) { return this; }\n    // Stores the current values in history\n    return this.query().store().ins(key);\n  }\n\n  /** Deletes the current selection (Del-like) */\n  private del(): this {\n    // Stores the current values in history\n    this.query().store();\n    // Whenevevr collapsed...\n    if(this.collapsed){\n      // Skips when at the end of the text\n      if(this.end === this.value.length) { return; }\n      // Moves the end side of the selection ahead otherwise\n      this.end = this.next(this.end);\n    } \n    // Removes the selected text\n    return this.ins('');\n  }\n\n  /** Deletes the previous character (Backspace-like) */\n  public backspace(): this {\n    // Stores the current values in history\n    this.query().store();\n    // Whenevevr collapsed...\n    if(this.collapsed) {\n      // Skips when at the start of the text\n      if(this.start <= 0) { return; } \n      // Moves the start side of the selection back otherwise\n      this.start = this.prev(this.start);\n    }\n    // Deletes the selected block \n    return this.ins('');\n  }\n\n  /** Internal insertion/deletion helper */\n  private ins(key: string): this {\n    // Computes the new text value\n    const text = this.value.slice(0, this.start) + key + this.value.slice(this.end);\n    // Computes the new cursor location\n    const caret = this.start + key.length;\n    // Updates the content\n    return this.update(text, caret, caret);\n  }\n\n  /** Updates the value of the text and selection  */\n  private update(value: string, start: number, end: number): this {\n    // Restores the selection\n    this.start = start; this.end = end;\n    // Restores the content\n    this.compile(this._value = value);\n    // Applies the selection back when rendering is done\n    this.focused && this.whenDone( () => this.apply() );\n    // Emits the ne value\n    this.valueChange.emit(this.value);\n    // Returns this for chaining purposes\n    return this;\n  }\n\n  /** Moves the given selection index ahead by one character */\n  private next(pos: number): number { \n    // Moving ahead requires to jump one or more character depending on the letngh of the emoji, if any.\n    // So, search for a match with an emoij, first\n    const match = this.utils.matchEmojiCodes(this.value.slice(pos));\n    // Updates the position accordingly\n    return pos + ((match && match.index === 0) ? match[0].length : 1); \n  }\n\n  /** Moves the given selection index back by one character */\n  private prev(pos: number): number {\n    // Moving the cursor backwards is performed by moving forward from index 0 up until one step before the starting position.\n    // This accounts for the variable length of emoji(s) that can't be successfully matched backwards\n    let offset = 0; let next = 0;\n    while((next = this.next(next)) < pos) {\n      offset = next;\n    }\n    return offset;\n  }\n\n  /** Sorts the selection edges */ \n  private sort(): this {\n    \n    if(this.start <= this.end) { return this; }\n\n    const tmp = this.start; \n    this.start = this.end; \n    this.end = tmp;\n\n    return this;\n  }\n\n  /** Queries the current selection */\n  private query(): this {\n\n    try {\n       // Gets the current document selection first\n      const sel = this.selection;\n      // Computes the start offset from the anchor node\n      this.start = this.offset(sel.anchorNode, sel.anchorOffset);\n      // Computes the end offset from the focus node\n      this.end = sel.isCollapsed ? this.start : this.offset(sel.focusNode, sel.focusOffset);\n    }\n    catch(e) { this.start = this.end = 0; /*console.error(e);*/ }\n    // Sorts the edges and returns this for chaining purposes\n    return this.sort();\n  }\n\n  /** Applies the current selection back to the dom */\n  private apply(): this {\n\n    try {\n      // Gets the current document selection first\n      const sel = this.selection;\n      // Computes the dom node/offset selection pair for the start offset only\n      const [node, offset] = this.range(this.start);\n      // Applies the selection as a collapsed cursor\n      sel.collapse(node, offset);\n      // Check for the seleciton to be applied correctly...\n      if(sel.anchorNode !== node || sel.anchorOffset !== offset) { \n        // ...otherwise schedule a second attempt during the next animation frame update to cope with\n        // browsers (Safari) requiring the dome to be actually rendered for the selection to work\n        animationFrameScheduler.schedule( () => this.apply() ); \n      }\n    }\n    catch(e) { /*console.error(e);*/ }\n    // Returns this for chaining purposes\n    return this;\n  }\n\n  /** Forces the cursor position to fall right before or after the emoji image the user clicked onto */\n  public cursorAt(segment: emSegment, at: 'left'|'right') {\n\n    // Updates the current cursor position based on the emoji image the user clicked onto\n    this.start = this.end = this.abs(segment, at === 'right' ? segment.content.length : 0);\n    this.selection.collapse(...this.range(this.start));\n  }\n\n  /** Selection helper function: Computes the absolute offset from the given segment and relative offset */\n  private abs(segment: emSegment, offset: number = 0): number {\n    // Skips invalid segments\n    if(!segment) { return 0; }\n    // Loops on all the segments\n    for(let seg of this.segments) {\n      // Stops when the requested segment matches\n      if(segment === seg) { break; }\n      // Accumulates the offset by the segment's content length\n      offset += (seg.content || '').length;\n    }\n    // Returns the accumulated offset\n    return offset;\n  }\n\n  /** Computes the absolute text offset from the Node/offset dom selection pair */  \n  private offset(node: Node, offset: number): number {\n    // Short-circuits for invalid nodes\n    if(!node) { return this.value?.length || 0; }\n\n    // Case #1: The given node is a text node, meaning the dom selection is expressed as the text-node and the relative offset whithin such text. We keep the pair unchanged and move forward.\n    if(node.nodeType !== Node.TEXT_NODE) {\n      // Cases #2: The given node isn't a text node (likely is the host container element), meaning the dom selection is expressed as the containing node while the offseet is the index of the selected element.\n\n      // Ensures the given node has chilldren\n      const count = node.childNodes.length;\n      if(!count) { return 0; }\n      // Gets the selected child node (saturating to the last child) and resets the offset for the furtner calculations\n      node = node.childNodes.item(Math.min(offset, count-1));\n      offset = 0;\n    }\n\n    // Loops on the nodes composing the rendered output\n    let child = this.element.firstChild; let text = ''; \n    while(child) {\n      // When we match the requested node, we are done. The offset is calculated as the accumulated text length.\n      if(child == node) { return text.length + offset; } \n      // Appends the text content depending on the node type\n      text += this.nodeText(child);\n      // Skips to the next node\n      child = child.nextSibling;\n    }\n\n    return this.value?.length || 0;\n  }\n\n  /** Computes a Node/offset dom selection pair from an absolute offset */\n  private range(offset: number): [ Node, number ] {\n    // Starts with the first child node of the input's element\n    let node = this.element.firstChild;\n    // Seeks for the relevan node matching the index\n    let count = 0; \n    while(node) {\n      // Gets the node text content, if any \n      const text = this.nodeText(node);\n      // When the offset fits within the node we are done\n      if(offset <= text.length) { \n\n         // Case #1: When the matching node is a text node...\n        if(node.nodeType === Node.TEXT_NODE) {\n          // Returns the text node kind of selection with the content based offset\n          return [ node, offset ];\n        }\n\n        // Case #2: We must be at the IMG, so, return the element offset instead\n        return [ this.element, count + 1 ];\n      }\n      // Decreses the absolute offset\n      offset -= text.length;\n      // Counts the number of child nodes otherwise (including comments)\n      count++;\n      // Goes to the next sibling\n      node = node.nextSibling;\n    }\n\n    // Case #3: No matches found, return a zero based offset\n    return [ this.element, 0 ]\n  }\n\n  /** Returns the text associated with the given node */\n  private nodeText(node: Node): string {\n          \n    switch(node.nodeType) {\n\n      // The value of the tetxt node\n      case Node.TEXT_NODE:\n      return node.nodeValue;\n      break;\n\n      // The alt of an image element\n      case Node.ELEMENT_NODE:\n      switch((node as Element).tagName) {\n\n        case 'IMG':\n        return (node as HTMLImageElement).alt || '';\n        break;\n      }\n    }\n    return '';\n  }\n\n  /********** HISTORY UNDO/REDO ***********/\n\n  private store$ = new Subject<{ value: string, selection: [number, number] }>();\n  private history: { value: string, selection: [number, number] }[];\n  private timeIndex: number;\n  private sub$: Subscription;\n\n  /** Clears the history buffer */\n  private clearHistory(): this {\n    // Unsubscribe the previous subscription, if any\n    if(!!this.sub$) { this.sub$.unsubscribe(); }\n    // Initializes the history buffer\n    this.timeIndex = 0;\n    this.history = [];\n    return this;\n  }\n\n  /** Initilizes the history buffer */\n  private enableHistory(debounce: number = 1000, limit: number = 128): this {\n    // Clears the history buffer\n    this.clearHistory();\n    // Builts up the stream optimizing the amout of snapshot saved in the history \n    this.sub$ = this.store$.pipe( \n      // Append a time interval between storing emissions\n      timeInterval(), \n      // Filters requests coming too fast (within 'debounce time')\n      filter( payload => this.history.length === 0 || payload.interval > debounce), \n      // Gets a snapshot of the value with updated selection\n      map( payload => payload.value ),\n    // Subscribes the history save handler\n    ).subscribe( snapshot => {\n      // Wipes the further future undoed snapshots since they are now \n      if(this.timeIndex > 0) {\n        // Save the last snapshot wiping the further future undoed once\n        this.history.splice(0, this.timeIndex + 1, snapshot);\n        // Resets the time index\n        this.timeIndex = 0;\n      }\n      // Saves the last snapshot in the history\n      else { this.history.unshift(snapshot); }\n      // Removes the oldest snapshot when exceeeding the history limit\n      if(this.history.length > limit) { this.history.pop(); }\n    });\n\n    return this;\n  }\n\n  /** Stores a snapshot in the undo/redo history buffer \n   * @param force (option) when true forces the storage unconditionally.\n   * Storage will be performed conditionally to the time elapsed since \n   * the last modification otherwise.\n  */\n  private store(force?: boolean): this { \n\n    if(!!force) {\n      // Pushes a snapshot into the history buffer unconditionally\n      this.history.unshift({ value: this.value, selection: [this.start, this.end] }); \n      return this; \n    }\n    // Pushes the document for conditional history save\n    this.store$.next({ value: this.value, selection: [this.start, this.end] });\n    return this; \n  }\n \n  /** Returns true whenever the last modifications can be undone */\n  private get undoable(): boolean { return this.history.length > 0 && this.timeIndex < this.history.length - (!!this.timeIndex ? 1 : 0); }\n\n  /** Undoes the latest changes. It requires enableHistory() to be called */\n  private undo(): this {\n    // Stops undoing when history is finished\n    if(!this.undoable) { return this; }\n    // Saves the present moment to be restored eventually\n    if(this.timeIndex === 0) { this.store(true); }\n    // Gets the latest snapshot from the history\n    const snapshot = this.history[++this.timeIndex];\n    // Reloads the snapshot's content restoring the selection too\n    return this.update(snapshot.value, ...snapshot.selection);\n  }\n\n  /** Returns true whenever the last undone modifications can be redone */\n  private get redoable(): boolean { return this.history.length > 0 && this.timeIndex > 0; }\n\n  /** Redoes the last undone modifications. It requires enableHistory() to be called */\n  private redo(): this {\n    // Stops redoing when back to the present\n    if(!this.redoable) { return this; }\n    // Gets the previous snapshot from the history\n    const snapshot = this.history[--this.timeIndex];\n    // Removes the newest snapshot when back to the present\n    if(this.timeIndex === 0) { this.history.shift(); }\n    // Reloads the snapshot's content restoring the selection too\n    return this.update(snapshot.value, ...snapshot.selection);\n  }\n}\n","<!-- Renders the compiled segments -->\n<ng-container *ngFor=\"let segment of segments; trackBy: trackByFn\">\n  \n  <ng-container [ngSwitch]=\"segment.type\">\n\n    <!-- Renders the emoji as an image -->\n    <img *ngSwitchCase=\"'emoji'\" draggable=\"false\" [wm-emoji]=\"segment.content\" (hit)=\"cursorAt(segment, $event)\"/>\n\n    <!-- Renders the text node -->\n    <ng-container *ngSwitchDefault>{{ segment.content || '\\n' }}</ng-container>\n\n  </ng-container>\n\n</ng-container>","export * from './emoji-material.directive';\nexport * from './emoji-material.module';","export * from './textarea-newline.directive';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmojiImageModule } from '@wizdm/emoji/image';\nimport { EmojiInput } from './emoji-input.component';\nimport { EmojiControl } from './emoji-control.directive';\n\n@NgModule({\n  imports: [ CommonModule, EmojiImageModule ],\n  declarations: [ EmojiInput, EmojiControl ],\n  exports: [ EmojiInput, EmojiControl ]\n})\nexport class EmojiInputModule { }","export * from './emoji-control.directive';\nexport * from './emoji-input.component';\nexport * from './emoji-input.module';","import { Directive, forwardRef, Optional, Self } from '@angular/core';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { Observable, merge, fromEvent } from 'rxjs';\nimport { EmojiInput } from '@wizdm/emoji/input';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: 'wm-emoji-input[matEmoji]',\n  exportAs: 'EmojiMaterial',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: forwardRef(() => EmojiMaterial) }\n  ],\n  // We take advantage from mat-input-element styling provided by the mat-form-field contaienr\n  host: { \"class\": \"mat-input-element\" }\n})\nexport class EmojiMaterial implements MatFormFieldControl<any> {\n\n  /** Stream that emits whenever the state of the control changes such that the parent `MatFormField` needs to run change detection. */\n  readonly stateChanges: Observable<void>;\n\n  /** Gets the NgControl for this control or null. */\n  constructor(@Optional() private formField: MatFormField, @Optional() @Self() readonly ngControl: NgControl, private input: EmojiInput) {\n\n    if(!formField) {\n      throw new Error(\"matEmoji directive is ment to be used within a mat-form-field component!\");\n    }\n\n    this.stateChanges = merge<void>(\n\n      fromEvent(this.input.element, 'blur'),\n      this.input.valueChange\n    );    \n  }\n\n  /** The value of the control. */\n  get value(): any | null { return this.input.value; };\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  get placeholder(): string { return this.input.placeholder; };\n\n  /** Whether the control is focused. */\n  get focused(): boolean { return this.input.focused; }\n\n  /** Whether the control is empty. */\n  get empty(): boolean { return !this.input.value; }\n\n  /** Whether the control is disabled. */\n  get disabled(): boolean { \n\n    if(this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }    \n    return this.input.disabled; \n  }\n\n  /** Whether the control is required. */\n  get required(): boolean { return this.input.required; }\n\n  /** Whether the `MatFormField` label should try to float. */\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  /** Whether the control is in an error state. */\n  get errorState(): boolean { return !!this.ngControl && !!this.ngControl.errors; }\n\n  /** Sets the list of element IDs that currently describe this control. */\n  setDescribedByIds(ids: string[]): void { }\n\n  /** Handles a click on the control's container. */\n  onContainerClick(event: MouseEvent): void {\n    this.input.focus();\n  }\n}","import { Directive, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: 'textarea[newline]'\n})\nexport class TextareaNewline {\n\n  /** Selects the newline mode. \n   * - None: enter does nothig. \n   * - Always: enter always inserts a new line. \n   * - Shift: enter inserts newline in conjunction with the shift key only */\n  @Input() newline: 'none'|'always'|'shift' = 'always';\n\n  /** Intercepts the keydown event to customize the textarea behavior */\n  @HostListener('keydown', ['$event']) keyDown(ev: KeyboardEvent) {\n\n    // Prevents the default behavior according to the newline input value\n    switch(ev.code === 'Enter' ? this.newline : 'always') {\n\n      case 'none':\n      return false;\n      \n      case 'shift':\n      return ev.shiftKey;\n    }\n\n    return true;\n  }\n\n}\n","export * from './lib/emoji-keyboard.component';\nexport * from './lib/emoji-keyboard.module';\nexport * from './lib/emoji-keys';","import { Directive, ElementRef, Inject, Optional, Self, Output, EventEmitter, HostListener } from '@angular/core';\nimport { EmojiInput } from '@wizdm/emoji/input';\nimport { DOCUMENT } from '@angular/common'; \n\n\n/** Typing In Adapter for texarea and EmojiInput */\n@Directive({\n  selector: 'textarea[typein], wm-emoji-input[typein]'\n})\nexport class TypeinAdapter {\n\n  constructor(@Inject(DOCUMENT) private document: Document, private elref: ElementRef, @Optional() @Self() private emoji: EmojiInput) {}\n\n  /** The host element */\n  private get element(): HTMLElement { return this.elref.nativeElement; }\n\n  /** The host element as a textarea */\n  private get textarea(): HTMLTextAreaElement { \n    // Assert the element is a texarea\n    if(this.element.tagName !== 'TEXTAREA') { throw new Error('This element expected to be a textarea!'); }\n    // Return the element as a textarea\n    return this.element as HTMLTextAreaElement;\n  }\n\n  /** True whenever the element has focus */\n  private get hasFocus(): boolean { return this.element === this.document.activeElement; }\n\n  /** Returns the input value */\n  private get value(): string {\n    return (this.emoji || this.textarea).value;\n  }\n\n  private ensureFocus() {\n    // Do nothing whenever the elment already has focus\n    if(this.hasFocus) { return; }\n    // Focuses the element\n    this.element.focus(); \n    // Moves the selection at the end of the current text\n    if(this.emoji) { this.emoji.select(this.value.length); }\n    else { this.textarea.selectionStart = this.textarea.selectionEnd = this.value.length; }\n  }\n\n  // Hooks on the input event (textarea only)\n  @HostListener('input', ['event$']) onInput(ev: InputEvent) {\n    // Redirects the textarea oninput event to the valueChange\n    this.valueChange.emit(this.textarea.value); \n  }\n\n  /** Emits for valua changes */\n  @Output() valueChange = new EventEmitter<string>();\n\n  /** Types the given text in the textarea/emoji-input at the current cursor position */\n  public typein(key: string) {\n    // Ensure the input has focus\n    this.ensureFocus();\n    // Redirects the input to the EmojiInput.insert()\n    if(this.emoji) { this.emoji.insert(key); }\n    else {\n      // Insert the given text into the textarea\n      this.textarea.setRangeText(key, this.textarea.selectionStart, this.textarea.selectionEnd, 'end');\n      // Force the new value emission since there's no input event triggering\n      this.valueChange.emit(this.textarea.value);\n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { EmojiKeyboardComponent } from './emoji-keyboard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDividerModule\n  ],\n  declarations: [ EmojiKeyboardComponent ],\n  exports: [ EmojiKeyboardComponent ]\n})\nexport class EmojiKeyboardModule { }","import { NgModule } from '@angular/core';\nimport { EmojiMaterial } from './emoji-material.directive';\n\n@NgModule({\n  declarations: [ EmojiMaterial ],\n  exports: [ EmojiMaterial ]\n})\nexport class EmojiMaterialModule { }","import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Directive, OnDestroy, forwardRef } from '@angular/core';\nimport { EmojiInput } from '../input/emoji-input.component';\nimport { Observable, Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Bridges the EmojiInput with the Angular's form API implementing a ControlValueAccessor\n */\n@Directive({\n  selector: 'wm-emoji-input[ngModel], wm-emoji-input[formControl], wm-emoji-input[formControlName]',\n  exportAs: 'EmojiControl',\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => EmojiControl), multi: true }\n  ]\n})\nexport class EmojiControl implements OnDestroy, ControlValueAccessor {\n\n  private change$: Observable<string>;\n  private blur$: Observable<void>;\n  private dispose$ = new Subject();\n\n  constructor(readonly input: EmojiInput) { \n    // Creates an observable from the input's element blur event for further use \n    this.blur$ = fromEvent<void>(input.element, 'blur').pipe( takeUntil(this.dispose$) );\n    // Creates an observable from the input valueChange event for further use \n    this.change$ = input.valueChange.pipe( takeUntil(this.dispose$) );\n  }\n\n  /** Called by the forms API to write to the view when programmatic changes from model to view are requested */\n  writeValue(value: any): void {\n\n    //if(typeof value === 'string') {\n    this.input.value = value;\n    //}\n  }  \n\n  /** Registers a callback function that is called when the control's value changes in the UI */\n  registerOnChange(fn: (_:any) => void): void {\n\n    this.change$.subscribe( value => fn(value) );\n  }\n\n  /** Registers a callback function is called by the forms API on initialization to update the form model on blur. */\n  registerOnTouched(fn: () => void): void {\n\n    this.blur$.subscribe( () => fn() );\n  }\n\n  /** \n   * Function that is called by the forms API when the control status changes to or from 'DISABLED'. \n   * Depending on the status, it enables or disables the appropriate DOM element. \n   */\n  setDisabledState(disabled: boolean): void {\n\n    this.input.disabled = disabled;\n  }\n\n  // Disposes of the observables on destroy\n  ngOnDestroy() {\n    this.dispose$.next();\n    this.dispose$.complete();\n  }\n}","import { NgModule } from '@angular/core';\nimport { TextareaNewline } from './textarea-newline';\nimport { TypeinAdapter } from './typein-adapter';\n\n@NgModule({\n  imports: [ ],\n  declarations: [ TextareaNewline, TypeinAdapter ],\n  exports: [ TextareaNewline, TypeinAdapter ]\n})\nexport class TextareaModule { }\n","import { InjectionToken } from '@angular/core';\n\nexport type EmojiGroups = 'recently_used'|'smileys_and_people'|'animals_and_nature'|'food_and_drink'|'travel_and_places'|'activities'|'objects'|'symbols'|'flags';\n\nexport interface EmojiGroup {\n\n  id: EmojiGroups;\n  name: string;\n  icon: string;\n  keys: string[];\n\n};\n\nexport const EMOJI_KEYS = new InjectionToken<EmojiGroup[]>('wizdm.emoji.keys', {\n  providedIn: 'root',\n  factory: () => [\n  {\n    id: \"smileys_and_people\",\n    name: \"Smileys & People\",\n    icon: \"sentiment_satisfied_alt\",\n    keys: [\"😀\",\"😃\",\"😄\",\"😁\",\"😆\",\"😅\",\"🤣\",\"😂\",\"🙂\",\"🙃\",\"😉\",\"😊\",\"😇\",\"🥰\",\"😍\",\"🤩\",\"😘\",\"😗\",\"😚\",\"😙\",\"😋\",\"😛\",\"😜\",\"🤪\",\"😝\",\"🤑\",\"🤗\",\"🤭\",\"🤫\",\"🤔\",\"🤐\",\"🤨\",\"😐\",\"😑\",\"😶\",\"😏\",\"😒\",\"🙄\",\"😬\",\"🤥\",\"😌\",\"😔\",\"😪\",\"🤤\",\"😴\",\"😷\",\"🤒\",\"🤕\",\"🤢\",\"🤮\",\"🤧\",\"🥵\",\"🥶\",\"🥴\",\"😵\",\"🤯\",\"🤠\",\"🥳\",\"😎\",\"🤓\",\"🧐\",\"😕\",\"😟\",\"🙁\",\"😮\",\"😯\",\"😲\",\"😳\",\"🥺\",\"😦\",\"😧\",\"😨\",\"😰\",\"😥\",\"😢\",\"😭\",\"😱\",\"😖\",\"😣\",\"😞\",\"😓\",\"😩\",\"😫\",\"🥱\",\"😤\",\"😡\",\"😠\",\"🤬\",\"😈\",\"👿\",\"💀\",\"☠️\",\"💩\",\"🤡\",\"👹\",\"👺\",\"👻\",\"👽\",\"👾\",\"🤖\",\"😺\",\"😸\",\"😹\",\"😻\",\"😼\",\"😽\",\"🙀\",\"😿\",\"😾\",\"🙈\",\"🙉\",\"🙊\",\"💋\",\"💌\",\"💘\",\"💝\",\"💖\",\"💗\",\"💓\",\"💞\",\"💕\",\"💟\",\"❣️\",\"💔\",\"❤️\",\"🧡\",\"💛\",\"💚\",\"💙\",\"💜\",\"🤎\",\"🖤\",\"🤍\",\"💯\",\"💢\",\"💥\",\"💫\",\"💦\",\"💨\",\"🕳️\",\"💣\",\"💬\",\"👁️‍🗨️\",\"🗨️\",\"🗯️\",\"💭\",\"💤\",\"👋\",\"🤚\",\"🖐️\",\"✋\",\"🖖\",\"👌\",\"🤏\",\"✌️\",\"🤞\",\"🤟\",\"🤘\",\"🤙\",\"👈\",\"👉\",\"👆\",\"🖕\",\"👇\",\"☝️\",\"👍\",\"👎\",\"✊\",\"👊\",\"🤛\",\"🤜\",\"👏\",\"🙌\",\"👐\",\"🤲\",\"🤝\",\"🙏\",\"✍️\",\"💅\",\"🤳\",\"💪\",\"🦾\",\"🦿\",\"🦵\",\"🦶\",\"👂\",\"🦻\",\"👃\",\"🧠\",\"🦷\",\"🦴\",\"👀\",\"👁️\",\"👅\",\"👄\",\"👶\",\"🧒\",\"👦\",\"👧\",\"🧑\",\"👱\",\"👨\",\"🧔\",\"👨‍🦰\",\"👨‍🦱\",\"👨‍🦳\",\"👨‍🦲\",\"👩\",\"👩‍🦰\",\"🧑‍🦰\",\"👩‍🦱\",\"🧑‍🦱\",\"👩‍🦳\",\"🧑‍🦳\",\"👩‍🦲\",\"🧑‍🦲\",\"👱‍♀️\",\"👱‍♂️\",\"🧓\",\"👴\",\"👵\",\"🙍\",\"🙍‍♂️\",\"🙍‍♀️\",\"🙎\",\"🙎‍♂️\",\"🙎‍♀️\",\"🙅\",\"🙅‍♂️\",\"🙅‍♀️\",\"🙆\",\"🙆‍♂️\",\"🙆‍♀️\",\"💁\",\"💁‍♂️\",\"💁‍♀️\",\"🙋\",\"🙋‍♂️\",\"🙋‍♀️\",\"🧏\",\"🧏‍♂️\",\"🧏‍♀️\",\"🙇\",\"🙇‍♂️\",\"🙇‍♀️\",\"🤦\",\"🤦‍♂️\",\"🤦‍♀️\",\"🤷\",\"🤷‍♂️\",\"🤷‍♀️\",\"🧑‍⚕️\",\"👨‍⚕️\",\"👩‍⚕️\",\"🧑‍🎓\",\"👨‍🎓\",\"👩‍🎓\",\"🧑‍🏫\",\"👨‍🏫\",\"👩‍🏫\",\"🧑‍⚖️\",\"👨‍⚖️\",\"👩‍⚖️\",\"🧑‍🌾\",\"👨‍🌾\",\"👩‍🌾\",\"🧑‍🍳\",\"👨‍🍳\",\"👩‍🍳\",\"🧑‍🔧\",\"👨‍🔧\",\"👩‍🔧\",\"🧑‍🏭\",\"👨‍🏭\",\"👩‍🏭\",\"🧑‍💼\",\"👨‍💼\",\"👩‍💼\",\"🧑‍🔬\",\"👨‍🔬\",\"👩‍🔬\",\"🧑‍💻\",\"👨‍💻\",\"👩‍💻\",\"🧑‍🎤\",\"👨‍🎤\",\"👩‍🎤\",\"🧑‍🎨\",\"👨‍🎨\",\"👩‍🎨\",\"🧑‍✈️\",\"👨‍✈️\",\"👩‍✈️\",\"🧑‍🚀\",\"👨‍🚀\",\"👩‍🚀\",\"🧑‍🚒\",\"👨‍🚒\",\"👩‍🚒\",\"👮\",\"👮‍♂️\",\"👮‍♀️\",\"🕵️\",\"🕵️‍♂️\",\"🕵️‍♀️\",\"💂\",\"💂‍♂️\",\"💂‍♀️\",\"👷\",\"👷‍♂️\",\"👷‍♀️\",\"🤴\",\"👸\",\"👳\",\"👳‍♂️\",\"👳‍♀️\",\"👲\",\"🧕\",\"🤵\",\"👰\",\"🤰\",\"🤱\",\"👼\",\"🎅\",\"🤶\",\"🦸\",\"🦸‍♂️\",\"🦸‍♀️\",\"🦹\",\"🦹‍♂️\",\"🦹‍♀️\",\"🧙\",\"🧙‍♂️\",\"🧙‍♀️\",\"🧚\",\"🧚‍♂️\",\"🧚‍♀️\",\"🧛\",\"🧛‍♂️\",\"🧛‍♀️\",\"🧜\",\"🧜‍♂️\",\"🧜‍♀️\",\"🧝\",\"🧝‍♂️\",\"🧝‍♀️\",\"🧞\",\"🧞‍♂️\",\"🧞‍♀️\",\"🧟\",\"🧟‍♂️\",\"🧟‍♀️\",\"💆\",\"💆‍♂️\",\"💆‍♀️\",\"💇\",\"💇‍♂️\",\"💇‍♀️\",\"🚶\",\"🚶‍♂️\",\"🚶‍♀️\",\"🧍\",\"🧍‍♂️\",\"🧍‍♀️\",\"🧎\",\"🧎‍♂️\",\"🧎‍♀️\",\"🧑‍🦯\",\"👨‍🦯\",\"👩‍🦯\",\"🧑‍🦼\",\"👨‍🦼\",\"👩‍🦼\",\"🧑‍🦽\",\"👨‍🦽\",\"👩‍🦽\",\"🏃\",\"🏃‍♂️\",\"🏃‍♀️\",\"💃\",\"🕺\",\"🕴️\",\"👯\",\"👯‍♂️\",\"👯‍♀️\",\"🧖\",\"🧖‍♂️\",\"🧖‍♀️\",\"🧗\",\"🧗‍♂️\",\"🧗‍♀️\",\"🤺\",\"🏇\",\"⛷️\",\"🏂\",\"🏌️\",\"🏌️‍♂️\",\"🏌️‍♀️\",\"🏄\",\"🏄‍♂️\",\"🏄‍♀️\",\"🚣\",\"🚣‍♂️\",\"🚣‍♀️\",\"🏊\",\"🏊‍♂️\",\"🏊‍♀️\",\"⛹️\",\"⛹️‍♂️\",\"⛹️‍♀️\",\"🏋️\",\"🏋️‍♂️\",\"🏋️‍♀️\",\"🚴\",\"🚴‍♂️\",\"🚴‍♀️\",\"🚵\",\"🚵‍♂️\",\"🚵‍♀️\",\"🤸\",\"🤸‍♂️\",\"🤸‍♀️\",\"🤼\",\"🤼‍♂️\",\"🤼‍♀️\",\"🤽\",\"🤽‍♂️\",\"🤽‍♀️\",\"🤾\",\"🤾‍♂️\",\"🤾‍♀️\",\"🤹\",\"🤹‍♂️\",\"🤹‍♀️\",\"🧘\",\"🧘‍♂️\",\"🧘‍♀️\",\"🛀\",\"🛌\",\"🧑‍🤝‍🧑\",\"👭\",\"👫\",\"👬\",\"💏\",\"👩‍❤️‍💋‍👨\",\"👨‍❤️‍💋‍👨\",\"👩‍❤️‍💋‍👩\",\"💑\",\"👩‍❤️‍👨\",\"👨‍❤️‍👨\",\"👩‍❤️‍👩\",\"👪\",\"👨‍👩‍👦\",\"👨‍👩‍👧\",\"👨‍👩‍👧‍👦\",\"👨‍👩‍👦‍👦\",\"👨‍👩‍👧‍👧\",\"👨‍👨‍👦\",\"👨‍👨‍👧\",\"👨‍👨‍👧‍👦\",\"👨‍👨‍👦‍👦\",\"👨‍👨‍👧‍👧\",\"👩‍👩‍👦\",\"👩‍👩‍👧\",\"👩‍👩‍👧‍👦\",\"👩‍👩‍👦‍👦\",\"👩‍👩‍👧‍👧\",\"👨‍👦\",\"👨‍👦‍👦\",\"👨‍👧\",\"👨‍👧‍👦\",\"👨‍👧‍👧\",\"👩‍👦\",\"👩‍👦‍👦\",\"👩‍👧\",\"👩‍👧‍👦\",\"👩‍👧‍👧\",\"🗣️\",\"👤\",\"👥\",\"👣\"]\n  },\n  {\n    id: \"animals_and_nature\",\n    name: \"Animals & Nature\",\n    icon: \"pets\",\n    keys: [\"🐵\",\"🐒\",\"🦍\",\"🦧\",\"🐶\",\"🐕\",\"🦮\",\"🐕‍🦺\",\"🐩\",\"🐺\",\"🦊\",\"🦝\",\"🐱\",\"🐈\",\"🦁\",\"🐯\",\"🐅\",\"🐆\",\"🐴\",\"🐎\",\"🦄\",\"🦓\",\"🦌\",\"🐮\",\"🐂\",\"🐃\",\"🐄\",\"🐷\",\"🐖\",\"🐗\",\"🐽\",\"🐏\",\"🐑\",\"🐐\",\"🐪\",\"🐫\",\"🦙\",\"🦒\",\"🐘\",\"🦏\",\"🦛\",\"🐭\",\"🐁\",\"🐀\",\"🐹\",\"🐰\",\"🐇\",\"🐿️\",\"🦔\",\"🦇\",\"🐻\",\"🐨\",\"🐼\",\"🦥\",\"🦦\",\"🦨\",\"🦘\",\"🦡\",\"🐾\",\"🦃\",\"🐔\",\"🐓\",\"🐣\",\"🐤\",\"🐥\",\"🐦\",\"🐧\",\"🕊️\",\"🦅\",\"🦆\",\"🦢\",\"🦉\",\"🦩\",\"🦚\",\"🦜\",\"🐸\",\"🐊\",\"🐢\",\"🦎\",\"🐍\",\"🐲\",\"🐉\",\"🦕\",\"🦖\",\"🐳\",\"🐋\",\"🐬\",\"🐟\",\"🐠\",\"🐡\",\"🦈\",\"🐙\",\"🐚\",\"🐌\",\"🦋\",\"🐛\",\"🐜\",\"🐝\",\"🐞\",\"🦗\",\"🕷️\",\"🕸️\",\"🦂\",\"🦟\",\"🦠\",\"💐\",\"🌸\",\"💮\",\"🏵️\",\"🌹\",\"🥀\",\"🌺\",\"🌻\",\"🌼\",\"🌷\",\"🌱\",\"🌲\",\"🌳\",\"🌴\",\"🌵\",\"🌾\",\"🌿\",\"☘️\",\"🍀\",\"🍁\",\"🍂\",\"🍃\"]\n  },\n  {\n    id: \"food_and_drink\",\n    name: \"Food & Drink\",\n    icon: \"fastfood\",\n    keys: [\"🍇\",\"🍈\",\"🍉\",\"🍊\",\"🍋\",\"🍌\",\"🍍\",\"🥭\",\"🍎\",\"🍏\",\"🍐\",\"🍑\",\"🍒\",\"🍓\",\"🥝\",\"🍅\",\"🥥\",\"🥑\",\"🍆\",\"🥔\",\"🥕\",\"🌽\",\"🌶️\",\"🥒\",\"🥬\",\"🥦\",\"🧄\",\"🧅\",\"🍄\",\"🥜\",\"🌰\",\"🍞\",\"🥐\",\"🥖\",\"🥨\",\"🥯\",\"🥞\",\"🧇\",\"🧀\",\"🍖\",\"🍗\",\"🥩\",\"🥓\",\"🍔\",\"🍟\",\"🍕\",\"🌭\",\"🥪\",\"🌮\",\"🌯\",\"🥙\",\"🧆\",\"🥚\",\"🍳\",\"🥘\",\"🍲\",\"🥣\",\"🥗\",\"🍿\",\"🧈\",\"🧂\",\"🥫\",\"🍱\",\"🍘\",\"🍙\",\"🍚\",\"🍛\",\"🍜\",\"🍝\",\"🍠\",\"🍢\",\"🍣\",\"🍤\",\"🍥\",\"🥮\",\"🍡\",\"🥟\",\"🥠\",\"🥡\",\"🦀\",\"🦞\",\"🦐\",\"🦑\",\"🦪\",\"🍦\",\"🍧\",\"🍨\",\"🍩\",\"🍪\",\"🎂\",\"🍰\",\"🧁\",\"🥧\",\"🍫\",\"🍬\",\"🍭\",\"🍮\",\"🍯\",\"🍼\",\"🥛\",\"☕\",\"🍵\",\"🍶\",\"🍾\",\"🍷\",\"🍸\",\"🍹\",\"🍺\",\"🍻\",\"🥂\",\"🥃\",\"🥤\",\"🧃\",\"🧉\",\"🧊\",\"🥢\",\"🍽️\",\"🍴\",\"🥄\",\"🔪\",\"🏺\"]\n  },\n  {\n    id: \"travel_and_places\",\n    name: \"Travel & Places\",\n    icon: \"beach_access\",\n    keys: [\"🌍\",\"🌎\",\"🌏\",\"🌐\",\"🗺️\",\"🗾\",\"🧭\",\"🏔️\",\"⛰️\",\"🌋\",\"🗻\",\"🏕️\",\"🏖️\",\"🏜️\",\"🏝️\",\"🏞️\",\"🏟️\",\"🏛️\",\"🏗️\",\"🧱\",\"🏘️\",\"🏚️\",\"🏠\",\"🏡\",\"🏢\",\"🏣\",\"🏤\",\"🏥\",\"🏦\",\"🏨\",\"🏩\",\"🏪\",\"🏫\",\"🏬\",\"🏭\",\"🏯\",\"🏰\",\"💒\",\"🗼\",\"🗽\",\"⛪\",\"🕌\",\"🛕\",\"🕍\",\"⛩️\",\"🕋\",\"⛲\",\"⛺\",\"🌁\",\"🌃\",\"🏙️\",\"🌄\",\"🌅\",\"🌆\",\"🌇\",\"🌉\",\"♨️\",\"🎠\",\"🎡\",\"🎢\",\"💈\",\"🎪\",\"🚂\",\"🚃\",\"🚄\",\"🚅\",\"🚆\",\"🚇\",\"🚈\",\"🚉\",\"🚊\",\"🚝\",\"🚞\",\"🚋\",\"🚌\",\"🚍\",\"🚎\",\"🚐\",\"🚑\",\"🚒\",\"🚓\",\"🚔\",\"🚕\",\"🚖\",\"🚗\",\"🚘\",\"🚙\",\"🚚\",\"🚛\",\"🚜\",\"🏎️\",\"🏍️\",\"🛵\",\"🦽\",\"🦼\",\"🛺\",\"🚲\",\"🛴\",\"🛹\",\"🚏\",\"🛣️\",\"🛤️\",\"🛢️\",\"⛽\",\"🚨\",\"🚥\",\"🚦\",\"🛑\",\"🚧\",\"⚓\",\"⛵\",\"🛶\",\"🚤\",\"🛳️\",\"⛴️\",\"🛥️\",\"🚢\",\"✈️\",\"🛩️\",\"🛫\",\"🛬\",\"🪂\",\"💺\",\"🚁\",\"🚟\",\"🚠\",\"🚡\",\"🛰️\",\"🚀\",\"🛸\",\"🛎️\",\"🧳\",\"⌛\",\"⏳\",\"⌚\",\"⏰\",\"⏱️\",\"⏲️\",\"🕰️\",\"🕛\",\"🕧\",\"🕐\",\"🕜\",\"🕑\",\"🕝\",\"🕒\",\"🕞\",\"🕓\",\"🕟\",\"🕔\",\"🕠\",\"🕕\",\"🕡\",\"🕖\",\"🕢\",\"🕗\",\"🕣\",\"🕘\",\"🕤\",\"🕙\",\"🕥\",\"🕚\",\"🕦\",\"🌑\",\"🌒\",\"🌓\",\"🌔\",\"🌕\",\"🌖\",\"🌗\",\"🌘\",\"🌙\",\"🌚\",\"🌛\",\"🌜\",\"🌡️\",\"☀️\",\"🌝\",\"🌞\",\"🪐\",\"⭐\",\"🌟\",\"🌠\",\"🌌\",\"☁️\",\"⛅\",\"⛈️\",\"🌤️\",\"🌥️\",\"🌦️\",\"🌧️\",\"🌨️\",\"🌩️\",\"🌪️\",\"🌫️\",\"🌬️\",\"🌀\",\"🌈\",\"🌂\",\"☂️\",\"☔\",\"⛱️\",\"⚡\",\"❄️\",\"☃️\",\"⛄\",\"☄️\",\"🔥\",\"💧\",\"🌊\"]\n  },\n  {\n    id: \"activities\",\n    name: \"Activities\",\n    icon: \"emoji_events\",\n    keys: [\"🎃\",\"🎄\",\"🎆\",\"🎇\",\"🧨\",\"✨\",\"🎈\",\"🎉\",\"🎊\",\"🎋\",\"🎍\",\"🎎\",\"🎏\",\"🎐\",\"🎑\",\"🧧\",\"🎀\",\"🎁\",\"🎗️\",\"🎟️\",\"🎫\",\"🎖️\",\"🏆\",\"🏅\",\"🥇\",\"🥈\",\"🥉\",\"⚽\",\"⚾\",\"🥎\",\"🏀\",\"🏐\",\"🏈\",\"🏉\",\"🎾\",\"🥏\",\"🎳\",\"🏏\",\"🏑\",\"🏒\",\"🥍\",\"🏓\",\"🏸\",\"🥊\",\"🥋\",\"🥅\",\"⛳\",\"⛸️\",\"🎣\",\"🤿\",\"🎽\",\"🎿\",\"🛷\",\"🥌\",\"🎯\",\"🪀\",\"🪁\",\"🎱\",\"🔮\",\"🧿\",\"🎮\",\"🕹️\",\"🎰\",\"🎲\",\"🧩\",\"🧸\",\"♠️\",\"♥️\",\"♦️\",\"♣️\",\"♟️\",\"🃏\",\"🀄\",\"🎴\",\"🎭\",\"🖼️\",\"🎨\",\"🧵\",\"🪡\",\"🧶\"]\n  },\n  {\n    id: \"objects\",\n    name: \"Objects\",\n    icon: \"emoji_objects\",\n    keys: [\"👓\",\"🕶️\",\"🥽\",\"🥼\",\"🦺\",\"👔\",\"👕\",\"👖\",\"🧣\",\"🧤\",\"🧥\",\"🧦\",\"👗\",\"👘\",\"🥻\",\"🩱\",\"🩲\",\"🩳\",\"👙\",\"👚\",\"👛\",\"👜\",\"👝\",\"🛍️\",\"🎒\",\"👞\",\"👟\",\"🥾\",\"🥿\",\"👠\",\"👡\",\"🩰\",\"👢\",\"👑\",\"👒\",\"🎩\",\"🎓\",\"🧢\",\"⛑️\",\"📿\",\"💄\",\"💍\",\"💎\",\"🔇\",\"🔈\",\"🔉\",\"🔊\",\"📢\",\"📣\",\"📯\",\"🔔\",\"🔕\",\"🎼\",\"🎵\",\"🎶\",\"🎙️\",\"🎚️\",\"🎛️\",\"🎤\",\"🎧\",\"📻\",\"🎷\",\"🎸\",\"🎹\",\"🎺\",\"🎻\",\"🪕\",\"🥁\",\"📱\",\"📲\",\"☎️\",\"📞\",\"📟\",\"📠\",\"🔋\",\"🔌\",\"💻\",\"🖥️\",\"🖨️\",\"⌨️\",\"🖱️\",\"🖲️\",\"💽\",\"💾\",\"💿\",\"📀\",\"🧮\",\"🎥\",\"🎞️\",\"📽️\",\"🎬\",\"📺\",\"📷\",\"📸\",\"📹\",\"📼\",\"🔍\",\"🔎\",\"🕯️\",\"💡\",\"🔦\",\"🏮\",\"🪔\",\"📔\",\"📕\",\"📖\",\"📗\",\"📘\",\"📙\",\"📚\",\"📓\",\"📒\",\"📃\",\"📜\",\"📄\",\"📰\",\"🗞️\",\"📑\",\"🔖\",\"🏷️\",\"💰\",\"💴\",\"💵\",\"💶\",\"💷\",\"💸\",\"💳\",\"🧾\",\"💹\",\"✉️\",\"📧\",\"📨\",\"📩\",\"📤\",\"📥\",\"📦\",\"📫\",\"📪\",\"📬\",\"📭\",\"📮\",\"🗳️\",\"✏️\",\"✒️\",\"🖋️\",\"🖊️\",\"🖌️\",\"🖍️\",\"📝\",\"💼\",\"📁\",\"📂\",\"🗂️\",\"📅\",\"📆\",\"🗒️\",\"🗓️\",\"📇\",\"📈\",\"📉\",\"📊\",\"📋\",\"📌\",\"📍\",\"📎\",\"🖇️\",\"📏\",\"📐\",\"✂️\",\"🗃️\",\"🗄️\",\"🗑️\",\"🔒\",\"🔓\",\"🔏\",\"🔐\",\"🔑\",\"🗝️\",\"🔨\",\"🪓\",\"⛏️\",\"⚒️\",\"🛠️\",\"🗡️\",\"⚔️\",\"🔫\",\"🏹\",\"🛡️\",\"🔧\",\"🔩\",\"⚙️\",\"🗜️\",\"⚖️\",\"🦯\",\"🔗\",\"⛓️\",\"🧰\",\"🧲\",\"⚗️\",\"🧪\",\"🧫\",\"🧬\",\"🔬\",\"🔭\",\"📡\",\"💉\",\"🩸\",\"💊\",\"🩹\",\"🩺\",\"🚪\",\"🛏️\",\"🛋️\",\"🪑\",\"🚽\",\"🚿\",\"🛁\",\"🪒\",\"🧴\",\"🧷\",\"🧹\",\"🧺\",\"🧻\",\"🧼\",\"🧽\",\"🧯\",\"🛒\",\"🚬\",\"⚰️\",\"⚱️\",\"🗿\"]\n  },\n  {\n    id: \"symbols\",\n    name: \"Symbols\",\n    icon: \"emoji_symbols\",\n    keys: [\"🏧\",\"🚮\",\"🚰\",\"♿\",\"🚹\",\"🚺\",\"🚻\",\"🚼\",\"🚾\",\"🛂\",\"🛃\",\"🛄\",\"🛅\",\"⚠️\",\"🚸\",\"⛔\",\"🚫\",\"🚳\",\"🚭\",\"🚯\",\"🚱\",\"🚷\",\"📵\",\"🔞\",\"☢️\",\"☣️\",\"⬆️\",\"↗️\",\"➡️\",\"↘️\",\"⬇️\",\"↙️\",\"⬅️\",\"↖️\",\"↕️\",\"↔️\",\"↩️\",\"↪️\",\"⤴️\",\"⤵️\",\"🔃\",\"🔄\",\"🔙\",\"🔚\",\"🔛\",\"🔜\",\"🔝\",\"🛐\",\"⚛️\",\"🕉️\",\"✡️\",\"☸️\",\"☯️\",\"✝️\",\"☦️\",\"☪️\",\"☮️\",\"🕎\",\"🔯\",\"♈\",\"♉\",\"♊\",\"♋\",\"♌\",\"♍\",\"♎\",\"♏\",\"♐\",\"♑\",\"♒\",\"♓\",\"⛎\",\"🔀\",\"🔁\",\"🔂\",\"▶️\",\"⏩\",\"⏭️\",\"⏯️\",\"◀️\",\"⏪\",\"⏮️\",\"🔼\",\"⏫\",\"🔽\",\"⏬\",\"⏸️\",\"⏹️\",\"⏺️\",\"⏏️\",\"🎦\",\"🔅\",\"🔆\",\"📶\",\"📳\",\"📴\",\"✖️\",\"➕\",\"➖\",\"➗\",\"♾️\",\"❓\",\"❔\",\"❕\",\"❗\",\"〰️\",\"💱\",\"💲\",\"⚕️\",\"♻️\",\"⚜️\",\"🔱\",\"📛\",\"🔰\",\"⭕\",\"✅\",\"☑️\",\"✔️\",\"❌\",\"❎\",\"➰\",\"➿\",\"〽️\",\"✳️\",\"✴️\",\"❇️\",\"#️⃣\",\"*️⃣\",\"0️⃣\",\"1️⃣\",\"2️⃣\",\"3️⃣\",\"4️⃣\",\"5️⃣\",\"6️⃣\",\"7️⃣\",\"8️⃣\",\"9️⃣\",\"🔟\",\"🔠\",\"🔡\",\"🔢\",\"🔣\",\"🔤\",\"🅰️\",\"🆎\",\"🅱️\",\"🆑\",\"🆒\",\"🆓\",\"ℹ️\",\"🆔\",\"Ⓜ️\",\"🆕\",\"🆖\",\"🅾️\",\"🆗\",\"🅿️\",\"🆘\",\"🆙\",\"🆚\",\"🈁\",\"🈂️\",\"🈷️\",\"🈶\",\"🈯\",\"🉐\",\"🈹\",\"🈚\",\"🈲\",\"🉑\",\"🈸\",\"🈴\",\"🈳\",\"㊗️\",\"㊙️\",\"🈺\",\"🈵\",\"🔴\",\"🟠\",\"🟡\",\"🟢\",\"🔵\",\"🟣\",\"🟤\",\"⚫\",\"⚪\",\"🟥\",\"🟧\",\"🟨\",\"🟩\",\"🟦\",\"🟪\",\"🟫\",\"⬛\",\"⬜\",\"◼️\",\"◻️\",\"◾\",\"◽\",\"▪️\",\"▫️\",\"🔶\",\"🔷\",\"🔸\",\"🔹\",\"🔺\",\"🔻\",\"💠\",\"🔘\",\"🔳\",\"🔲\"]\n  },\n  {\n    id: \"flags\",\n    name: \"Flags\",\n    icon: \"emoji_flags\",\n    keys: [\"🏁\",\"🚩\",\"🎌\",\"🏴\",\"🏳️\",\"🏳️‍🌈\",\"🏴‍☠️\",\"🇦🇨\",\"🇦🇩\",\"🇦🇪\",\"🇦🇫\",\"🇦🇬\",\"🇦🇮\",\"🇦🇱\",\"🇦🇲\",\"🇦🇴\",\"🇦🇶\",\"🇦🇷\",\"🇦🇸\",\"🇦🇹\",\"🇦🇺\",\"🇦🇼\",\"🇦🇽\",\"🇦🇿\",\"🇧🇦\",\"🇧🇧\",\"🇧🇩\",\"🇧🇪\",\"🇧🇫\",\"🇧🇬\",\"🇧🇭\",\"🇧🇮\",\"🇧🇯\",\"🇧🇱\",\"🇧🇲\",\"🇧🇳\",\"🇧🇴\",\"🇧🇶\",\"🇧🇷\",\"🇧🇸\",\"🇧🇹\",\"🇧🇻\",\"🇧🇼\",\"🇧🇾\",\"🇧🇿\",\"🇨🇦\",\"🇨🇨\",\"🇨🇩\",\"🇨🇫\",\"🇨🇬\",\"🇨🇭\",\"🇨🇮\",\"🇨🇰\",\"🇨🇱\",\"🇨🇲\",\"🇨🇳\",\"🇨🇴\",\"🇨🇵\",\"🇨🇷\",\"🇨🇺\",\"🇨🇻\",\"🇨🇼\",\"🇨🇽\",\"🇨🇾\",\"🇨🇿\",\"🇩🇪\",\"🇩🇬\",\"🇩🇯\",\"🇩🇰\",\"🇩🇲\",\"🇩🇴\",\"🇩🇿\",\"🇪🇦\",\"🇪🇨\",\"🇪🇪\",\"🇪🇬\",\"🇪🇭\",\"🇪🇷\",\"🇪🇸\",\"🇪🇹\",\"🇪🇺\",\"🇫🇮\",\"🇫🇯\",\"🇫🇰\",\"🇫🇲\",\"🇫🇴\",\"🇫🇷\",\"🇬🇦\",\"🇬🇧\",\"🇬🇩\",\"🇬🇪\",\"🇬🇫\",\"🇬🇬\",\"🇬🇭\",\"🇬🇮\",\"🇬🇱\",\"🇬🇲\",\"🇬🇳\",\"🇬🇵\",\"🇬🇶\",\"🇬🇷\",\"🇬🇸\",\"🇬🇹\",\"🇬🇺\",\"🇬🇼\",\"🇬🇾\",\"🇭🇰\",\"🇭🇲\",\"🇭🇳\",\"🇭🇷\",\"🇭🇹\",\"🇭🇺\",\"🇮🇨\",\"🇮🇩\",\"🇮🇪\",\"🇮🇱\",\"🇮🇲\",\"🇮🇳\",\"🇮🇴\",\"🇮🇶\",\"🇮🇷\",\"🇮🇸\",\"🇮🇹\",\"🇯🇪\",\"🇯🇲\",\"🇯🇴\",\"🇯🇵\",\"🇰🇪\",\"🇰🇬\",\"🇰🇭\",\"🇰🇮\",\"🇰🇲\",\"🇰🇳\",\"🇰🇵\",\"🇰🇷\",\"🇰🇼\",\"🇰🇾\",\"🇰🇿\",\"🇱🇦\",\"🇱🇧\",\"🇱🇨\",\"🇱🇮\",\"🇱🇰\",\"🇱🇷\",\"🇱🇸\",\"🇱🇹\",\"🇱🇺\",\"🇱🇻\",\"🇱🇾\",\"🇲🇦\",\"🇲🇨\",\"🇲🇩\",\"🇲🇪\",\"🇲🇫\",\"🇲🇬\",\"🇲🇭\",\"🇲🇰\",\"🇲🇱\",\"🇲🇲\",\"🇲🇳\",\"🇲🇴\",\"🇲🇵\",\"🇲🇶\",\"🇲🇷\",\"🇲🇸\",\"🇲🇹\",\"🇲🇺\",\"🇲🇻\",\"🇲🇼\",\"🇲🇽\",\"🇲🇾\",\"🇲🇿\",\"🇳🇦\",\"🇳🇨\",\"🇳🇪\",\"🇳🇫\",\"🇳🇬\",\"🇳🇮\",\"🇳🇱\",\"🇳🇴\",\"🇳🇵\",\"🇳🇷\",\"🇳🇺\",\"🇳🇿\",\"🇴🇲\",\"🇵🇦\",\"🇵🇪\",\"🇵🇫\",\"🇵🇬\",\"🇵🇭\",\"🇵🇰\",\"🇵🇱\",\"🇵🇲\",\"🇵🇳\",\"🇵🇷\",\"🇵🇸\",\"🇵🇹\",\"🇵🇼\",\"🇵🇾\",\"🇶🇦\",\"🇷🇪\",\"🇷🇴\",\"🇷🇸\",\"🇷🇺\",\"🇷🇼\",\"🇸🇦\",\"🇸🇧\",\"🇸🇨\",\"🇸🇩\",\"🇸🇪\",\"🇸🇬\",\"🇸🇭\",\"🇸🇮\",\"🇸🇯\",\"🇸🇰\",\"🇸🇱\",\"🇸🇲\",\"🇸🇳\",\"🇸🇴\",\"🇸🇷\",\"🇸🇸\",\"🇸🇹\",\"🇸🇻\",\"🇸🇽\",\"🇸🇾\",\"🇸🇿\",\"🇹🇦\",\"🇹🇨\",\"🇹🇩\",\"🇹🇫\",\"🇹🇬\",\"🇹🇭\",\"🇹🇯\",\"🇹🇰\",\"🇹🇱\",\"🇹🇲\",\"🇹🇳\",\"🇹🇴\",\"🇹🇷\",\"🇹🇹\",\"🇹🇻\",\"🇹🇼\",\"🇹🇿\",\"🇺🇦\",\"🇺🇬\",\"🇺🇲\",\"🇺🇳\",\"🇺🇸\",\"🇺🇾\",\"🇺🇿\",\"🇻🇦\",\"🇻🇨\",\"🇻🇪\",\"🇻🇬\",\"🇻🇮\",\"🇻🇳\",\"🇻🇺\",\"🇼🇫\",\"🇼🇸\",\"🇽🇰\",\"🇾🇪\",\"🇾🇹\",\"🇿🇦\",\"🇿🇲\",\"🇿🇼\",\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\",\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\",\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\"]\n  }\n]});\n"]}
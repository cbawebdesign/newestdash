{"version":3,"sources":["webpack:///wizdm/src/app/pages/explore/feed/post-card/post-card.animation.ts","webpack:///wizdm/src/app/pages/explore/feed/post/post.component.ts","webpack:///wizdm/src/app/pages/explore/feed/post/post.component.html","webpack:///wizdm/src/app/pages/explore/feed/post/post.module.ts","webpack:///wizdm/src/app/pages/explore/feed/feed.module.ts","webpack:///wizdm/src/app/pages/explore/feed/post-card/post-card.component.ts","webpack:///wizdm/src/app/pages/explore/feed/post-card/post-card.component.html","webpack:///wizdm/src/app/navigator/actionbar/index.ts","webpack:///wizdm/src/app/pages/explore/feed/post-card/post-card.module.ts","webpack:///wizdm/src/app/pages/explore/feed/feed.component.ts","webpack:///wizdm/src/app/pages/explore/feed/feed.component.html"],"names":["$timing","$animations","transform","PostComponent","db","auth","user","_favorite$","userId","value","authenticated","snapshot","data","unwrap","likes","counter","likers","collection","favorite$","initFavorite","user$","pipe","uid","me","isLikedBy","favorite","next","stream","ref","where","sentinelId","docs","length","event","document","set","update","photo","displayName","userName","split","slice","pop","toggleFavorite","PostModule","routes","path","component","content","children","loadChildren","then","m","canActivate","FeedModule","forChild","PostCardComponent","toggleLikes","PostCardModule","FeedComponent","utils","media","feed$","source","oldOnes","zone","newOnes","size","metadata","hasPendingWrites","concat","isActive","mobile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAMA,OAAO,GAAG,wCAAhB;AAEO,UAAIC,WAAW,GAAG,CAEvB,oEAAQ,MAAR,EAAgB,CACd,uEAAW,QAAX,EACE,oEAAQD,OAAR,EACE,sEAAU,CACR,kEAAM;AAAEE,iBAAS,EAAE;AAAb,OAAN,CADQ,EAER,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAFQ,EAGR,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAHQ,CAAV,CADF,CADF,CADc,CAAhB,CAFuB,CAAlB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBC;;UAOYC,a;;;;;AAkBX,+BAAYC,EAAZ,EAAyCC,IAAzC,EAAoEC,IAApE,EAAiG;AAAA;;AAAA;;AAC/F,oCAAMF,EAAN;AADuC,gBAAAC,IAAA,GAAAA,IAAA;AAA2B,gBAAAC,IAAA,GAAAA,IAAA;AAhB5D,gBAAAC,UAAA,GAAa,IAAI,oDAAJ,CAA6B,KAA7B,CAAb;AAgByF;AAEhG;AAXD;;;;;eACA,eAAM;AAAa,mBAAO,KAAKF,IAAL,CAAUG,MAAV,IAAoB,SAA3B;AAAuC;AAC1D;;;;eACA,eAAY;AAAe,mBAAO,KAAKD,UAAL,CAAgBE,KAAvB;AAA+B;AAG1D;;;;eACA,eAAiB;AAAc,mBAAO,KAAKC,aAAZ;AAA4B;;;eAM3D,aAAkBC,QAAlB,EAA6D;AAE3D;AACA,iBAAKC,IAAL,GAAY,KAAKC,MAAL,CAAYF,QAAZ,CAAZ,CAH2D,CAK3D;;AACA,iBAAKG,KAAL,GAAa,KAAKC,OAAL,CAAa,OAAb,CAAb,CAN2D,CAQ1D;;AACD,iBAAKC,MAAL,GAAc,KAAKC,UAAL,CAAgB,QAAhB,CAAd,CAT2D,CAW3D;;AACA,iBAAKC,SAAL,GAAiB,KAAKC,YAAL,EAAjB;AACF;AAEA;;;;iBACQ,wBAAY;AAAA;;AAElB,mBAAO,oDACL;AACA,iBAAKZ,UAFA,EAGL;AACA,iBAAKF,IAAL,CAAUe,KAAV,CAAgBC,IAAhB,EACE;AACA,uEAAI,UAAAf,IAAI;AAAA,qBAAI,CAAC,CAACA,IAAF,GAASA,IAAI,CAACgB,GAAd,GAAoB,SAAxB;AAAA,aAAR,CAFF,EAGE;AACA,6EAAW,UAAAC,EAAE;AAAA,qBAAI,MAAI,CAACC,SAAL,CAAeD,EAAf,CAAJ;AAAA,aAAb,CAJF,EAKE;AACA,uEAAK,UAAAE,QAAQ;AAAA,qBAAI,MAAI,CAAClB,UAAL,CAAgBmB,IAAhB,CAAqBD,QAArB,CAAJ;AAAA,aAAb,CANF,CAJK,CAYL;AAZK,cAaLJ,IAbK,CAaC,6EAbD,CAAP;AAcD;AAED;;;;iBACQ,mBAAUb,MAAV,EAAwB;AAAA;;AAE9B;AACA,mBAAO,KAAKQ,MAAL,CACL;AADK,aAEJW,MAFI,CAEI,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,KAAJ,CAAU,MAAI,CAACzB,EAAL,CAAQ0B,UAAlB,EAA8B,IAA9B,EAAoCtB,MAApC,CAAJ;AAAA,aAFP,EAGL;AAHK,aAIJa,IAJI,CAIE,2DAAK,UAAAU,IAAI;AAAA,qBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB;AAAA,aAAT,CAJF,CAAP;AAMD;AAED;;;;iBACO,wBAAeC,KAAf,EAAsB;AAE3B;AACA,gBAAMR,QAAQ,GAAG,CAAC,KAAKA,QAAvB,CAH2B,CAK3B;;AACA,iBAAKlB,UAAL,CAAgBmB,IAAhB,CAAqBD,QAArB,EAN2B,CAQ3B;;;AACA,gBAAGA,QAAH,EAAa;AAAE,mBAAKT,MAAL,CAAYkB,QAAZ,CAAqB,KAAKX,EAA1B,EAA8BY,GAA9B,CAAkC,EAAlC;AAAwC,aAAvD,CACA;AADA,iBAEK;AAAE,qBAAKnB,MAAL,CAAYkB,QAAZ,CAAqB,KAAKX,EAA1B;AAAyC,eAXrB,CAa3B;;;AACA,iBAAKT,KAAL,CAAWsB,MAAX,CAAmBX,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAnC;AACD;;;eAED,eAAoB;AAClB,mBAAO,KAAKnB,IAAL,CAAUM,IAAV,CAAeyB,KAAf,IAAwB,EAA/B;AACD;;;eAED,eAAwB;;;AACtB,gBAAIC,WAAW,GAAG,CAAH,iBAAG,KAAKhC,IAAR,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEM,IAAd,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE2B,QAAjB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,KAAF,CAAQ,GAAR,EAAaC,KAAb,GAAqBC,GAArB,EAA3C;AACA,mBAAOJ,WAAW,IAAI,EAAtB;AACD;;;;QA7FgC,iF;;;yBAAtBnC,a,EAAa,wI,EAAA,gI,EAAA,2H;AAAA,O;;;cAAbA,a;AAAa,gC;AAAA;AAAA;AAAA,S;AAAA,4F;AAAA,gB;AAAA,e;AAAA,+F;AAAA;AAAA;ACxB1B;;AACE;AAAA,qBAAe,IAAAwC,cAAA,QAAf;AAAqC,aAArC;;AAAuF;;;;AAD3E,yGAA+B,WAA/B,EAA+B,aAA/B,EAA+B,MAA/B,EAA+B,QAA/B,EAA+B,UAA/B,EAA+B,aAA/B,EAA+B,OAA/B,EAA+B,kBAA/B;;;;;;;;;;;;;;;;;;;;ACCd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBARZ,CACP,4DADO,EAEP,qEAFO,EAGP,0EAHO,CAQY;;;;4HAAVA,U,EAAU;AAAA,yBAHL,6DAGK;AAHQ,oBAJ3B,4DAI2B,EAH3B,qEAG2B,EAF3B,0EAE2B,CAGR;AALL,oBAGL,6DAHK;AAKK,S;AAFG,O;;wEADR,6D,EAAa,kF,EAAA,E;;;;;;;;;;;;;;;;;ACX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,UAAMC,MAAM,GAAsB,CAChC;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,6DAFb;AAGEC,eAAO,EAAE,cAHX;AAIEC,gBAAQ,EAAE,CACR;AAAEH,cAAI,EAAE,SAAR;AAAmBI,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAgDC,IAAhD,CAAqD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACR,UAAN;AAAA,aAAtD,CAAN;AAAA,WAAjC;AAAgHS,qBAAW,EAAE,CAAC,yDAAD;AAA7H,SADQ;AAJZ,OADgC,CAAlC;;UA6BaC,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,mBAFV,E;AAAE,kBAbJ,CACP,4DADO,EAEP,qEAFO,EAGP,wEAHO,EAIP,+DAJO,EAKP,0EALO,EAMP,sDANO,EAOP,uEAPO,EAQP,4DARO,EASP,uEATO,EAWP,mEAAoBC,QAApB,CAA6BV,MAA7B,CAXO,CAaI;;;;6HAEFS,U,EAAU;AAAA,yBAhBL,6DAgBK;AAhBQ,oBAE3B,4DAF2B,EAG3B,qEAH2B,EAI3B,wEAJ2B,EAK3B,+DAL2B,EAM3B,0EAN2B,EAO3B,sDAP2B,EAQ3B,uEAR2B,EAS3B,4DAT2B,EAU3B,uEAV2B,EAUlB,kGAVkB;AAgBR,S;AANV,O;;;;;;;;;;;;;;;;;ACtCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaE,iB;AAWX,qCAAc;AAAA;;AATJ,eAAAC,WAAA,GAAc,IAAI,0DAAJ,CAA0B,KAA1B,CAAd;AAID,eAAA7C,IAAA,GAAiB,EAAjB;AAKQ;;;;iBAGjB,oBAAQ,CACP;;;;;;;yBAfU4C,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,6zB;AAAA;AAAA;ACV9B;;AAEE;;AAEF;;AAGA;;AAEE;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAGA;;AAAiE;AAAA,qBAAa,IAAAC,WAAA,OAAb;AAA+B,aAA/B;;;;;;AAG/D;;;;AAEF;;AACF;;AAGA;;AAEE;;AAA8B;;AAA8B;;AAE5D;;AAAmB;;;;AAAiC;;AAEtD;;AAGA;;AAEE;;AAAI;;AAAiB;;AAErB;;AAAG;;AAAgB;;AAErB;;AAEF;;AAGA;;AAEE;;AAEA;;AAAO;;AAAsB;;AAAkB;;AAAI;;AAErD;;;;AArDO;;AAAA;;AAmBK;;AAAA,8JAA0B,gBAA1B,EAA0B,kFAA1B;;AAEG;;AAAA,wMAAsE,OAAtE,EAAsE,SAAtE;;AAQmB;;AAAA;;AAEX;;AAAA;;AAOf;;AAAA;;AAED;;AAAA;;AASM;;AAAA;;AAEkB;;AAAA;;;;;;;qBD7CjB;;;;;;;;;;;;;;;;;;AETd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA8BaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,mBAFd,E;AAAE,kBAbJ,CAAC,4DAAD,EACP,qEADO,EAEP,wEAFO,EAGP,sEAHO,EAIP,oEAJO,EAKP,0DALO,EAMP,+DANO,EAOP,mEAPO,EAQP,0EARO,EASP,qEATO,EAUP,qEAVO,CAaI;;;;6HAEFA,c,EAAc;AAAA,yBAhBV,uEAgBU;AAhBO,oBACtB,4DADsB,EAE9B,qEAF8B,EAG9B,wEAH8B,EAI9B,sEAJ8B,EAK9B,oEAL8B,EAM9B,0DAN8B,EAO9B,+DAP8B,EAQ9B,mEAR8B,EAS9B,0EAT8B,EAU9B,qEAV8B,EAW9B,qEAX8B,CAgBP;AALR,oBAEP,uEAFO;AAKQ,S;AAHE,O;;;;;;;;;;;;;;;;;AC3B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEA;;;;;;AAAuF;;;;;;AAKnF;;AACE;;AAEF;;;;AAH4E;;;;UDSnEC,a;;;;;AASX,+BAAavD,EAAb,EAA0CwD,KAA1C,EACUC,KADV,EACwCvD,IADxC,EACmE;AAAA;;AAAA;;AAEjE,sCAAMF,EAAN,EAAU,MAAV;AAHwC,iBAAAwD,KAAA,GAAAA,KAAA;AAChC,iBAAAC,KAAA,GAAAA,KAAA;AAA8B,iBAAAvD,IAAA,GAAAA,IAAA;AAItC;;;;AAGA,iBAAKwD,KAAL,GAAa,OAAKzC,IAAL,EAEX;AACA,qGAAM,MAAN,EAAc,gBAAd,EAAgC,QAAhC,CAHW,EAGgC,6FAAQ,SAAR,EAAmB,MAAnB,CAHhC,EAKX;AACA,oBAAA0C,MAAM;AAAA,mBAAIA,MAAM,CAAC1C,IAAP,EAER;AACA,uGAAM,EAAN,CAHQ,EAGG,2FAHH,EAKR;AACA,0EAAO,UAAA2C,OAAO;AAAA,qBAAID,MAAM,CAAC1C,IAAP,EAEhB;AACA,6GAAU2C,OAAO,CAAC,CAAD,CAAjB,CAHgB,EAGO,gGAAW,OAAK5D,EAAL,CAAQ6D,IAAnB,CAHP,EAKhB;AACA,4EAAO,UAAAC,OAAO;AAAA,uBAAIA,OAAO,CAACC,IAAR,GAAe,CAAf,IAAoB,CAACD,OAAO,CAACE,QAAR,CAAiBC,gBAA1C;AAAA,eAAd,CANgB,EAQhB;AACA,yGATgB,EASR,4DAAK,CAAL,CATQ,EAWhB,2DAAI,UAAAH,OAAO;AAAA,uBAAIA,OAAO,CAACI,MAAR,CAAeN,OAAf,CAAJ;AAAA,eAAX,CAXgB,CAAJ;AAAA,aAAd,CANQ,CAAJ;AAAA,WANK,CAAb;AAPiE;AAkClE,S,CAxCD;;;;;eACA,eAAiB;AAAc,mBAAO,KAAKH,KAAL,CAAWU,QAAX,CAAoB,IAApB,CAAP;AAAmC;;;eAClE,eAAkB;AAAc,mBAAO,CAAC,KAAKC,MAAb;AAAsB;;;eAwCtD,eAAoB;AAClB,mBAAO,KAAKlE,IAAL,CAAUM,IAAV,CAAeyB,KAAf,IAAwB,EAA/B;AACD;;;eAED,eAAwB;;;AACtB,gBAAIC,WAAW,GAAG,CAAH,iBAAG,KAAKhC,IAAR,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEM,IAAd,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE2B,QAAjB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,KAAF,CAAQ,GAAR,EAAaC,KAAb,GAAqBC,GAArB,EAA3C;AACA,mBAAOJ,WAAW,IAAI,EAAtB;AACD;;;;QArDgC,gF;;;yBAAtBqB,a,EAAa,wI,EAAA,8H,EAAA,mI,EAAA,2H;AAAA,O;;;cAAbA,a;AAAa,gC;AAAA,4F;AAAA,gB;AAAA,e;AAAA,uU;AAAA;AAAA;ACd1B;;;;AAGE;;;;AAHmE;;AAGjC;;AAAA","file":"feed-feed-module-es5.js","sourcesContent":["import { trigger, state, animate, style, transition, keyframes, query, stagger, animateChild } from '@angular/animations';\n\nconst $timing = '450ms cubic-bezier(.8, -0.6, 0.2, 1.5)';\n\nexport let $animations = [\n\n  trigger('beat', [\n    transition('* => *', \n      animate($timing, \n        keyframes([\n          style({ transform: 'scale(0.8)' }),\n          style({ transform: 'scale(1.5)' }),\n          style({ transform: 'scale(1)' })\n        ])\n      )\n    )\n  ])\n];","import { DatabaseCollection, QueryDocumentSnapshot } from '@wizdm/connect/database/collection';\nimport { DatabaseDocument, DocumentData } from '@wizdm/connect/database/document';\nimport { map, tap, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { DistributedCounter } from '@wizdm/connect/database/counter';\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\nimport { DatabaseService } from '@wizdm/connect/database';\nimport { AuthService } from '@wizdm/connect/auth';\nimport { UserProfile, UserData } from 'app/utils/user';\n\nexport interface PostData extends DocumentData {\n  channel?: string;\n  title?  : string;\n  text?   : string; \n  photo?  : string;\n  author? : string; \n  tags?   : string[]; \n};\n\n@Component({\n  selector: 'wm-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent extends DatabaseDocument<PostData> {\n\n  private _favorite$ = new BehaviorSubject<boolean>(false);  \n  private likers: DatabaseCollection<any>;\n  \n  public favorite$: Observable<boolean>;\n  public likes: DistributedCounter;\n  public data: PostData;\n  \n  /** Returns the current authenticated userId or 'unknown' */\n  get me(): string { return this.auth.userId || 'unknown'; }\n  /** Returns true thenever the place is favorite */\n  get favorite(): boolean {  return this._favorite$.value; }\n\n\n  /** Returns true whenever the current user is authenticated */\n  get authenticated(): boolean { return this.authenticated; }\n\n  constructor(db: DatabaseService, private auth: AuthService, private user: UserProfile<UserData>) { \n    super(db)\n  }\n\n  @Input() set post(snapshot: QueryDocumentSnapshot<PostData>) { \n\n    // Unwraps the document data and reference\n    this.data = this.unwrap(snapshot);\n    \n    // Gets the likes distributed counter\n    this.likes = this.counter('likes');\n    \n     // Gets the collection of likers\n    this.likers = this.collection('likers');\n    \n    // Builds the favorite flag\n    this.favorite$ = this.initFavorite();   \n }\n\n  /** Builds the favorite flag Observable */\n  private initFavorite(): Observable<boolean> {\n    \n    return merge(\n      // Here the local copy \n      this._favorite$,\n      // Resolves the user\n      this.auth.user$.pipe( \n        // Gets the current user id\n        map(user => !!user ? user.uid : 'unknown'),\n        // Seeks for the user id within the collection of likers\n        switchMap( me => this.isLikedBy(me) ),\n        // Syncs the local copy\n        tap( favorite => this._favorite$.next(favorite) ),\n      )\n      // Distinct changes to avoid unwanted flickering\n    ).pipe( distinctUntilChanged() );\n  }\n\n  /** Checks if the specified userId is among the likers */\n  private isLikedBy(userId: string): Observable<boolean> {\n\n    // Searches among the collection of likers\n    return this.likers\n      // Matches for the document named upon the userId\n      .stream( ref => ref.where(this.db.sentinelId, \"==\", userId ) )\n      // Returns true if such document exists\n      .pipe( map( docs => docs.length > 0 ),\n       );\n  }\n  \n  /** Toggles the favorite status */\n  public toggleFavorite(event) {\n\n    // Negates the curret favorite value\n    const favorite = !this.favorite;\n\n    // Updates the local favorite flag copy for improved reactivity\n    this._favorite$.next(favorite);\n\n    // Adds the user to the collection of likers....\n    if(favorite) { this.likers.document(this.me).set({}); }\n    // ...or removes it according to the request\n    else { this.likers.document(this.me).delete(); }\n\n    // Updates the likes counter accordingly\n    this.likes.update( favorite ? 1 : -1 );\n  }\n\n  public get userImage(): string {\n    return this.user.data.photo || '';\n  }\n\n  public get userFirstName(): string {\n    let displayName = this.user?.data?.userName?.split('-').slice().pop();\n    return displayName || '';\n  }\n}","<wm-post-card [userFirstName]=\"userFirstName\" [userImage]=\"userImage\" [data]=\"data\"\n  (toggleLikes)=\"toggleFavorite($event)\" [favorite]=\"favorite$\" [likes]=\"likes.counter$\"></wm-post-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { PostComponent } from './post.component';\nimport { PostCardModule } from '../post-card/post-card.module';\n\n@NgModule({\n  imports: [ \n    CommonModule,\n    FlexLayoutModule,\n    PostCardModule\n  ],\n  declarations: [ PostComponent ],\n  exports: [ PostComponent ]\n})\nexport class PostModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { MatButtonModule } from '@angular/material/button';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { GtagModule } from '@wizdm/gtag';\nimport { ActionbarModule } from 'app/navigator/actionbar';\nimport { ContentRouterModule, RoutesWithContent, ContentModule } from '@wizdm/content';\nimport { PostModule } from './post/post.module';\nimport { FeedComponent } from './feed.component';\nimport { FabModule } from 'app/navigator/fab/fab.module';\nimport { DialogLoader } from 'app/dialogs';\n\n\nconst routes: RoutesWithContent = [\n  {\n    path: '',\n    component: FeedComponent,\n    content: 'explore-feed',\n    children: [\n      { path: 'postdlg', loadChildren: () => import('../../../dialogs/post/post-dlg.module').then(m => m.PostModule), canActivate: [DialogLoader] },\n\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [ FeedComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    IconModule,\n    ButtonChangerModule,\n    GtagModule,\n    ActionbarModule,\n    PostModule,\n    FabModule,\n\n    ContentRouterModule.forChild(routes)\n  ],\n  providers: []\n})\nexport class FeedModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostData } from '../post/post.component';\nimport { $animations } from './post-card.animation';\n\n@Component({\n  selector: 'wm-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.scss'],\n  animations: $animations\n})\nexport class PostCardComponent implements OnInit {\n\n  @Output() toggleLikes = new EventEmitter<boolean>(false);\n  @Input() likes: Observable<number>;\n  @Input() favorite: Observable<boolean>;\n\n  @Input() data: PostData = {};\n\n  @Input() userFirstName: string;\n  @Input() userImage: string;\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Cover -->\n<div class=\"cover\" fxFlex=\"0 0 auto\">\n \n  <img [src]=\"data?.photo\" style=\"object-fit: cover;\"/>\n\n</div>\n\n<!-- Body -->\n<div class=\"body\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n\n  <div class=\"tools\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"4px\">\n\n    <button mat-icon-button color=\"primary\" class=\"mat-elevation-z4\">\n      <wm-icon icon=\"more_vert\"></wm-icon>\n    </button>\n\n    <button mat-icon-button color=\"primary\" class=\"mat-elevation-z4\">\n      <wm-icon icon=\"bookmark_border\"></wm-icon>\n    </button>\n\n    <!-- Likes -->\n    <button mat-icon-button color=\"primary\" class=\"mat-elevation-z4\" (authClick)=\"toggleLikes.emit()\"\n            [matBadge]=\"likes | async\" [matBadgeHidden]=\"(likes | async) === 0\">\n\n      <wm-icon [icon]=\"(favorite | async)  ? 'fas:fa-thumbs-up' : 'far:fa-thumbs-up'\" [@beat]=\"likes\"></wm-icon>\n    \n    </button>\n  </div>\n\n  <!-- Meta -->\n  <div class=\"meta\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n\n    <a mat-button color=\"primary\">{{ data?.channel || 'Wizdm' }}</a>\n\n    <time class=\"time\">{{ data?.updated | moment:'ll' }}</time>\n\n  </div>\n\n  <!-- Content -->\n  <article fxFlex=\"1 1 auto\" fxLayout=\"column\">\n\n    <h2>{{ data?.title }}</h2>\n\n    <p>{{ data?.text }}</p>\n\n  </article>\n\n</div>\n\n<!-- Author -->\n<div class=\"footer\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"4px\">\n\n  <wm-avatar [src]=\"userImage\"></wm-avatar>\n\n  <span> <a class=\"mat-small\" >{{userFirstName}} </a></span>\n\n</div>\n","export * from './action.component';\nexport * from './actionbar.directive';\nexport * from './actionbar.module';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { AvatarModule } from '@wizdm/elements/avatar';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { MomentPipesModule } from '@wizdm/pipes/moment';\nimport { AuthGuardModule } from 'app/utils/auth-guard';\nimport { PostCardComponent } from './post-card.component';\n\n@NgModule({\n  declarations: [PostCardComponent],\n  imports: [CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatMenuModule,\n    ReadmeModule,\n    IconModule,\n    AvatarModule,\n    ButtonChangerModule,\n    MomentPipesModule,\n    AuthGuardModule\n  ],\n  exports: [PostCardComponent],\n  providers: [],\n})\nexport class PostCardModule { }","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { query, stream, onSnapshot, where, orderBy, limit, endBefore, docs, snap } from '@wizdm/connect/database/collection/operators';\nimport { DatabaseGroup, QueryDocumentSnapshot } from '@wizdm/connect/database/collection';\nimport { DatabaseService } from '@wizdm/connect/database';\nimport { PostData } from './post/post.component';\nimport { filter, take, map, expand, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { EmojiUtils } from '@wizdm/emoji/utils';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { UserProfile, UserData } from 'app/utils/user';\n\n@Component({\n  selector: 'wm-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent extends DatabaseGroup<PostData> {\n\n  readonly feed$: Observable<QueryDocumentSnapshot<PostData>[]>;\n\n  // Media queries to switch between desktop/mobile views\n  public get mobile(): boolean { return this.media.isActive('xs'); }\n  public get desktop(): boolean { return !this.mobile; }\n\n\n  constructor (db: DatabaseService, private utils: EmojiUtils,\n    private media: MediaObserver, private user: UserProfile<UserData>,) {\n\n    super(db, 'feed');\n\n    /** \n     * We de-structure the stream() operator gainng finer access control to the data coming from the database\n     */\n    this.feed$ = this.pipe(\n\n      // Query for the public posts in descending order by creation date\n      where('tags', 'array-contains', 'public'), orderBy('created', 'desc'),\n\n      // Custom operator\n      source => source.pipe(\n\n        // Let's read up to 50 old posts\n        limit(50), snap(),\n\n        // Let's pre-pend the new posts\n        expand(oldOnes => source.pipe(\n\n          // Streams the latest document snapshot\n          endBefore(oldOnes[0]), onSnapshot(this.db.zone),\n\n          // Filters out not only the empty emissions but also the local ones (still having pending writes).\n          filter(newOnes => newOnes.size > 0 && !newOnes.metadata.hasPendingWrites),\n\n          // Extracts the document snapshots from the query snapshot and proceedes\n          docs(), take(1),\n\n          map(newOnes => newOnes.concat(oldOnes))\n        ))\n      )\n    );\n  }\n\n  public get userImage(): string {\n    return this.user.data.photo || '';\n  }\n\n  public get userFirstName(): string {\n    let displayName = this.user?.data?.userName?.split('-').slice().pop();\n    return displayName || '';\n  }\n\n\n}\n","\n\n<!-- List all posts in descending order -->\n<wm-post class=\"mat-elevation-z3\" fxLayout=\"column\" *ngFor=\"let post of feed$ | async\" [post]=\"post\"></wm-post>\n\n<!-- Add Post  -->\n  <ng-template wmFab=\"right bottom\" [direction]=\"'column'\">\n\n    <button mat-mini-fab color=\"primary\"  class=\"mat-elevation-z11 post__entry\" [routerLink]=\"'postdlg'\">\n      <wm-icon   icon=\"fas:fa-plus\" ></wm-icon>\n\n    </button>\n\n  </ng-template>\n"]}
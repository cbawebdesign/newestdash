{"version":3,"sources":["webpack:///node_modules/prismjs/components/prism-scss.js"],"names":["Prism","languages","scss","extend","pattern","lookbehind","inside","alias","insertBefore","rest"],"mappings":";;;;;;;;;;;;AAAAA,WAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA8B;AACpD,mBAAW;AACVC,iBAAO,EAAE,sCADC;AAEVC,oBAAU,EAAE;AAFF,SADyC;AAKpD,kBAAU;AACTD,iBAAO,EAAE,qDADA;AAETE,gBAAM,EAAE;AACP,oBAAQ,SADD,CAEP;;AAFO;AAFC,SAL0C;AAYpD;AACA,eAAO,yBAb6C;AAcpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAY;AACX;AACAF,iBAAO,EAAE,kGAFE;AAGXE,gBAAM,EAAE;AACP,sBAAU;AACTF,qBAAO,EAAE,GADA;AAETG,mBAAK,EAAE;AAFE,aADH;AAKP,2BAAe,SALR;AAMP,wBAAY;AANL;AAHG,SArBwC;AAiCpD,oBAAY;AACXH,iBAAO,EAAE,0CADE;AAEXE,gBAAM,EAAE;AACP,wBAAY;AADL;AAFG;AAjCwC,OAA9B,CAAvB;AAyCAN,WAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC9C,mBAAW,CACV,mHADU,EAEV;AACCJ,iBAAO,EAAE,2BADV;AAECC,oBAAU,EAAE;AAFb,SAFU;AADmC,OAA/C;AAUAL,WAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,WAArC,EAAkD;AACjD;AACA,oBAAY;AAFqC,OAAlD;AAKAR,WAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;AAChD,2BAAmB;AAClBJ,iBAAO,EAAE,4BADS;AAElBG,eAAK,EAAE;AAFW,SAD6B;AAKhD,uBAAe;AACdH,iBAAO,EAAE,SADK;AAEdG,eAAK,EAAE;AAFO,SALiC;AAShD,qBAAa;AACZH,iBAAO,EAAE,4BADG;AAEZG,eAAK,EAAE;AAFK,SATmC;AAahD,mBAAW,oBAbqC;AAchD,gBAAQ;AACPH,iBAAO,EAAE,UADF;AAEPG,eAAK,EAAE;AAFA,SAdwC;AAkBhD,oBAAY;AACXH,iBAAO,EAAE,iDADE;AAEXC,oBAAU,EAAE;AAFD;AAlBoC,OAAjD;AAwBAL,WAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqB,QAArB,EAA+BI,MAA/B,CAAsCG,IAAtC,GAA6CT,KAAK,CAACC,SAAN,CAAgBC,IAA7D","file":"prismjs-components-prism-scss-es5.js","sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i,\n\t\t{\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|with|show|hide)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n"]}
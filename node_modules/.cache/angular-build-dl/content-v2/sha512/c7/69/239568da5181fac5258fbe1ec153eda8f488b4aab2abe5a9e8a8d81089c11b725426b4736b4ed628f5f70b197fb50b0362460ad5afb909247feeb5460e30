{"version":3,"sources":["./emoji-keyboard/src/lib/emoji-keyboard.component.ts","./emoji-keyboard/src/lib/emoji-keyboard.component.html","./wizdm/src/app/utils/textarea/index.ts","./wizdm/src/app/utils/textarea/typein-adapter/index.ts","./emoji/src/lib/input/emoji-input.component.ts","./emoji/src/lib/input/emoji-input.component.html","./emoji/src/lib/material/index.ts","./wizdm/src/app/utils/textarea/textarea-newline/index.ts","./emoji/src/lib/input/emoji-input.module.ts","./emoji/src/lib/input/index.ts","./emoji/src/lib/material/emoji-material.directive.ts","./wizdm/src/app/utils/textarea/textarea-newline/textarea-newline.directive.ts","./emoji-keyboard/src/index.ts","./wizdm/src/app/utils/textarea/typein-adapter/typein-adapter.directive.ts","./emoji-keyboard/src/lib/emoji-keyboard.module.ts","./emoji/src/lib/material/emoji-material.module.ts","./emoji/src/lib/input/emoji-control.directive.ts","./wizdm/src/app/utils/textarea/textarea.module.ts","./emoji-keyboard/src/lib/emoji-keys.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiI;AAChB;AAChC;AACf;AACJ;AACR;AACd;;;;;;;;;ICCpC,0EAA8C;IAAA,uDAE5C;IAAA,4DAAO;;;;IAFqC,0DAE5C;IAF4C,yHAE5C;;;;IAMA,6EAA+F;IAAjD,6XAAwB;IAEpE,sEAA6D;IAEjE,4DAAS;;;;IAJiB,qFAAqB;IAEzB,0DAAkB;IAAlB,8EAAkB;;;IAFtC,4IAIO;;;IAJgF,2EAAM;;;IAXjG,yEAAuH;IAGrH,0HAES;IAGT,oNASc;IAEhB,4DAAM;;;;;IAnB2C,yFAA2B;IAGrD,0DAAc;IAAd,2EAAc;;;;IA2BrC,6EAIsC;IAD9B,0TAAkB,eAAe,KAAE;;IAGzC,2EAAU;IAAA,mEAAQ;IAAA,4DAAW;IAC/B,4DAAS;;;IAND,6KAA2D;IAC3D,qFAAqB;;;;IAQ7B,6EAIqC;IAD7B,4WAA4B;;IAGlC,2EAAU;IAAA,uDAAgB;IAAA,4DAAW;IACvC,4DAAS;;;;IAND,0KAAoD;IACpD,qFAAqB;IAIjB,0DAAgB;IAAhB,+EAAgB;;ADnCvB,MAAM,sBAAsB;IAuCjC,YAAyC,MAAoB,EAAE,KAA8B,EAAE,IAAY;QAAlE,WAAM,GAAN,MAAM,CAAc;QAnCrD,eAAU,GAAG,IAAI,oDAAe,CAAW,EAAE,CAAC,CAAC;QAK9C,YAAO,GAAG,EAAE,CAAC;QAKrB;;;UAGE;QACM,SAAI,GAAmB,KAAK,CAAC;QAgB9B,cAAS,GAAY,KAAK,CAAC;QAEnC,+BAA+B;QACrB,eAAU,GAAG,IAAI,0DAAY,EAAU,CAAC;QAIhD,4EAA4E;QAC5E,IAAI,CAAC,KAAK,GAAG,sDAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI;QAC3C,mCAAmC;QACnC,gEAAS,CAAC,IAAI,CAAC;QACf,kCAAkC;QAClC,6DAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACrB,2DAA2D;QAC3D,0DAAG,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAE;QACvE,sBAAsB;QACtB,2EAAoB,EAAE;QACtB,yCAAyC;QACzC,gEAAS,CAAE,IAAI,CAAC,EAAE,CAAC,0DAAa;QAC9B,6BAA6B;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,0DAAG,CAAE,IAAI,CAAC,EAAE;YAChC,0BAA0B;YAC1B,IAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBAAE,OAAO,EAAE,CAAC;aAAE;YAC5C,sCAAsC;YACtC,OAAQ,CAAC;oBACP,IAAI,EAAE,eAAe;oBACrB,EAAE,EAAE,eAAe;iBACpB,CAAW,CAAC,MAAM,CAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,0BAA0B;QAC1B,+CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,GAAG,EAAE,KAAU,EAAE,EAAE;YACzC,0BAA0B;YAC1B,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7C,4BAA4B;YAC5B,OAAO,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;QACvD,CAAC,EAAE,EAAE,CAAC,CAAC,CACR,CAAC;QACF,6CAA6C;QAC7C,0DAAG,CAAE,CAAC,CAAC,YAAY,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAE;QACxE,wDAAwD;QACxD,0DAAG,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAE,CACxD,CAAC;QAEF,yCAAyC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;QAClC,sCAAsC;QACtC,2DAAI,CAAC,CAAC,CAAC;QACP,yBAAyB;QACzB,gEAAS,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAE;QAClD,+BAA+B;QAC/B,0DAAG,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAE;QACrD,oCAAoC;QACpC,gEAAS,CAAC,CAAC,CAAC;QACZ,kDAAkD;QAClD,0DAAG,CAAE,GAAG,CAAC,EAAE;YACT,0CAA0C;YAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,iCAAiC;YACjC,OAAO,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAE,IAAK,eAAe,CAAC;QACzE,CAAC,CAAC;QACF,sBAAsB;QACtB,2EAAoB,EAAE;QACtB,iCAAiC;QACjC,6DAAS,CAAC,IAAI,CAAC;QACf,+CAA+C;QAC/C,kEAAW,CAAC,CAAC,CAAC,CACf;IACH,CAAC;IA1FD,2BAA2B;IAC3B,IAAI,SAAS,KAAe,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAQ3D,6DAA6D;IAC7D,IAAa,SAAS,CAAC,IAAc;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAKD,4BAA4B;IAC5B,IAAa,QAAQ,CAAC,QAAiB;QACrC,IAAI,CAAC,SAAS,GAAG,mFAAqB,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAsElD,SAAS;QAEP,qCAAqC;IAEvC,CAAC;IAED,6EAA6E;IACrE,QAAQ,CAAC,IAAc,EAAE,KAAa;QAE5C,OAAO,KAAK,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;aACjD,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,KAAK,CAAE,CAAC,CAAC;IACvE,CAAC;IAED,4CAA4C;IACpC,cAAc,CAAC,IAAW;QAEhC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YAExC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAE,CAAC;YAE5E,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,uCAAuC;IAChC,QAAQ,CAAC,EAAU;QACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,0BAA0B;IACnB,KAAK,CAAC,GAAW;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;IAC1C,CAAC;;4FAvIU,sBAAsB,kEAuCb,sDAAU;sGAvCnB,sBAAsB;kEAEtB,+EAAwB;;;;;QChBrC,iGAAoE;QAGlE,kHAmBM;;QAER,4DAA8B;QAG9B,yEAA2B;QAG3B,yEAAsC;QAGpC,wHAOS;QAGT,wHAOS;QAEX,4DAAM;;QApDyC,iFAAoB;QAGoC,0DAAgB;QAAhB,uJAAgB;QAkC5G,0DAA2B;QAA3B,2HAA2B;QAUV,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;AChDrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACF;AACC;;;;;;;;;;;;;ACFlC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACpC;AACA;AACL;AACH;AACL;AACT;AACL;;;;;;;ICDvC,yEAA+G;IAAnC,yaAAiC;IAA7G,4DAA+G;;;IAAhE,wFAA4B;;;IAG3E,wEAA+B;IAAA,uDAA6B;IAAA,qEAAe;;;IAA5C,0DAA6B;IAA7B,2FAA6B;;;IARhE,wEAAmE;IAEjE,2EAAwC;IAGtC,qHAA+G;IAG/G,uIAA2E;IAE7E,qEAAe;IAEjB,qEAAe;;;IAVC,0DAAyB;IAAzB,qFAAyB;IAG/B,0DAAqB;IAArB,iFAAqB;;ADI/B,sGAAsG;AAS/F,MAAM,UAAW,SAAQ,2DAAS;IAMvC,YAAsC,QAAkB,EAAU,KAA8B,EAAU,IAAY,EAAE,KAAiB;QACvI,KAAK,CAAC,KAAK,CAAC,CAAC;QADuB,aAAQ,GAAR,QAAQ,CAAU;QAAU,UAAK,GAAL,KAAK,CAAyB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAuDrH,oCAAoC;QAC3B,gBAAW,GAAG,IAAI,0DAAY,EAAU,CAAC;QAI5C,aAAQ,GAAG,KAAK,CAAC;QAIjB,aAAQ,GAAG,KAAK,CAAC;QAExB;;;mFAG2E;QAClE,YAAO,GAA4B,QAAQ,CAAC;QAErD,iCAAiC;QACxB,gBAAW,GAAW,IAAI,CAAC;QAEpC,0BAA0B;QACjB,iBAAY,GAAW,GAAG,CAAC;QAkXpC,0CAA0C;QAElC,WAAM,GAAG,IAAI,4CAAO,EAAkD,CAAC;IA9b/E,CAAC;IAED,mEAAmE;IACnE,IAAW,SAAS,KAAc,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAEnE,0BAA0B;IAC1B,IAAW,OAAO,KAAkB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IAEtE,sCAAsC;IACtC,IAAY,SAAS,KAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAE3E,wBAAwB;IACxB,IAAY,MAAM,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAElE,wDAAwD;IACxD,IAAY,GAAG,KAAc,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAErF,yCAAyC;IACzC,IAAW,OAAO,KAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAEtF,4CAA4C;IACrC,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAExC,uFAAuF;IAChF,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAEtC,oEAAoE;IACpE,IAAyC,QAAQ;QAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;IACxC,CAAC;IAED,gFAAgF;IAChF,IAAgC,eAAe;QAC7C,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;IACrB,CAAC;IAMD,sBAAsB;IACtB,IAAa,KAAK,CAAC,KAAa;QAC9B,4BAA4B;QAC5B,IAAG,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO;SAAE;QACpC,+DAA+D;QAC/D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACxD,6CAA6C;QAC7C,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAE,CAAC;IACtC,CAAC;IAED,oCAAoC;IACpC,WAAW,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAKtC,yBAAyB;IACzB,IAAuB,YAAY,CAAC,KAAc,IAAI,IAAI,CAAC,QAAQ,GAAG,mFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAGrG,kCAAkC;IAClC,IAAuB,YAAY,CAAC,KAAc,IAAI,IAAI,CAAC,QAAQ,GAAG,mFAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAerG,4BAA4B;IACa,WAAW,CAAC,EAAc;QACjE,8DAA8D;QAC9D,IAAG,EAAE,CAAC,IAAI,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SAAE;QACrC,gCAAgC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,wBAAwB;IACa,OAAO,CAAC,EAAiB;QAE5D,QAAO,EAAE,CAAC,GAAG,EAAE;YAEb,gCAAgC;YAChC,KAAK,WAAW,CAAC;YAAC,KAAK,WAAW,CAAC;YAAC,KAAK,YAAY,CAAC;YAAC,KAAK,SAAS,CAAC;YACtE,KAAK,KAAK,CAAC;YAAC,KAAK,MAAM,CAAC;YAAC,KAAK,KAAK,CAAC;YAAC,KAAK,QAAQ,CAAC;YAAC,KAAK,UAAU;gBACnE,OAAO,IAAI,CAAC;YAEZ,gCAAgC;YAChC,KAAK,QAAQ;gBACb,IAAI,CAAC,GAAG,EAAE,CAAC;gBAAC,MAAM;YAElB,eAAe;YACf,KAAK,WAAW;gBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;gBAAC,MAAM;YAExB,uDAAuD;YACvD,KAAK,OAAO;gBAAE,IAAG,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE;oBACvF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACnB;gBACD,MAAM;YAEN,UAAU;YACV,OAAO,CAAC,CAAC,IAAG,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAG;gBAE9D,0EAA0E;gBAC1E,IAAG,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;oBAAE,OAAO,KAAK,CAAC;iBAAE;gBAE3C,0BAA0B;gBAC1B,IAAG,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE;oBACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;iBAClC;gBAED,sBAAsB;gBACtB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACrB;SACF;QAED,mBAAmB;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,sCAAsC;IAC9B,gBAAgB,CAAC,EAAiB;QAExC,QAAO,EAAE,CAAC,GAAG,EAAE;YAEb,qBAAqB;YACrB,KAAK,GAAG,CAAC;YAAC,KAAK,GAAG;gBAClB,qDAAqD;gBACrD,IAAG,EAAE,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE;oBAAE,OAAO,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC;iBAAE;gBAC1D,oBAAoB;gBACpB,OAAO,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC;YAE1B,sBAAsB;YACtB,KAAK,GAAG,CAAC;YAAC,KAAK,GAAG;gBAClB,qCAAqC;gBACrC,IAAG,CAAC,IAAI,CAAC,GAAG,EAAE;oBAAE,OAAO,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC;iBAAE;SAC7C;QACD,qBAAqB;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oBAAoB;IACa,OAAO,CAAC,EAAkB;QACzD,uDAAuD;QACvD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAClB,wBAAwB;QACxB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,yBAAyB;QACzB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,qBAAqB;IACa,QAAQ,CAAC,EAAkB;QAC3D,4BAA4B;QAC5B,MAAM,EAAE,GAAG,EAAE,CAAC,aAAa,IAAK,IAAI,CAAC,MAAc,CAAC,aAAa,CAAC;QAClE,IAAG,CAAC,EAAE,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACxB,2BAA2B;QAC3B,IAAI;YAAE,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;SAAE;QAC5E,OAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE;QAClC,mBAAmB;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,sBAAsB;IACa,SAAS,CAAC,EAAkB;QAC7D,4BAA4B;QAC5B,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,aAAa,IAAK,MAAc,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAG,CAAC,EAAE,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACzB,qCAAqC;QACrC,IAAI;YAAE,IAAI,CAAC,MAAM,CAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,CAAC;SAAE;QAC1C,OAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE;QAClC,mBAAmB;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,yEAAyE;IAC/D,OAAO,CAAC,MAAc;QAC9B,mGAAmG;QACnG,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,iIAAiI;IACzH,QAAQ,CAAC,KAAiB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,2DAAI,CAAC,CAAC,CAAC,CAAE,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAE,CAAC;IAChE,CAAC;IAED;4CACwC;IACjC,MAAM,CAAC,KAAa,EAAE,GAAY;QAEvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,uDAAuD;IAChD,MAAM,CAAC,GAAW;QACvB,yCAAyC;QACzC,IAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAC3C,uCAAuC;QACvC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,+CAA+C;IACvC,GAAG;QACT,uCAAuC;QACvC,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;QACrB,yBAAyB;QACzB,IAAG,IAAI,CAAC,SAAS,EAAC;YAChB,oCAAoC;YACpC,IAAG,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAAE,OAAO;aAAE;YAC9C,sDAAsD;YACtD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,4BAA4B;QAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,sDAAsD;IAC/C,SAAS;QACd,uCAAuC;QACvC,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;QACrB,yBAAyB;QACzB,IAAG,IAAI,CAAC,SAAS,EAAE;YACjB,sCAAsC;YACtC,IAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBAAE,OAAO;aAAE;YAC/B,uDAAuD;YACvD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpC;QACD,8BAA8B;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,yCAAyC;IACjC,GAAG,CAAC,GAAW;QACrB,8BAA8B;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChF,mCAAmC;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;QACtC,sBAAsB;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,mDAAmD;IAC3C,MAAM,CAAC,KAAa,EAAE,KAAa,EAAE,GAAW;QACtD,yBAAyB;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnC,uBAAuB;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;QAClC,oDAAoD;QACpD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAE,CAAC;QACpD,qBAAqB;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,qCAAqC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,6DAA6D;IACrD,IAAI,CAAC,GAAW;QACtB,oGAAoG;QACpG,8CAA8C;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,mCAAmC;QACnC,OAAO,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,4DAA4D;IACpD,IAAI,CAAC,GAAW;QACtB,0HAA0H;QAC1H,iGAAiG;QACjG,IAAI,MAAM,GAAG,CAAC,CAAC;QAAC,IAAI,IAAI,GAAG,CAAC,CAAC;QAC7B,OAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE;YACpC,MAAM,GAAG,IAAI,CAAC;SACf;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,gCAAgC;IACxB,IAAI;QAEV,IAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAE3C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oCAAoC;IAC5B,KAAK;QAEX,IAAI;YACD,4CAA4C;YAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3B,iDAAiD;YACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;YAC3D,8CAA8C;YAC9C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;SACvF;QACD,OAAM,CAAC,EAAE;YAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,qBAAqB;SAAE;QAC7D,yDAAyD;QACzD,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAED,oDAAoD;IAC5C,KAAK;QAEX,IAAI;YACF,4CAA4C;YAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3B,wEAAwE;YACxE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,8CAA8C;YAC9C,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC3B,qDAAqD;YACrD,IAAG,GAAG,CAAC,UAAU,KAAK,IAAI,IAAI,GAAG,CAAC,YAAY,KAAK,MAAM,EAAE;gBACzD,6FAA6F;gBAC7F,yFAAyF;gBACzF,4DAAuB,CAAC,QAAQ,CAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAE,CAAC;aACxD;SACF;QACD,OAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE;QAClC,qCAAqC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qGAAqG;IAC9F,QAAQ,CAAC,OAAkB,EAAE,EAAkB;QAEpD,qFAAqF;QACrF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,yGAAyG;IACjG,GAAG,CAAC,OAAkB,EAAE,SAAiB,CAAC;QAChD,yBAAyB;QACzB,IAAG,CAAC,OAAO,EAAE;YAAE,OAAO,CAAC,CAAC;SAAE;QAC1B,4BAA4B;QAC5B,KAAI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC5B,2CAA2C;YAC3C,IAAG,OAAO,KAAK,GAAG,EAAE;gBAAE,MAAM;aAAE;YAC9B,yDAAyD;YACzD,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;SACtC;QACD,iCAAiC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,gFAAgF;IACxE,MAAM,CAAC,IAAU,EAAE,MAAc;;QACvC,mCAAmC;QACnC,IAAG,CAAC,IAAI,EAAE;YAAE,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,KAAI,CAAC,CAAC;SAAE;QAE7C,0LAA0L;QAC1L,IAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;YACnC,2MAA2M;YAE3M,uCAAuC;YACvC,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACrC,IAAG,CAAC,KAAK,EAAE;gBAAE,OAAO,CAAC,CAAC;aAAE;YACxB,iHAAiH;YACjH,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,GAAC,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,GAAG,CAAC,CAAC;SACZ;QAED,mDAAmD;QACnD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAAC,IAAI,IAAI,GAAG,EAAE,CAAC;QACnD,OAAM,KAAK,EAAE;YACX,0GAA0G;YAC1G,IAAG,KAAK,IAAI,IAAI,EAAE;gBAAE,OAAO,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aAAE;YAClD,sDAAsD;YACtD,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,yBAAyB;YACzB,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;SAC3B;QAED,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,KAAI,CAAC,CAAC;IACjC,CAAC;IAED,wEAAwE;IAChE,KAAK,CAAC,MAAc;QAC1B,0DAA0D;QAC1D,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACnC,gDAAgD;QAChD,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAM,IAAI,EAAE;YACV,sCAAsC;YACtC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,mDAAmD;YACnD,IAAG,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;gBAEvB,oDAAoD;gBACrD,IAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;oBACnC,wEAAwE;oBACxE,OAAO,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;iBACzB;gBAED,wEAAwE;gBACxE,OAAO,CAAE,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;aACpC;YACD,+BAA+B;YAC/B,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;YACtB,kEAAkE;YAClE,KAAK,EAAE,CAAC;YACR,2BAA2B;YAC3B,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;SACzB;QAED,wDAAwD;QACxD,OAAO,CAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAE;IAC5B,CAAC;IAED,sDAAsD;IAC9C,QAAQ,CAAC,IAAU;QAEzB,QAAO,IAAI,CAAC,QAAQ,EAAE;YAEpB,8BAA8B;YAC9B,KAAK,IAAI,CAAC,SAAS;gBACnB,OAAO,IAAI,CAAC,SAAS,CAAC;gBACtB,MAAM;YAEN,8BAA8B;YAC9B,KAAK,IAAI,CAAC,YAAY;gBACtB,QAAQ,IAAgB,CAAC,OAAO,EAAE;oBAEhC,KAAK,KAAK;wBACV,OAAQ,IAAyB,CAAC,GAAG,IAAI,EAAE,CAAC;wBAC5C,MAAM;iBACP;SACF;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IASD,gCAAgC;IACxB,YAAY;QAClB,gDAAgD;QAChD,IAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SAAE;QAC5C,iCAAiC;QACjC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oCAAoC;IAC5B,aAAa,CAAC,WAAmB,IAAI,EAAE,QAAgB,GAAG;QAChE,4BAA4B;QAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,8EAA8E;QAC9E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;QAC1B,mDAAmD;QACnD,mEAAY,EAAE;QACd,4DAA4D;QAC5D,6DAAM,CAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5E,sDAAsD;QACtD,0DAAG,CAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAE,CAEhC,CAAC,SAAS,CAAE,QAAQ,CAAC,EAAE;YACtB,gEAAgE;YAChE,IAAG,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACrB,+DAA+D;gBAC/D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACrD,wBAAwB;gBACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aACpB;YACD,yCAAyC;iBACpC;gBAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAAE;YACxC,gEAAgE;YAChE,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,EAAE;gBAAE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;aAAE;QACzD,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;MAIE;IACM,KAAK,CAAC,KAAe;QAE3B,IAAG,CAAC,CAAC,KAAK,EAAE;YACV,4DAA4D;YAC5D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC/E,OAAO,IAAI,CAAC;SACb;QACD,mDAAmD;QACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC;IACd,CAAC;IAED,iEAAiE;IACjE,IAAY,QAAQ,KAAc,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExI,0EAA0E;IAClE,IAAI;QACV,yCAAyC;QACzC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACnC,qDAAqD;QACrD,IAAG,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAAE;QAC9C,4CAA4C;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,6DAA6D;QAC7D,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAED,wEAAwE;IACxE,IAAY,QAAQ,KAAc,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IAEzF,qFAAqF;IAC7E,IAAI;QACV,yCAAyC;QACzC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QACnC,8CAA8C;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,uDAAuD;QACvD,IAAG,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SAAE;QAClD,6DAA6D;QAC7D,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;;oEAhiBU,UAAU,kEAMD,wDAAQ;0FANjB,UAAU;oJAAV,uBAAmB,gFAAnB,mBAAe,wEAAf,mBAAe,0EAAf,oBAAgB,4EAAhB,qBAAiB;;;;;QClB9B,wHAYe;;QAZmB,iFAAa;;;;;;;;;;;;;;ACD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACH;;;;;;;;;;;;;ACDxC;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;ACC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;AACD;AACI;;AAOlD,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAJlB,CAAE,4DAAY,EAAE,mEAAgB,CAAE;mIAIhC,gBAAgB,mBAHX,iEAAU,EAAE,qEAAY,aAD7B,4DAAY,EAAE,mEAAgB,aAE9B,iEAAU,EAAE,qEAAY;;;;;;;;;;;;;ACTrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACF;AACH;;;;;;;;;;;;;ACFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACW;AAC7B;AACJ;AACL;;;;;AAWpC,MAAM,aAAa;IAKxB,mDAAmD;IACnD,YAAgC,SAAuB,EAA+B,SAAoB,EAAU,KAAiB;QAArG,cAAS,GAAT,SAAS,CAAc;QAA+B,cAAS,GAAT,SAAS,CAAW;QAAU,UAAK,GAAL,KAAK,CAAY;QAEnI,IAAG,CAAC,SAAS,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC7F;QAED,IAAI,CAAC,YAAY,GAAG,kDAAK,CAEvB,sDAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,EACrC,IAAI,CAAC,KAAK,CAAC,WAAW,CACvB,CAAC;IACJ,CAAC;IAED,gCAAgC;IAChC,IAAI,KAAK,KAAiB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAAA,CAAC;IAKrD,wCAAwC;IACxC,IAAI,WAAW,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAAA,CAAC;IAE7D,sCAAsC;IACtC,IAAI,OAAO,KAAc,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAErD,oCAAoC;IACpC,IAAI,KAAK,KAAc,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAElD,uCAAuC;IACvC,IAAI,QAAQ;QAEV,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,EAAE;YACrD,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IAED,uCAAuC;IACvC,IAAI,QAAQ,KAAc,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEvD,4DAA4D;IAC5D,IAAI,gBAAgB,KAAc,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvE,gDAAgD;IAChD,IAAI,UAAU,KAAc,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAEjF,yEAAyE;IACzE,iBAAiB,CAAC,GAAa,IAAU,CAAC;IAE1C,kDAAkD;IAClD,gBAAgB,CAAC,KAAiB;QAChC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;;0EA1DU,aAAa;6FAAb,aAAa,iMANb;YACT,EAAE,OAAO,EAAE,gFAAmB,EAAE,WAAW,EAAE,gEAAU,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE;SAC/E;;;;;;;;;;;;;;;;;ACNI,MAAM,eAAe;IAH5B;QAKE;;;mFAG2E;QAClE,YAAO,GAA4B,QAAQ,CAAC;KAkBtD;IAhBC,sEAAsE;IACjC,OAAO,CAAC,EAAiB;QAE5D,qEAAqE;QACrE,QAAO,EAAE,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE;YAEpD,KAAK,MAAM;gBACX,OAAO,KAAK,CAAC;YAEb,KAAK,OAAO;gBACZ,OAAO,EAAE,CAAC,QAAQ,CAAC;SACpB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;;8EAtBU,eAAe;+FAAf,eAAe;iJAAf,mBAAe;;;;;;;;;;;;;;ACL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACH;AACX;;;;;;;;;;;;;ACFjC;AAAA;AAAA;AAAA;AAAA;AAAkH;AAClE;AACL;;;AAG3C,mDAAmD;AAI5C,MAAM,aAAa;IAExB,YAAsC,QAAkB,EAAU,KAAiB,EAA8B,KAAiB;QAA5F,aAAQ,GAAR,QAAQ,CAAU;QAAU,UAAK,GAAL,KAAK,CAAY;QAA8B,UAAK,GAAL,KAAK,CAAY;QAqClI,8BAA8B;QACpB,gBAAW,GAAG,IAAI,0DAAY,EAAU,CAAC;IAtCkF,CAAC;IAEtI,uBAAuB;IACvB,IAAY,OAAO,KAAkB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IAEvE,qCAAqC;IACrC,IAAY,QAAQ;QAClB,kCAAkC;QAClC,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,UAAU,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAAE;QACvG,mCAAmC;QACnC,OAAO,IAAI,CAAC,OAA8B,CAAC;IAC7C,CAAC;IAED,0CAA0C;IAC1C,IAAY,QAAQ,KAAc,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAExF,8BAA8B;IAC9B,IAAY,KAAK;QACf,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;IAC7C,CAAC;IAEO,WAAW;QACjB,mDAAmD;QACnD,IAAG,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;SAAE;QAC7B,sBAAsB;QACtB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,qDAAqD;QACrD,IAAG,IAAI,CAAC,KAAK,EAAE;YAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAAE;aACnD;YAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAAE;IACzF,CAAC;IAED,2CAA2C;IACR,OAAO,CAAC,EAAc;QACvD,0DAA0D;QAC1D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAKD,sFAAsF;IAC/E,MAAM,CAAC,GAAW;QACvB,6BAA6B;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,iDAAiD;QACjD,IAAG,IAAI,CAAC,KAAK,EAAE;YAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAAE;aACrC;YACH,0CAA0C;YAC1C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACjG,uEAAuE;YACvE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC5C;IACH,CAAC;;0EAtDU,aAAa,kEAEJ,wDAAQ;6FAFjB,aAAa;qIAAb,uBAAe;;;;;;;;;;;;;;ACR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACS;AACC;AACF;AACI;AACE;AACO;;AAc7D,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBAXrB;YACP,4DAAY;YACZ,qEAAgB;YAChB,sEAAe;YACf,oEAAa;YACb,wEAAe;YACf,0EAAgB;SACjB;mIAIU,mBAAmB,mBAHd,gFAAsB,aAPpC,4DAAY;QACZ,qEAAgB;QAChB,sEAAe;QACf,oEAAa;QACb,wEAAe;QACf,0EAAgB,aAGP,gFAAsB;;;;;;;;;;;;;AClBnC;AAAA;AAAA;AAAA;AAA2D;;AAMpD,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB;mIAAnB,mBAAmB,mBAHd,uEAAa,aAClB,uEAAa;;;;;;;;;;;;;ACL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACR;AACL;AACN;AACX;;;AAE3C;;GAEG;AAQI,MAAM,YAAY;IAMvB,YAAqB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAF9B,aAAQ,GAAG,IAAI,4CAAO,EAAE,CAAC;QAG/B,6EAA6E;QAC7E,IAAI,CAAC,KAAK,GAAG,sDAAS,CAAO,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CAAE,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAE,CAAC;QACrF,0EAA0E;QAC1E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAE,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAE,CAAC;IACpE,CAAC;IAED,8GAA8G;IAC9G,UAAU,CAAC,KAAU;QAEnB,iCAAiC;QACjC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACzB,GAAG;IACL,CAAC;IAED,8FAA8F;IAC9F,gBAAgB,CAAC,EAAmB;QAElC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAE,CAAC;IAC/C,CAAC;IAED,mHAAmH;IACnH,iBAAiB,CAAC,EAAc;QAE9B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,QAAiB;QAEhC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,CAAC;IAED,yCAAyC;IACzC,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;;wEA9CU,YAAY;4FAAZ,YAAY,4OAJZ;YACT,EAAE,OAAO,EAAE,gEAAiB,EAAE,WAAW,EAAE,gEAAU,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;SACzF;;;;;;;;;;;;;ACbH;AAAA;AAAA;AAAA;AAAA;AAAqD;AACJ;;AAO1C,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAJhB,EAAG;mIAID,cAAc,mBAHT,iEAAe,EAAE,6DAAa,aACnC,iEAAe,EAAE,6DAAa;;;;;;;;;;;;;ACP3C;AAAA;AAAA;AAA+C;AAW9C,CAAC;AAEK,MAAM,UAAU,GAAG,IAAI,4DAAc,CAAe,kBAAkB,EAAE;IAC7E,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,GAAG,EAAE,CAAC;QACf;YACE,EAAE,EAAE,oBAAoB;YACxB,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,yBAAyaAAa,EAAC,aAAa,EAAC,aAAa,EAAC,IAAI,EAAC,UAAU,EAAC,UAAU,EAAC,UAAU,EAAC,IAAI,EAAC,UAAU,EAAC,UAAU,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,UAAU,EAAC,UAAU,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,UAAU,EAAC,UAAU,EAAC,aAAa,EAAC,aAAa,EAAC,aAAa,EAAC,OAAO,EAAC,UAAU,EAAC,OAAO,EAAC,UAAU,EAAC,UAAU,EAAC,OAAO,EAAC,UAAU,EAAC,OAAO,EAAC,UAAU,EAAC,UAAU,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;SACvkG;QACD;YACE,EAAE,EAAE,oBAAoB;YACxB,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;SAC3oB;QACD;YACE,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,UAAU;YAChtmB;QACD;YACE,EAAE,EAAE,mBAAmB;YACvB,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,cAAc;YACprjC;QACD;YACE,EAAE,EAAE,YAAY;YAChB,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;SACzZ;QACD;YACE,EAAE,EAAE,SAAS;YACb,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,eAAe;YACrqC;QACD;YACE,EAAE,EAAE,SAAS;YACb,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,eAAe;YACrzhC;QACD;YACE,EAAE,EAAE,OAAO;YACX,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,aAAa;YACngBAAgB,EAAC,gBAAgB,EAAC,gBAAgB,CAAC;SACp3D;KACF;CAAC,CAAC,CAAC","file":"default~dialogs-post-post-dlg-module~pages-chat-chat-module-es2015.js","sourcesContent":["import { Component, Input, Output, EventEmitter, Inject, ViewEncapsulation, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { sample, map, take, tap, startWith, switchMap, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { Observable, fromEvent, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMOJI_KEYS, EmojiGroup } from './emoji-keys';\nimport { runInZone } from '@wizdm/rxjs';\n\n@Component({\n  selector: 'wm-emoji-keyboard',\n  templateUrl: './emoji-keyboard.component.html',\n  styleUrls: ['./emoji-keyboard.component.scss'],\n  host: { \"class\": \"wm-emoji-keyboard\" },\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmojiKeyboardComponent {\n\n  @ViewChild(CdkVirtualScrollViewport) scroller: CdkVirtualScrollViewport;\n\n  private favorites$ = new BehaviorSubject<string[]>([]);\n  readonly currentId$: Observable<string>;\n  readonly rows$: Observable<any[]>;\n\n  private offsets: { [key:string]: number };\n  readonly keySize = 40;\n\n  /** The latest favorites */\n  get favorites(): string[] { return this.favorites$.value; }\n\n   /** Mode flag:\n   * 'web' renders emoji as images\n   * 'native' renders the text as it is relying on the OS native support\n   */\n  @Input() mode: 'native'|'web' = 'web';\n\n  /** Array of favorites emoji for the 'Recenlty used' group */\n  @Input() set favorites(favs: string[]) {\n    this.favorites$.next(favs);\n  }\n\n  /** Optional alternative labels for the emoji groups */\n  @Input() labels: { [key:string]: string };\n\n  /** Disables the keyboard */\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n\n  get disabled(): boolean { return this._disabled; }\n  private _disabled: boolean = false;\n\n  /** Emits the selected emoji */\n  @Output() keyPressed = new EventEmitter<string>();\n\n  constructor(@Inject(EMOJI_KEYS) readonly emojis: EmojiGroup[], elref: ElementRef<HTMLElement>, zone: NgZone) { \n\n    // Rows observable adjusting on window resize to work with virtual scrolling\n    this.rows$ = fromEvent(window, 'resize').pipe( \n      // Makes sure to start with a value\n      startWith(null),\n      // Waits for rendering to complete\n      sample(zone.onStable),\n      // Computes the number of columns based on the actual width\n      map( () => Math.floor(elref.nativeElement.scrollWidth / this.keySize) ),\n      // Filters for changes\n      distinctUntilChanged(),\n      // Combines favorites with all emoji keys\n      switchMap( cols => combineLatest(\n        // Splits the favorites first\n        this.favorites$.pipe( map( favs => {\n          // Skips when no favorites\n          if(!favs || favs.length <= 0) { return []; }\n          // Returns the group of recently used \n          return ([{ \n            name: 'Recently used', \n            id: 'recently_used' \n          }] as any[]).concat( this.spliRows(favs, cols) );\n        })),\n        // Splits the emoji groups\n        of(this.emojis.reduce( (out, group: any) => {\n          // Pushes the group first \n          out.push({ name: group.name, id: group.id });\n          // Concats the key rows next\n          return out.concat( this.spliRows(group.keys, cols) );\n        }, []))\n      )), \n      // Concatenates the recently Used with groups\n      map( ([recentlyUsed, emojiGroups]) => recentlyUsed.concat(emojiGroups) ),\n      // At last, computes the scrolling offset for each group\n      tap( rows => this.offsets = this.computeOffsets(rows) )\n    );\n\n    // Builds the current group id observable\n    this.currentId$ = zone.onStable.pipe( \n      // Waits for the rendering to complete\n      take(1), \n      // Updates with scrolling\n      switchMap( () => this.scroller.elementScrolled() ),\n      // Measures the scrolled offset\n      map( () => this.scroller.measureScrollOffset('top') ),\n      // Makes sure to start with 0 offset\n      startWith(0),\n      // Detects the group based on the scrolled offset \n      map( top => {\n        // Computes a reversed array of group ids \n        const ids = Object.keys(this.offsets || {}).reverse();\n        // Seeks for the current group id\n        return ids.find( key => top >= this.offsets[key] ) ||  'recently_used';\n      }),\n      // Filters for changes\n      distinctUntilChanged(),\n      // Runs within the angular's zone\n      runInZone(zone),\n      // Shares the same observable among subscribers\n      shareReplay(1)\n    )\n  }\n\n  ngDoCheck() {\n\n    //this.scroller?.checkViewportSize();\n\n  }\n\n  /** Splits the given array of emoji keys into chuncks of the proper length */\n  private spliRows(keys: string[], count: number): string[][] {\n\n    return Array( Math.ceil(keys.length / (count || 1)))\n      .fill(0).map( (_, i) => keys.slice(i * count, i * count + count ));\n  }\n\n  /** Computes a map of emoji group offsets */\n  private computeOffsets(rows: any[]) {\n\n    return this.emojis.reduce( (map, group) => {\n\n      map[group.id] = this.keySize * rows.findIndex( row => row.id === group.id );\n\n      return map;\n    }, {});\n  }\n\n  /** Scrolls to the given emoji group */\n  public scrollTo(id: string) {\n    this.scroller.scrollTo({ top: this.offsets[id] || 0 });\n  }\n\n  /** Emits the emoji key */\n  public press(key: string) {\n    return this.keyPressed.emit(key), false;\n  }\n}","<!-- Virtual scroll viewport -->\n<cdk-virtual-scroll-viewport fxFlex=\"1 1 auto\" [itemSize]=\"keySize\">\n  \n  <!-- Renders the key rows within the viewport -->\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" [style.height.px]=\"keySize\" *cdkVirtualFor=\"let row of rows$ | async\">\n\n    <!-- Group name -->\n    <span class=\"group\" *ngIf=\"row.id; else keys\">{{ \n      labels && labels[row.id] || row.name \n    }}</span>\n\n    <!-- Emoji keys row -->\n    <ng-template #keys>\n\n      <!-- Renders a button for each key -->\n      <button mat-icon-button [disabled]=\"disabled\" (mousedown)=\"press(key)\" *ngFor=\"let key of row\">\n        <!-- Renders the emoji -->\n        <span class=\"key\" [attr.mode]=\"mode\" [attr.key]=\"key\"></span>\n    \n    </button>\n      \n    </ng-template>\n\n  </div>\n  \n</cdk-virtual-scroll-viewport>\n\n<!-- Renders the group bottom bar -->\n<mat-divider></mat-divider>\n\n<!-- Sticks the bar on the bottom -->\n<nav fxFlex=\"0 0 auto\" fxLayout=\"row\">\n\n  <!-- Starts with latest favorites, when present -->\n  <button mat-button fxFlex=\"100\" \n          [class.selected]=\"(currentId$ | async) === 'recently_used'\" \n          [disabled]=\"disabled\"\n          (click)=\"scrollTo('recently_used')\" \n          *ngIf=\"favorites?.length > 0\">\n\n    <mat-icon>schedule</mat-icon>\n  </button>\n\n  <!-- Fills with group buttons -->\n  <button mat-button fxFlex=\"100\"  \n          [class.selected]=\"(currentId$ | async) === group.id\" \n          [disabled]=\"disabled\"\n          (click)=\"scrollTo(group.id)\"\n          *ngFor=\"let group of emojis\">\n\n    <mat-icon>{{ group.icon }}</mat-icon>\n  </button>\n\n</nav>","export * from './textarea-newline';\nexport * from './typein-adapter';\nexport * from './textarea.module';","export * from './typein-adapter.directive';","import { Component, Input, Output, EventEmitter, HostBinding, HostListener, Inject } from '@angular/core';\nimport { ElementRef, ViewEncapsulation, NgZone } from '@angular/core';\nimport { Subject, Subscription, animationFrameScheduler } from 'rxjs';\nimport { filter, map, timeInterval, take } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EmojiText, emSegment } from '@wizdm/emoji/text';\nimport { EmojiUtils } from '@wizdm/emoji/utils';\nimport { DOCUMENT } from '@angular/common';\nimport { OnDestroy } from '@angular/core';\n\n/** @dynamic - tells ngc to ignore the error on type Document generated by strictEmitMetadata: true */\n@Component({\n  selector: 'wm-emoji-input',\n  templateUrl: './emoji-input.component.html',\n  styleUrls: ['./emoji-input.component.scss'],\n  inputs: ['mode'],\n  encapsulation: ViewEncapsulation.None,\n  host: { \"class\": \"wm-emoji-input\" }\n})\nexport class EmojiInput extends EmojiText implements OnDestroy {\n\n  // Current selection\n  private start: number;\n  private end: number;\n\n  constructor(@Inject(DOCUMENT) private document: Document, private elref: ElementRef<HTMLElement>, private zone: NgZone, utils: EmojiUtils) {\n    super(utils);\n  }\n\n  /** True whenever the curernt selection is collapsed in a cursor */\n  public get collapsed(): boolean { return this.start === this.end; }\n\n  /** Input's HTMLElement */\n  public get element(): HTMLElement { return this.elref.nativeElement; }\n\n  /** The Document's Selection object */\n  private get selection(): Selection { return this.document.getSelection(); }\n\n  /** The Window object */\n  private get window(): Window { return this.document.defaultView; }\n\n  /** True whenever the platform is Mac, iPhone or iPad */\n  private get mac(): boolean { return /Mac|^iP/.test(this.window.navigator.platform); }\n\n  /** True whenever this input has focus */\n  public get focused(): boolean { return this.document.activeElement === this.element; }\n\n  /** Sets the focus on the input's element */\n  public focus() { this.element.focus(); }\n\n  /** Removes focus from the input's element; keystrokes will subsequently go nowhere. */\n  public blur() { this.element.blur(); }\n\n  // Applies the contentediable attribute unless the input is disabled\n  @HostBinding('attr.contenteditable') get editable() { \n    return this.disabled ? undefined : ''; \n  }\n\n  // Marks the input as empty supporting displaying/hiding of the placeholder text\n  @HostBinding('class.empty') get showPlaceholder(): boolean {\n    return !this.value;\n  }\n\n  /** The placeholder text */\n  @HostBinding('attr.placeholder')\n  @Input() placeholder: string;\n\n  /** The input value */\n  @Input() set value(value: string) {\n    // Avoids unecessary changes\n    if(value === this.value) { return; }\n    // Restarts the undo history whenevevr the input value changes.\n    this.enableHistory(this.historyTime, this.historyLimit); \n    // Compiles the new text and emits the update\n    this.compile( this._value = value );\n  }\n\n  // Clears the history while leaving \n  ngOnDestroy() { this.clearHistory(); }\n\n   /** Emits the new text on changes */\n  @Output() valueChange = new EventEmitter<string>();\n  \n  /** Disables the input */\n  @Input('disabled') set disableInput(value: boolean) { this.disabled = coerceBooleanProperty(value); }\n  public disabled = false; \n\n  /** Marks the input as required */\n  @Input('required') set requireInput(value: boolean) { this.required = coerceBooleanProperty(value); }\n  public required = false; \n\n  /** Selects the newline mode. \n   * - None: enter does nothig. \n   * - Always: enter always inserts a new line. \n   * - Shift: enter inserts newline in conjunction with the shift key only */\n  @Input() newline: 'none'|'always'|'shift' = 'always';\n\n  /** Undo history bouncing time */\n  @Input() historyTime: number = 1000;\n\n  /** Undo history limits */\n  @Input() historyLimit: number = 128;\n\n  // Handles beforeinput event\n  @HostListener('beforeinput', ['$event']) beforeInput(ev: InputEvent) { \n    // Divert the insertion content to the internal implementation\n    if(ev.data) { this.insert(ev.data); }\n    // Prevents the default behavior\n    return false;\n  }\n\n  // Handles keydown event\n  @HostListener('keydown', ['$event']) keyDown(ev: KeyboardEvent) {\n\n    switch(ev.key) {\n\n      // Reverts navigation to default\n      case 'ArrowDown': case 'ArrowLeft': case 'ArrowRight': case 'ArrowUp': \n      case 'Tab': case 'Home': case 'End': case 'PageUp': case 'PageDown':\n      return true;\n     \n      // Deletes the current selection\n      case 'Delete':\n      this.del(); break;\n      \n      // Deletes back\n      case 'Backspace':\n      this.backspace(); break;\n\n      // Insert a newline according to the newline input mode\n      case 'Enter': if(this.newline === 'always' || (this.newline === 'shift' && ev.shiftKey)) { \n        this.insert('\\n');\n      }\n      break;\n\n      // Editing\n      default: if(ev.key.length === 1 || this.utils.isEmoji(ev.key) ) {\n\n        // Prevents keyboard repeating giving a chance to Mac's press&hold to work\n        if(ev.repeat && this.mac) { return false; }\n\n        // Intercepts accelerators\n        if(ev.metaKey && this.mac || ev.ctrlKey) {\n          return this.keyAccellerators(ev);\n        }\n\n        // Inserts new content\n        this.insert(ev.key);\n      }\n    }\n\n    // Prevents default\n    return false;\n  }\n\n  /** Handles keayboard accellerators */\n  private keyAccellerators(ev: KeyboardEvent) {\n\n    switch(ev.key) {\n\n      // Ctrl/Cmd Z -> Undo\n      case 'z': case 'Z': \n      // Reverts to Redo whenever shift is pressed on a Mac\n      if(ev.shiftKey && this.mac) { return this.redo(), false; }\n      // Performs thr Undo\n      return this.undo(), false;\n\n      // Ctrl/Cmd Y -> Redo \n      case 'y': case 'Y': \n      // Performs the Redo unless its a Mac\n      if(!this.mac) { return this.redo(), false; }\n    }\n    // Reverts to default\n    return true;\n  }\n\n  // Handles cut event\n  @HostListener('cut', ['$event']) editCut(ev: ClipboardEvent) {\n    // Reverts the cut request to copy the content first...\n    this.editCopy(ev);\n    // Deletes the selection\n    this.del();\n    // Always prevent default\n    return false;\n  } \n  \n  // Handles copy event\n  @HostListener('copy', ['$event']) editCopy(ev: ClipboardEvent) {\n    // Gets the clipboard object\n    const cp = ev.clipboardData || (this.window as any).clipboardData;\n    if(!cp) { return true; }\n    // Copies the selected text\n    try { cp.setData('text', this.query().value.slice(this.start, this.end) ); }\n    catch(e) { /*console.error(e);*/ }\n    // Prevents default\n    return false;\n  }\n\n  // Handles paste event\n  @HostListener('paste', ['$event']) editPaste(ev: ClipboardEvent) {\n    // Gets the clipboard object\n    const cp = (ev.clipboardData || (window as any).clipboardData);\n    if(!cp) { return false; }\n    // Pastes the data from the clipboard\n    try { this.insert( cp.getData('text') ); }\n    catch(e) { /*console.error(e);*/ }\n    // Prevents default\n    return false;\n  }\n\n  /** Compiles the input text into segment accounting for multiple lines */\n  protected compile(source: string): number {\n    // Appends an extra '\\n' forcing the browser displaying a new line normally omitted when at the end\n    return super.compile(source + (source && source.endsWith('\\n') ? '\\n' : ''));\n  }\n\n  /** Wait for the current queue of microtaks to be emptied. The async funtion will than be called after the rendering completed */\n  private whenDone(async: () => void) { \n    this.zone.onStable.pipe( take(1) ).subscribe( () => async() ); \n  }\n\n  /** Selects the text between start and end when specified. \n   * Sets the cursor position otherwise */\n  public select(start: number, end?: number): this {\n\n    this.start = Math.max(start, 0);\n    this.end = Math.min(end || this.start, this.value.length);\n    return this.sort().apply();\n  }\n\n  /** Insert a new text at the current cursor position */\n  public insert(key: string): this {\n    // Skips empty insertions when unfruitful\n    if(!key && this.collapsed) { return this; }\n    // Stores the current values in history\n    return this.query().store().ins(key);\n  }\n\n  /** Deletes the current selection (Del-like) */\n  private del(): this {\n    // Stores the current values in history\n    this.query().store();\n    // Whenevevr collapsed...\n    if(this.collapsed){\n      // Skips when at the end of the text\n      if(this.end === this.value.length) { return; }\n      // Moves the end side of the selection ahead otherwise\n      this.end = this.next(this.end);\n    } \n    // Removes the selected text\n    return this.ins('');\n  }\n\n  /** Deletes the previous character (Backspace-like) */\n  public backspace(): this {\n    // Stores the current values in history\n    this.query().store();\n    // Whenevevr collapsed...\n    if(this.collapsed) {\n      // Skips when at the start of the text\n      if(this.start <= 0) { return; } \n      // Moves the start side of the selection back otherwise\n      this.start = this.prev(this.start);\n    }\n    // Deletes the selected block \n    return this.ins('');\n  }\n\n  /** Internal insertion/deletion helper */\n  private ins(key: string): this {\n    // Computes the new text value\n    const text = this.value.slice(0, this.start) + key + this.value.slice(this.end);\n    // Computes the new cursor location\n    const caret = this.start + key.length;\n    // Updates the content\n    return this.update(text, caret, caret);\n  }\n\n  /** Updates the value of the text and selection  */\n  private update(value: string, start: number, end: number): this {\n    // Restores the selection\n    this.start = start; this.end = end;\n    // Restores the content\n    this.compile(this._value = value);\n    // Applies the selection back when rendering is done\n    this.focused && this.whenDone( () => this.apply() );\n    // Emits the ne value\n    this.valueChange.emit(this.value);\n    // Returns this for chaining purposes\n    return this;\n  }\n\n  /** Moves the given selection index ahead by one character */\n  private next(pos: number): number { \n    // Moving ahead requires to jump one or more character depending on the letngh of the emoji, if any.\n    // So, search for a match with an emoij, first\n    const match = this.utils.matchEmojiCodes(this.value.slice(pos));\n    // Updates the position accordingly\n    return pos + ((match && match.index === 0) ? match[0].length : 1); \n  }\n\n  /** Moves the given selection index back by one character */\n  private prev(pos: number): number {\n    // Moving the cursor backwards is performed by moving forward from index 0 up until one step before the starting position.\n    // This accounts for the variable length of emoji(s) that can't be successfully matched backwards\n    let offset = 0; let next = 0;\n    while((next = this.next(next)) < pos) {\n      offset = next;\n    }\n    return offset;\n  }\n\n  /** Sorts the selection edges */ \n  private sort(): this {\n    \n    if(this.start <= this.end) { return this; }\n\n    const tmp = this.start; \n    this.start = this.end; \n    this.end = tmp;\n\n    return this;\n  }\n\n  /** Queries the current selection */\n  private query(): this {\n\n    try {\n       // Gets the current document selection first\n      const sel = this.selection;\n      // Computes the start offset from the anchor node\n      this.start = this.offset(sel.anchorNode, sel.anchorOffset);\n      // Computes the end offset from the focus node\n      this.end = sel.isCollapsed ? this.start : this.offset(sel.focusNode, sel.focusOffset);\n    }\n    catch(e) { this.start = this.end = 0; /*console.error(e);*/ }\n    // Sorts the edges and returns this for chaining purposes\n    return this.sort();\n  }\n\n  /** Applies the current selection back to the dom */\n  private apply(): this {\n\n    try {\n      // Gets the current document selection first\n      const sel = this.selection;\n      // Computes the dom node/offset selection pair for the start offset only\n      const [node, offset] = this.range(this.start);\n      // Applies the selection as a collapsed cursor\n      sel.collapse(node, offset);\n      // Check for the seleciton to be applied correctly...\n      if(sel.anchorNode !== node || sel.anchorOffset !== offset) { \n        // ...otherwise schedule a second attempt during the next animation frame update to cope with\n        // browsers (Safari) requiring the dome to be actually rendered for the selection to work\n        animationFrameScheduler.schedule( () => this.apply() ); \n      }\n    }\n    catch(e) { /*console.error(e);*/ }\n    // Returns this for chaining purposes\n    return this;\n  }\n\n  /** Forces the cursor position to fall right before or after the emoji image the user clicked onto */\n  public cursorAt(segment: emSegment, at: 'left'|'right') {\n\n    // Updates the current cursor position based on the emoji image the user clicked onto\n    this.start = this.end = this.abs(segment, at === 'right' ? segment.content.length : 0);\n    this.selection.collapse(...this.range(this.start));\n  }\n\n  /** Selection helper function: Computes the absolute offset from the given segment and relative offset */\n  private abs(segment: emSegment, offset: number = 0): number {\n    // Skips invalid segments\n    if(!segment) { return 0; }\n    // Loops on all the segments\n    for(let seg of this.segments) {\n      // Stops when the requested segment matches\n      if(segment === seg) { break; }\n      // Accumulates the offset by the segment's content length\n      offset += (seg.content || '').length;\n    }\n    // Returns the accumulated offset\n    return offset;\n  }\n\n  /** Computes the absolute text offset from the Node/offset dom selection pair */  \n  private offset(node: Node, offset: number): number {\n    // Short-circuits for invalid nodes\n    if(!node) { return this.value?.length || 0; }\n\n    // Case #1: The given node is a text node, meaning the dom selection is expressed as the text-node and the relative offset whithin such text. We keep the pair unchanged and move forward.\n    if(node.nodeType !== Node.TEXT_NODE) {\n      // Cases #2: The given node isn't a text node (likely is the host container element), meaning the dom selection is expressed as the containing node while the offseet is the index of the selected element.\n\n      // Ensures the given node has chilldren\n      const count = node.childNodes.length;\n      if(!count) { return 0; }\n      // Gets the selected child node (saturating to the last child) and resets the offset for the furtner calculations\n      node = node.childNodes.item(Math.min(offset, count-1));\n      offset = 0;\n    }\n\n    // Loops on the nodes composing the rendered output\n    let child = this.element.firstChild; let text = ''; \n    while(child) {\n      // When we match the requested node, we are done. The offset is calculated as the accumulated text length.\n      if(child == node) { return text.length + offset; } \n      // Appends the text content depending on the node type\n      text += this.nodeText(child);\n      // Skips to the next node\n      child = child.nextSibling;\n    }\n\n    return this.value?.length || 0;\n  }\n\n  /** Computes a Node/offset dom selection pair from an absolute offset */\n  private range(offset: number): [ Node, number ] {\n    // Starts with the first child node of the input's element\n    let node = this.element.firstChild;\n    // Seeks for the relevan node matching the index\n    let count = 0; \n    while(node) {\n      // Gets the node text content, if any \n      const text = this.nodeText(node);\n      // When the offset fits within the node we are done\n      if(offset <= text.length) { \n\n         // Case #1: When the matching node is a text node...\n        if(node.nodeType === Node.TEXT_NODE) {\n          // Returns the text node kind of selection with the content based offset\n          return [ node, offset ];\n        }\n\n        // Case #2: We must be at the IMG, so, return the element offset instead\n        return [ this.element, count + 1 ];\n      }\n      // Decreses the absolute offset\n      offset -= text.length;\n      // Counts the number of child nodes otherwise (including comments)\n      count++;\n      // Goes to the next sibling\n      node = node.nextSibling;\n    }\n\n    // Case #3: No matches found, return a zero based offset\n    return [ this.element, 0 ]\n  }\n\n  /** Returns the text associated with the given node */\n  private nodeText(node: Node): string {\n          \n    switch(node.nodeType) {\n\n      // The value of the tetxt node\n      case Node.TEXT_NODE:\n      return node.nodeValue;\n      break;\n\n      // The alt of an image element\n      case Node.ELEMENT_NODE:\n      switch((node as Element).tagName) {\n\n        case 'IMG':\n        return (node as HTMLImageElement).alt || '';\n        break;\n      }\n    }\n    return '';\n  }\n\n  /********** HISTORY UNDO/REDO ***********/\n\n  private store$ = new Subject<{ value: string, selection: [number, number] }>();\n  private history: { value: string, selection: [number, number] }[];\n  private timeIndex: number;\n  private sub$: Subscription;\n\n  /** Clears the history buffer */\n  private clearHistory(): this {\n    // Unsubscribe the previous subscription, if any\n    if(!!this.sub$) { this.sub$.unsubscribe(); }\n    // Initializes the history buffer\n    this.timeIndex = 0;\n    this.history = [];\n    return this;\n  }\n\n  /** Initilizes the history buffer */\n  private enableHistory(debounce: number = 1000, limit: number = 128): this {\n    // Clears the history buffer\n    this.clearHistory();\n    // Builts up the stream optimizing the amout of snapshot saved in the history \n    this.sub$ = this.store$.pipe( \n      // Append a time interval between storing emissions\n      timeInterval(), \n      // Filters requests coming too fast (within 'debounce time')\n      filter( payload => this.history.length === 0 || payload.interval > debounce), \n      // Gets a snapshot of the value with updated selection\n      map( payload => payload.value ),\n    // Subscribes the history save handler\n    ).subscribe( snapshot => {\n      // Wipes the further future undoed snapshots since they are now \n      if(this.timeIndex > 0) {\n        // Save the last snapshot wiping the further future undoed once\n        this.history.splice(0, this.timeIndex + 1, snapshot);\n        // Resets the time index\n        this.timeIndex = 0;\n      }\n      // Saves the last snapshot in the history\n      else { this.history.unshift(snapshot); }\n      // Removes the oldest snapshot when exceeeding the history limit\n      if(this.history.length > limit) { this.history.pop(); }\n    });\n\n    return this;\n  }\n\n  /** Stores a snapshot in the undo/redo history buffer \n   * @param force (option) when true forces the storage unconditionally.\n   * Storage will be performed conditionally to the time elapsed since \n   * the last modification otherwise.\n  */\n  private store(force?: boolean): this { \n\n    if(!!force) {\n      // Pushes a snapshot into the history buffer unconditionally\n      this.history.unshift({ value: this.value, selection: [this.start, this.end] }); \n      return this; \n    }\n    // Pushes the document for conditional history save\n    this.store$.next({ value: this.value, selection: [this.start, this.end] });\n    return this; \n  }\n \n  /** Returns true whenever the last modifications can be undone */\n  private get undoable(): boolean { return this.history.length > 0 && this.timeIndex < this.history.length - (!!this.timeIndex ? 1 : 0); }\n\n  /** Undoes the latest changes. It requires enableHistory() to be called */\n  private undo(): this {\n    // Stops undoing when history is finished\n    if(!this.undoable) { return this; }\n    // Saves the present moment to be restored eventually\n    if(this.timeIndex === 0) { this.store(true); }\n    // Gets the latest snapshot from the history\n    const snapshot = this.history[++this.timeIndex];\n    // Reloads the snapshot's content restoring the selection too\n    return this.update(snapshot.value, ...snapshot.selection);\n  }\n\n  /** Returns true whenever the last undone modifications can be redone */\n  private get redoable(): boolean { return this.history.length > 0 && this.timeIndex > 0; }\n\n  /** Redoes the last undone modifications. It requires enableHistory() to be called */\n  private redo(): this {\n    // Stops redoing when back to the present\n    if(!this.redoable) { return this; }\n    // Gets the previous snapshot from the history\n    const snapshot = this.history[--this.timeIndex];\n    // Removes the newest snapshot when back to the present\n    if(this.timeIndex === 0) { this.history.shift(); }\n    // Reloads the snapshot's content restoring the selection too\n    return this.update(snapshot.value, ...snapshot.selection);\n  }\n}\n","<!-- Renders the compiled segments -->\n<ng-container *ngFor=\"let segment of segments; trackBy: trackByFn\">\n  \n  <ng-container [ngSwitch]=\"segment.type\">\n\n    <!-- Renders the emoji as an image -->\n    <img *ngSwitchCase=\"'emoji'\" draggable=\"false\" [wm-emoji]=\"segment.content\" (hit)=\"cursorAt(segment, $event)\"/>\n\n    <!-- Renders the text node -->\n    <ng-container *ngSwitchDefault>{{ segment.content || '\\n' }}</ng-container>\n\n  </ng-container>\n\n</ng-container>","export * from './emoji-material.directive';\nexport * from './emoji-material.module';","export * from './textarea-newline.directive';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmojiImageModule } from '@wizdm/emoji/image';\nimport { EmojiInput } from './emoji-input.component';\nimport { EmojiControl } from './emoji-control.directive';\n\n@NgModule({\n  imports: [ CommonModule, EmojiImageModule ],\n  declarations: [ EmojiInput, EmojiControl ],\n  exports: [ EmojiInput, EmojiControl ]\n})\nexport class EmojiInputModule { }","export * from './emoji-control.directive';\nexport * from './emoji-input.component';\nexport * from './emoji-input.module';","import { Directive, forwardRef, Optional, Self } from '@angular/core';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { Observable, merge, fromEvent } from 'rxjs';\nimport { EmojiInput } from '@wizdm/emoji/input';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: 'wm-emoji-input[matEmoji]',\n  exportAs: 'EmojiMaterial',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: forwardRef(() => EmojiMaterial) }\n  ],\n  // We take advantage from mat-input-element styling provided by the mat-form-field contaienr\n  host: { \"class\": \"mat-input-element\" }\n})\nexport class EmojiMaterial implements MatFormFieldControl<any> {\n\n  /** Stream that emits whenever the state of the control changes such that the parent `MatFormField` needs to run change detection. */\n  readonly stateChanges: Observable<void>;\n\n  /** Gets the NgControl for this control or null. */\n  constructor(@Optional() private formField: MatFormField, @Optional() @Self() readonly ngControl: NgControl, private input: EmojiInput) {\n\n    if(!formField) {\n      throw new Error(\"matEmoji directive is ment to be used within a mat-form-field component!\");\n    }\n\n    this.stateChanges = merge<void>(\n\n      fromEvent(this.input.element, 'blur'),\n      this.input.valueChange\n    );    \n  }\n\n  /** The value of the control. */\n  get value(): any | null { return this.input.value; };\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  get placeholder(): string { return this.input.placeholder; };\n\n  /** Whether the control is focused. */\n  get focused(): boolean { return this.input.focused; }\n\n  /** Whether the control is empty. */\n  get empty(): boolean { return !this.input.value; }\n\n  /** Whether the control is disabled. */\n  get disabled(): boolean { \n\n    if(this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }    \n    return this.input.disabled; \n  }\n\n  /** Whether the control is required. */\n  get required(): boolean { return this.input.required; }\n\n  /** Whether the `MatFormField` label should try to float. */\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  /** Whether the control is in an error state. */\n  get errorState(): boolean { return !!this.ngControl && !!this.ngControl.errors; }\n\n  /** Sets the list of element IDs that currently describe this control. */\n  setDescribedByIds(ids: string[]): void { }\n\n  /** Handles a click on the control's container. */\n  onContainerClick(event: MouseEvent): void {\n    this.input.focus();\n  }\n}","import { Directive, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: 'textarea[newline]'\n})\nexport class TextareaNewline {\n\n  /** Selects the newline mode. \n   * - None: enter does nothig. \n   * - Always: enter always inserts a new line. \n   * - Shift: enter inserts newline in conjunction with the shift key only */\n  @Input() newline: 'none'|'always'|'shift' = 'always';\n\n  /** Intercepts the keydown event to customize the textarea behavior */\n  @HostListener('keydown', ['$event']) keyDown(ev: KeyboardEvent) {\n\n    // Prevents the default behavior according to the newline input value\n    switch(ev.code === 'Enter' ? this.newline : 'always') {\n\n      case 'none':\n      return false;\n      \n      case 'shift':\n      return ev.shiftKey;\n    }\n\n    return true;\n  }\n\n}\n","export * from './lib/emoji-keyboard.component';\nexport * from './lib/emoji-keyboard.module';\nexport * from './lib/emoji-keys';","import { Directive, ElementRef, Inject, Optional, Self, Output, EventEmitter, HostListener } from '@angular/core';\nimport { EmojiInput } from '@wizdm/emoji/input';\nimport { DOCUMENT } from '@angular/common'; \n\n\n/** Typing In Adapter for texarea and EmojiInput */\n@Directive({\n  selector: 'textarea[typein], wm-emoji-input[typein]'\n})\nexport class TypeinAdapter {\n\n  constructor(@Inject(DOCUMENT) private document: Document, private elref: ElementRef, @Optional() @Self() private emoji: EmojiInput) {}\n\n  /** The host element */\n  private get element(): HTMLElement { return this.elref.nativeElement; }\n\n  /** The host element as a textarea */\n  private get textarea(): HTMLTextAreaElement { \n    // Assert the element is a texarea\n    if(this.element.tagName !== 'TEXTAREA') { throw new Error('This element expected to be a textarea!'); }\n    // Return the element as a textarea\n    return this.element as HTMLTextAreaElement;\n  }\n\n  /** True whenever the element has focus */\n  private get hasFocus(): boolean { return this.element === this.document.activeElement; }\n\n  /** Returns the input value */\n  private get value(): string {\n    return (this.emoji || this.textarea).value;\n  }\n\n  private ensureFocus() {\n    // Do nothing whenever the elment already has focus\n    if(this.hasFocus) { return; }\n    // Focuses the element\n    this.element.focus(); \n    // Moves the selection at the end of the current text\n    if(this.emoji) { this.emoji.select(this.value.length); }\n    else { this.textarea.selectionStart = this.textarea.selectionEnd = this.value.length; }\n  }\n\n  // Hooks on the input event (textarea only)\n  @HostListener('input', ['event$']) onInput(ev: InputEvent) {\n    // Redirects the textarea oninput event to the valueChange\n    this.valueChange.emit(this.textarea.value); \n  }\n\n  /** Emits for valua changes */\n  @Output() valueChange = new EventEmitter<string>();\n\n  /** Types the given text in the textarea/emoji-input at the current cursor position */\n  public typein(key: string) {\n    // Ensure the input has focus\n    this.ensureFocus();\n    // Redirects the input to the EmojiInput.insert()\n    if(this.emoji) { this.emoji.insert(key); }\n    else {\n      // Insert the given text into the textarea\n      this.textarea.setRangeText(key, this.textarea.selectionStart, this.textarea.selectionEnd, 'end');\n      // Force the new value emission since there's no input event triggering\n      this.valueChange.emit(this.textarea.value);\n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { EmojiKeyboardComponent } from './emoji-keyboard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDividerModule\n  ],\n  declarations: [ EmojiKeyboardComponent ],\n  exports: [ EmojiKeyboardComponent ]\n})\nexport class EmojiKeyboardModule { }","import { NgModule } from '@angular/core';\nimport { EmojiMaterial } from './emoji-material.directive';\n\n@NgModule({\n  declarations: [ EmojiMaterial ],\n  exports: [ EmojiMaterial ]\n})\nexport class EmojiMaterialModule { }","import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Directive, OnDestroy, forwardRef } from '@angular/core';\nimport { EmojiInput } from '../input/emoji-input.component';\nimport { Observable, Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Bridges the EmojiInput with the Angular's form API implementing a ControlValueAccessor\n */\n@Directive({\n  selector: 'wm-emoji-input[ngModel], wm-emoji-input[formControl], wm-emoji-input[formControlName]',\n  exportAs: 'EmojiControl',\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => EmojiControl), multi: true }\n  ]\n})\nexport class EmojiControl implements OnDestroy, ControlValueAccessor {\n\n  private change$: Observable<string>;\n  private blur$: Observable<void>;\n  private dispose$ = new Subject();\n\n  constructor(readonly input: EmojiInput) { \n    // Creates an observable from the input's element blur event for further use \n    this.blur$ = fromEvent<void>(input.element, 'blur').pipe( takeUntil(this.dispose$) );\n    // Creates an observable from the input valueChange event for further use \n    this.change$ = input.valueChange.pipe( takeUntil(this.dispose$) );\n  }\n\n  /** Called by the forms API to write to the view when programmatic changes from model to view are requested */\n  writeValue(value: any): void {\n\n    //if(typeof value === 'string') {\n    this.input.value = value;\n    //}\n  }  \n\n  /** Registers a callback function that is called when the control's value changes in the UI */\n  registerOnChange(fn: (_:any) => void): void {\n\n    this.change$.subscribe( value => fn(value) );\n  }\n\n  /** Registers a callback function is called by the forms API on initialization to update the form model on blur. */\n  registerOnTouched(fn: () => void): void {\n\n    this.blur$.subscribe( () => fn() );\n  }\n\n  /** \n   * Function that is called by the forms API when the control status changes to or from 'DISABLED'. \n   * Depending on the status, it enables or disables the appropriate DOM element. \n   */\n  setDisabledState(disabled: boolean): void {\n\n    this.input.disabled = disabled;\n  }\n\n  // Disposes of the observables on destroy\n  ngOnDestroy() {\n    this.dispose$.next();\n    this.dispose$.complete();\n  }\n}","import { NgModule } from '@angular/core';\nimport { TextareaNewline } from './textarea-newline';\nimport { TypeinAdapter } from './typein-adapter';\n\n@NgModule({\n  imports: [ ],\n  declarations: [ TextareaNewline, TypeinAdapter ],\n  exports: [ TextareaNewline, TypeinAdapter ]\n})\nexport class TextareaModule { }\n","import { InjectionToken } from '@angular/core';\n\nexport type EmojiGroups = 'recently_used'|'smileys_and_people'|'animals_and_nature'|'food_and_drink'|'travel_and_places'|'activities'|'objects'|'symbols'|'flags';\n\nexport interface EmojiGroup {\n\n  id: EmojiGroups;\n  name: string;\n  icon: string;\n  keys: string[];\n\n};\n\nexport const EMOJI_KEYS = new InjectionToken<EmojiGroup[]>('wizdm.emoji.keys', {\n  providedIn: 'root',\n  factory: () => [\n  {\n    id: \"smileys_and_people\",\n    name: \"Smileys & People\",\n    icon: \"sentiment_satisfied_alt\",\n    keys: [\"😀\",\"😃\",\"😄\",\"😁\",\"😆\",\"😅\",\"🤣\",\"😂\",\"🙂\",\"🙃\",\"😉\",\"😊\",\"😇\",\"🥰\",\"😍\",\"🤩\",\"😘\",\"😗\",\"😚\",\"😙\",\"😋\",\"😛\",\"😜\",\"🤪\",\"😝\",\"🤑\",\"🤗\",\"🤭\",\"🤫\",\"🤔\",\"🤐\",\"🤨\",\"😐\",\"😑\",\"😶\",\"😏\",\"😒\",\"🙄\",\"😬\",\"🤥\",\"😌\",\"😔\",\"😪\",\"🤤\",\"😴\",\"😷\",\"🤒\",\"🤕\",\"🤢\",\"🤮\",\"🤧\",\"🥵\",\"🥶\",\"🥴\",\"😵\",\"🤯\",\"🤠\",\"🥳\",\"😎\",\"🤓\",\"🧐\",\"😕\",\"😟\",\"🙁\",\"😮\",\"😯\",\"😲\",\"😳\",\"🥺\",\"😦\",\"😧\",\"😨\",\"😰\",\"😥\",\"😢\",\"😭\",\"😱\",\"😖\",\"😣\",\"😞\",\"😓\",\"😩\",\"😫\",\"🥱\",\"😤\",\"😡\",\"😠\",\"🤬\",\"😈\",\"👿\",\"💀\",\"☠️\",\"💩\",\"🤡\",\"👹\",\"👺\",\"👻\",\"👽\",\"👾\",\"🤖\",\"😺\",\"😸\",\"😹\",\"😻\",\"😼\",\"😽\",\"🙀\",\"😿\",\"😾\",\"🙈\",\"🙉\",\"🙊\",\"💋\",\"💌\",\"💘\",\"💝\",\"💖\",\"💗\",\"💓\",\"💞\",\"💕\",\"💟\",\"❣️\",\"💔\",\"❤️\",\"🧡\",\"💛\",\"💚\",\"💙\",\"💜\",\"🤎\",\"🖤\",\"🤍\",\"💯\",\"💢\",\"💥\",\"💫\",\"💦\",\"💨\",\"🕳️\",\"💣\",\"💬\",\"👁️‍🗨️\",\"🗨️\",\"🗯️\",\"💭\",\"💤\",\"👋\",\"🤚\",\"🖐️\",\"✋\",\"🖖\",\"👌\",\"🤏\",\"✌️\",\"🤞\",\"🤟\",\"🤘\",\"🤙\",\"👈\",\"👉\",\"👆\",\"🖕\",\"👇\",\"☝️\",\"👍\",\"👎\",\"✊\",\"👊\",\"🤛\",\"🤜\",\"👏\",\"🙌\",\"👐\",\"🤲\",\"🤝\",\"🙏\",\"✍️\",\"💅\",\"🤳\",\"💪\",\"🦾\",\"🦿\",\"🦵\",\"🦶\",\"👂\",\"🦻\",\"👃\",\"🧠\",\"🦷\",\"🦴\",\"👀\",\"👁️\",\"👅\",\"👄\",\"👶\",\"🧒\",\"👦\",\"👧\",\"🧑\",\"👱\",\"👨\",\"🧔\",\"👨‍🦰\",\"👨‍🦱\",\"👨‍🦳\",\"👨‍🦲\",\"👩\",\"👩‍🦰\",\"🧑‍🦰\",\"👩‍🦱\",\"🧑‍🦱\",\"👩‍🦳\",\"🧑‍🦳\",\"👩‍🦲\",\"🧑‍🦲\",\"👱‍♀️\",\"👱‍♂️\",\"🧓\",\"👴\",\"👵\",\"🙍\",\"🙍‍♂️\",\"🙍‍♀️\",\"🙎\",\"🙎‍♂️\",\"🙎‍♀️\",\"🙅\",\"🙅‍♂️\",\"🙅‍♀️\",\"🙆\",\"🙆‍♂️\",\"🙆‍♀️\",\"💁\",\"💁‍♂️\",\"💁‍♀️\",\"🙋\",\"🙋‍♂️\",\"🙋‍♀️\",\"🧏\",\"🧏‍♂️\",\"🧏‍♀️\",\"🙇\",\"🙇‍♂️\",\"🙇‍♀️\",\"🤦\",\"🤦‍♂️\",\"🤦‍♀️\",\"🤷\",\"🤷‍♂️\",\"🤷‍♀️\",\"🧑‍⚕️\",\"👨‍⚕️\",\"👩‍⚕️\",\"🧑‍🎓\",\"👨‍🎓\",\"👩‍🎓\",\"🧑‍🏫\",\"👨‍🏫\",\"👩‍🏫\",\"🧑‍⚖️\",\"👨‍⚖️\",\"👩‍⚖️\",\"🧑‍🌾\",\"👨‍🌾\",\"👩‍🌾\",\"🧑‍🍳\",\"👨‍🍳\",\"👩‍🍳\",\"🧑‍🔧\",\"👨‍🔧\",\"👩‍🔧\",\"🧑‍🏭\",\"👨‍🏭\",\"👩‍🏭\",\"🧑‍💼\",\"👨‍💼\",\"👩‍💼\",\"🧑‍🔬\",\"👨‍🔬\",\"👩‍🔬\",\"🧑‍💻\",\"👨‍💻\",\"👩‍💻\",\"🧑‍🎤\",\"👨‍🎤\",\"👩‍🎤\",\"🧑‍🎨\",\"👨‍🎨\",\"👩‍🎨\",\"🧑‍✈️\",\"👨‍✈️\",\"👩‍✈️\",\"🧑‍🚀\",\"👨‍🚀\",\"👩‍🚀\",\"🧑‍🚒\",\"👨‍🚒\",\"👩‍🚒\",\"👮\",\"👮‍♂️\",\"👮‍♀️\",\"🕵️\",\"🕵️‍♂️\",\"🕵️‍♀️\",\"💂\",\"💂‍♂️\",\"💂‍♀️\",\"👷\",\"👷‍♂️\",\"👷‍♀️\",\"🤴\",\"👸\",\"👳\",\"👳‍♂️\",\"👳‍♀️\",\"👲\",\"🧕\",\"🤵\",\"👰\",\"🤰\",\"🤱\",\"👼\",\"🎅\",\"🤶\",\"🦸\",\"🦸‍♂️\",\"🦸‍♀️\",\"🦹\",\"🦹‍♂️\",\"🦹‍♀️\",\"🧙\",\"🧙‍♂️\",\"🧙‍♀️\",\"🧚\",\"🧚‍♂️\",\"🧚‍♀️\",\"🧛\",\"🧛‍♂️\",\"🧛‍♀️\",\"🧜\",\"🧜‍♂️\",\"🧜‍♀️\",\"🧝\",\"🧝‍♂️\",\"🧝‍♀️\",\"🧞\",\"🧞‍♂️\",\"🧞‍♀️\",\"🧟\",\"🧟‍♂️\",\"🧟‍♀️\",\"💆\",\"💆‍♂️\",\"💆‍♀️\",\"💇\",\"💇‍♂️\",\"💇‍♀️\",\"🚶\",\"🚶‍♂️\",\"🚶‍♀️\",\"🧍\",\"🧍‍♂️\",\"🧍‍♀️\",\"🧎\",\"🧎‍♂️\",\"🧎‍♀️\",\"🧑‍🦯\",\"👨‍🦯\",\"👩‍🦯\",\"🧑‍🦼\",\"👨‍🦼\",\"👩‍🦼\",\"🧑‍🦽\",\"👨‍🦽\",\"👩‍🦽\",\"🏃\",\"🏃‍♂️\",\"🏃‍♀️\",\"💃\",\"🕺\",\"🕴️\",\"👯\",\"👯‍♂️\",\"👯‍♀️\",\"🧖\",\"🧖‍♂️\",\"🧖‍♀️\",\"🧗\",\"🧗‍♂️\",\"🧗‍♀️\",\"🤺\",\"🏇\",\"⛷️\",\"🏂\",\"🏌️\",\"🏌️‍♂️\",\"🏌️‍♀️\",\"🏄\",\"🏄‍♂️\",\"🏄‍♀️\",\"🚣\",\"🚣‍♂️\",\"🚣‍♀️\",\"🏊\",\"🏊‍♂️\",\"🏊‍♀️\",\"⛹️\",\"⛹️‍♂️\",\"⛹️‍♀️\",\"🏋️\",\"🏋️‍♂️\",\"🏋️‍♀️\",\"🚴\",\"🚴‍♂️\",\"🚴‍♀️\",\"🚵\",\"🚵‍♂️\",\"🚵‍♀️\",\"🤸\",\"🤸‍♂️\",\"🤸‍♀️\",\"🤼\",\"🤼‍♂️\",\"🤼‍♀️\",\"🤽\",\"🤽‍♂️\",\"🤽‍♀️\",\"🤾\",\"🤾‍♂️\",\"🤾‍♀️\",\"🤹\",\"🤹‍♂️\",\"🤹‍♀️\",\"🧘\",\"🧘‍♂️\",\"🧘‍♀️\",\"🛀\",\"🛌\",\"🧑‍🤝‍🧑\",\"👭\",\"👫\",\"👬\",\"💏\",\"👩‍❤️‍💋‍👨\",\"👨‍❤️‍💋‍👨\",\"👩‍❤️‍💋‍👩\",\"💑\",\"👩‍❤️‍👨\",\"👨‍❤️‍👨\",\"👩‍❤️‍👩\",\"👪\",\"👨‍👩‍👦\",\"👨‍👩‍👧\",\"👨‍👩‍👧‍👦\",\"👨‍👩‍👦‍👦\",\"👨‍👩‍👧‍👧\",\"👨‍👨‍👦\",\"👨‍👨‍👧\",\"👨‍👨‍👧‍👦\",\"👨‍👨‍👦‍👦\",\"👨‍👨‍👧‍👧\",\"👩‍👩‍👦\",\"👩‍👩‍👧\",\"👩‍👩‍👧‍👦\",\"👩‍👩‍👦‍👦\",\"👩‍👩‍👧‍👧\",\"👨‍👦\",\"👨‍👦‍👦\",\"👨‍👧\",\"👨‍👧‍👦\",\"👨‍👧‍👧\",\"👩‍👦\",\"👩‍👦‍👦\",\"👩‍👧\",\"👩‍👧‍👦\",\"👩‍👧‍👧\",\"🗣️\",\"👤\",\"👥\",\"👣\"]\n  },\n  {\n    id: \"animals_and_nature\",\n    name: \"Animals & Nature\",\n    icon: \"pets\",\n    keys: [\"🐵\",\"🐒\",\"🦍\",\"🦧\",\"🐶\",\"🐕\",\"🦮\",\"🐕‍🦺\",\"🐩\",\"🐺\",\"🦊\",\"🦝\",\"🐱\",\"🐈\",\"🦁\",\"🐯\",\"🐅\",\"🐆\",\"🐴\",\"🐎\",\"🦄\",\"🦓\",\"🦌\",\"🐮\",\"🐂\",\"🐃\",\"🐄\",\"🐷\",\"🐖\",\"🐗\",\"🐽\",\"🐏\",\"🐑\",\"🐐\",\"🐪\",\"🐫\",\"🦙\",\"🦒\",\"🐘\",\"🦏\",\"🦛\",\"🐭\",\"🐁\",\"🐀\",\"🐹\",\"🐰\",\"🐇\",\"🐿️\",\"🦔\",\"🦇\",\"🐻\",\"🐨\",\"🐼\",\"🦥\",\"🦦\",\"🦨\",\"🦘\",\"🦡\",\"🐾\",\"🦃\",\"🐔\",\"🐓\",\"🐣\",\"🐤\",\"🐥\",\"🐦\",\"🐧\",\"🕊️\",\"🦅\",\"🦆\",\"🦢\",\"🦉\",\"🦩\",\"🦚\",\"🦜\",\"🐸\",\"🐊\",\"🐢\",\"🦎\",\"🐍\",\"🐲\",\"🐉\",\"🦕\",\"🦖\",\"🐳\",\"🐋\",\"🐬\",\"🐟\",\"🐠\",\"🐡\",\"🦈\",\"🐙\",\"🐚\",\"🐌\",\"🦋\",\"🐛\",\"🐜\",\"🐝\",\"🐞\",\"🦗\",\"🕷️\",\"🕸️\",\"🦂\",\"🦟\",\"🦠\",\"💐\",\"🌸\",\"💮\",\"🏵️\",\"🌹\",\"🥀\",\"🌺\",\"🌻\",\"🌼\",\"🌷\",\"🌱\",\"🌲\",\"🌳\",\"🌴\",\"🌵\",\"🌾\",\"🌿\",\"☘️\",\"🍀\",\"🍁\",\"🍂\",\"🍃\"]\n  },\n  {\n    id: \"food_and_drink\",\n    name: \"Food & Drink\",\n    icon: \"fastfood\",\n    keys: [\"🍇\",\"🍈\",\"🍉\",\"🍊\",\"🍋\",\"🍌\",\"🍍\",\"🥭\",\"🍎\",\"🍏\",\"🍐\",\"🍑\",\"🍒\",\"🍓\",\"🥝\",\"🍅\",\"🥥\",\"🥑\",\"🍆\",\"🥔\",\"🥕\",\"🌽\",\"🌶️\",\"🥒\",\"🥬\",\"🥦\",\"🧄\",\"🧅\",\"🍄\",\"🥜\",\"🌰\",\"🍞\",\"🥐\",\"🥖\",\"🥨\",\"🥯\",\"🥞\",\"🧇\",\"🧀\",\"🍖\",\"🍗\",\"🥩\",\"🥓\",\"🍔\",\"🍟\",\"🍕\",\"🌭\",\"🥪\",\"🌮\",\"🌯\",\"🥙\",\"🧆\",\"🥚\",\"🍳\",\"🥘\",\"🍲\",\"🥣\",\"🥗\",\"🍿\",\"🧈\",\"🧂\",\"🥫\",\"🍱\",\"🍘\",\"🍙\",\"🍚\",\"🍛\",\"🍜\",\"🍝\",\"🍠\",\"🍢\",\"🍣\",\"🍤\",\"🍥\",\"🥮\",\"🍡\",\"🥟\",\"🥠\",\"🥡\",\"🦀\",\"🦞\",\"🦐\",\"🦑\",\"🦪\",\"🍦\",\"🍧\",\"🍨\",\"🍩\",\"🍪\",\"🎂\",\"🍰\",\"🧁\",\"🥧\",\"🍫\",\"🍬\",\"🍭\",\"🍮\",\"🍯\",\"🍼\",\"🥛\",\"☕\",\"🍵\",\"🍶\",\"🍾\",\"🍷\",\"🍸\",\"🍹\",\"🍺\",\"🍻\",\"🥂\",\"🥃\",\"🥤\",\"🧃\",\"🧉\",\"🧊\",\"🥢\",\"🍽️\",\"🍴\",\"🥄\",\"🔪\",\"🏺\"]\n  },\n  {\n    id: \"travel_and_places\",\n    name: \"Travel & Places\",\n    icon: \"beach_access\",\n    keys: [\"🌍\",\"🌎\",\"🌏\",\"🌐\",\"🗺️\",\"🗾\",\"🧭\",\"🏔️\",\"⛰️\",\"🌋\",\"🗻\",\"🏕️\",\"🏖️\",\"🏜️\",\"🏝️\",\"🏞️\",\"🏟️\",\"🏛️\",\"🏗️\",\"🧱\",\"🏘️\",\"🏚️\",\"🏠\",\"🏡\",\"🏢\",\"🏣\",\"🏤\",\"🏥\",\"🏦\",\"🏨\",\"🏩\",\"🏪\",\"🏫\",\"🏬\",\"🏭\",\"🏯\",\"🏰\",\"💒\",\"🗼\",\"🗽\",\"⛪\",\"🕌\",\"🛕\",\"🕍\",\"⛩️\",\"🕋\",\"⛲\",\"⛺\",\"🌁\",\"🌃\",\"🏙️\",\"🌄\",\"🌅\",\"🌆\",\"🌇\",\"🌉\",\"♨️\",\"🎠\",\"🎡\",\"🎢\",\"💈\",\"🎪\",\"🚂\",\"🚃\",\"🚄\",\"🚅\",\"🚆\",\"🚇\",\"🚈\",\"🚉\",\"🚊\",\"🚝\",\"🚞\",\"🚋\",\"🚌\",\"🚍\",\"🚎\",\"🚐\",\"🚑\",\"🚒\",\"🚓\",\"🚔\",\"🚕\",\"🚖\",\"🚗\",\"🚘\",\"🚙\",\"🚚\",\"🚛\",\"🚜\",\"🏎️\",\"🏍️\",\"🛵\",\"🦽\",\"🦼\",\"🛺\",\"🚲\",\"🛴\",\"🛹\",\"🚏\",\"🛣️\",\"🛤️\",\"🛢️\",\"⛽\",\"🚨\",\"🚥\",\"🚦\",\"🛑\",\"🚧\",\"⚓\",\"⛵\",\"🛶\",\"🚤\",\"🛳️\",\"⛴️\",\"🛥️\",\"🚢\",\"✈️\",\"🛩️\",\"🛫\",\"🛬\",\"🪂\",\"💺\",\"🚁\",\"🚟\",\"🚠\",\"🚡\",\"🛰️\",\"🚀\",\"🛸\",\"🛎️\",\"🧳\",\"⌛\",\"⏳\",\"⌚\",\"⏰\",\"⏱️\",\"⏲️\",\"🕰️\",\"🕛\",\"🕧\",\"🕐\",\"🕜\",\"🕑\",\"🕝\",\"🕒\",\"🕞\",\"🕓\",\"🕟\",\"🕔\",\"🕠\",\"🕕\",\"🕡\",\"🕖\",\"🕢\",\"🕗\",\"🕣\",\"🕘\",\"🕤\",\"🕙\",\"🕥\",\"🕚\",\"🕦\",\"🌑\",\"🌒\",\"🌓\",\"🌔\",\"🌕\",\"🌖\",\"🌗\",\"🌘\",\"🌙\",\"🌚\",\"🌛\",\"🌜\",\"🌡️\",\"☀️\",\"🌝\",\"🌞\",\"🪐\",\"⭐\",\"🌟\",\"🌠\",\"🌌\",\"☁️\",\"⛅\",\"⛈️\",\"🌤️\",\"🌥️\",\"🌦️\",\"🌧️\",\"🌨️\",\"🌩️\",\"🌪️\",\"🌫️\",\"🌬️\",\"🌀\",\"🌈\",\"🌂\",\"☂️\",\"☔\",\"⛱️\",\"⚡\",\"❄️\",\"☃️\",\"⛄\",\"☄️\",\"🔥\",\"💧\",\"🌊\"]\n  },\n  {\n    id: \"activities\",\n    name: \"Activities\",\n    icon: \"emoji_events\",\n    keys: [\"🎃\",\"🎄\",\"🎆\",\"🎇\",\"🧨\",\"✨\",\"🎈\",\"🎉\",\"🎊\",\"🎋\",\"🎍\",\"🎎\",\"🎏\",\"🎐\",\"🎑\",\"🧧\",\"🎀\",\"🎁\",\"🎗️\",\"🎟️\",\"🎫\",\"🎖️\",\"🏆\",\"🏅\",\"🥇\",\"🥈\",\"🥉\",\"⚽\",\"⚾\",\"🥎\",\"🏀\",\"🏐\",\"🏈\",\"🏉\",\"🎾\",\"🥏\",\"🎳\",\"🏏\",\"🏑\",\"🏒\",\"🥍\",\"🏓\",\"🏸\",\"🥊\",\"🥋\",\"🥅\",\"⛳\",\"⛸️\",\"🎣\",\"🤿\",\"🎽\",\"🎿\",\"🛷\",\"🥌\",\"🎯\",\"🪀\",\"🪁\",\"🎱\",\"🔮\",\"🧿\",\"🎮\",\"🕹️\",\"🎰\",\"🎲\",\"🧩\",\"🧸\",\"♠️\",\"♥️\",\"♦️\",\"♣️\",\"♟️\",\"🃏\",\"🀄\",\"🎴\",\"🎭\",\"🖼️\",\"🎨\",\"🧵\",\"🪡\",\"🧶\"]\n  },\n  {\n    id: \"objects\",\n    name: \"Objects\",\n    icon: \"emoji_objects\",\n    keys: [\"👓\",\"🕶️\",\"🥽\",\"🥼\",\"🦺\",\"👔\",\"👕\",\"👖\",\"🧣\",\"🧤\",\"🧥\",\"🧦\",\"👗\",\"👘\",\"🥻\",\"🩱\",\"🩲\",\"🩳\",\"👙\",\"👚\",\"👛\",\"👜\",\"👝\",\"🛍️\",\"🎒\",\"👞\",\"👟\",\"🥾\",\"🥿\",\"👠\",\"👡\",\"🩰\",\"👢\",\"👑\",\"👒\",\"🎩\",\"🎓\",\"🧢\",\"⛑️\",\"📿\",\"💄\",\"💍\",\"💎\",\"🔇\",\"🔈\",\"🔉\",\"🔊\",\"📢\",\"📣\",\"📯\",\"🔔\",\"🔕\",\"🎼\",\"🎵\",\"🎶\",\"🎙️\",\"🎚️\",\"🎛️\",\"🎤\",\"🎧\",\"📻\",\"🎷\",\"🎸\",\"🎹\",\"🎺\",\"🎻\",\"🪕\",\"🥁\",\"📱\",\"📲\",\"☎️\",\"📞\",\"📟\",\"📠\",\"🔋\",\"🔌\",\"💻\",\"🖥️\",\"🖨️\",\"⌨️\",\"🖱️\",\"🖲️\",\"💽\",\"💾\",\"💿\",\"📀\",\"🧮\",\"🎥\",\"🎞️\",\"📽️\",\"🎬\",\"📺\",\"📷\",\"📸\",\"📹\",\"📼\",\"🔍\",\"🔎\",\"🕯️\",\"💡\",\"🔦\",\"🏮\",\"🪔\",\"📔\",\"📕\",\"📖\",\"📗\",\"📘\",\"📙\",\"📚\",\"📓\",\"📒\",\"📃\",\"📜\",\"📄\",\"📰\",\"🗞️\",\"📑\",\"🔖\",\"🏷️\",\"💰\",\"💴\",\"💵\",\"💶\",\"💷\",\"💸\",\"💳\",\"🧾\",\"💹\",\"✉️\",\"📧\",\"📨\",\"📩\",\"📤\",\"📥\",\"📦\",\"📫\",\"📪\",\"📬\",\"📭\",\"📮\",\"🗳️\",\"✏️\",\"✒️\",\"🖋️\",\"🖊️\",\"🖌️\",\"🖍️\",\"📝\",\"💼\",\"📁\",\"📂\",\"🗂️\",\"📅\",\"📆\",\"🗒️\",\"🗓️\",\"📇\",\"📈\",\"📉\",\"📊\",\"📋\",\"📌\",\"📍\",\"📎\",\"🖇️\",\"📏\",\"📐\",\"✂️\",\"🗃️\",\"🗄️\",\"🗑️\",\"🔒\",\"🔓\",\"🔏\",\"🔐\",\"🔑\",\"🗝️\",\"🔨\",\"🪓\",\"⛏️\",\"⚒️\",\"🛠️\",\"🗡️\",\"⚔️\",\"🔫\",\"🏹\",\"🛡️\",\"🔧\",\"🔩\",\"⚙️\",\"🗜️\",\"⚖️\",\"🦯\",\"🔗\",\"⛓️\",\"🧰\",\"🧲\",\"⚗️\",\"🧪\",\"🧫\",\"🧬\",\"🔬\",\"🔭\",\"📡\",\"💉\",\"🩸\",\"💊\",\"🩹\",\"🩺\",\"🚪\",\"🛏️\",\"🛋️\",\"🪑\",\"🚽\",\"🚿\",\"🛁\",\"🪒\",\"🧴\",\"🧷\",\"🧹\",\"🧺\",\"🧻\",\"🧼\",\"🧽\",\"🧯\",\"🛒\",\"🚬\",\"⚰️\",\"⚱️\",\"🗿\"]\n  },\n  {\n    id: \"symbols\",\n    name: \"Symbols\",\n    icon: \"emoji_symbols\",\n    keys: [\"🏧\",\"🚮\",\"🚰\",\"♿\",\"🚹\",\"🚺\",\"🚻\",\"🚼\",\"🚾\",\"🛂\",\"🛃\",\"🛄\",\"🛅\",\"⚠️\",\"🚸\",\"⛔\",\"🚫\",\"🚳\",\"🚭\",\"🚯\",\"🚱\",\"🚷\",\"📵\",\"🔞\",\"☢️\",\"☣️\",\"⬆️\",\"↗️\",\"➡️\",\"↘️\",\"⬇️\",\"↙️\",\"⬅️\",\"↖️\",\"↕️\",\"↔️\",\"↩️\",\"↪️\",\"⤴️\",\"⤵️\",\"🔃\",\"🔄\",\"🔙\",\"🔚\",\"🔛\",\"🔜\",\"🔝\",\"🛐\",\"⚛️\",\"🕉️\",\"✡️\",\"☸️\",\"☯️\",\"✝️\",\"☦️\",\"☪️\",\"☮️\",\"🕎\",\"🔯\",\"♈\",\"♉\",\"♊\",\"♋\",\"♌\",\"♍\",\"♎\",\"♏\",\"♐\",\"♑\",\"♒\",\"♓\",\"⛎\",\"🔀\",\"🔁\",\"🔂\",\"▶️\",\"⏩\",\"⏭️\",\"⏯️\",\"◀️\",\"⏪\",\"⏮️\",\"🔼\",\"⏫\",\"🔽\",\"⏬\",\"⏸️\",\"⏹️\",\"⏺️\",\"⏏️\",\"🎦\",\"🔅\",\"🔆\",\"📶\",\"📳\",\"📴\",\"✖️\",\"➕\",\"➖\",\"➗\",\"♾️\",\"❓\",\"❔\",\"❕\",\"❗\",\"〰️\",\"💱\",\"💲\",\"⚕️\",\"♻️\",\"⚜️\",\"🔱\",\"📛\",\"🔰\",\"⭕\",\"✅\",\"☑️\",\"✔️\",\"❌\",\"❎\",\"➰\",\"➿\",\"〽️\",\"✳️\",\"✴️\",\"❇️\",\"#️⃣\",\"*️⃣\",\"0️⃣\",\"1️⃣\",\"2️⃣\",\"3️⃣\",\"4️⃣\",\"5️⃣\",\"6️⃣\",\"7️⃣\",\"8️⃣\",\"9️⃣\",\"🔟\",\"🔠\",\"🔡\",\"🔢\",\"🔣\",\"🔤\",\"🅰️\",\"🆎\",\"🅱️\",\"🆑\",\"🆒\",\"🆓\",\"ℹ️\",\"🆔\",\"Ⓜ️\",\"🆕\",\"🆖\",\"🅾️\",\"🆗\",\"🅿️\",\"🆘\",\"🆙\",\"🆚\",\"🈁\",\"🈂️\",\"🈷️\",\"🈶\",\"🈯\",\"🉐\",\"🈹\",\"🈚\",\"🈲\",\"🉑\",\"🈸\",\"🈴\",\"🈳\",\"㊗️\",\"㊙️\",\"🈺\",\"🈵\",\"🔴\",\"🟠\",\"🟡\",\"🟢\",\"🔵\",\"🟣\",\"🟤\",\"⚫\",\"⚪\",\"🟥\",\"🟧\",\"🟨\",\"🟩\",\"🟦\",\"🟪\",\"🟫\",\"⬛\",\"⬜\",\"◼️\",\"◻️\",\"◾\",\"◽\",\"▪️\",\"▫️\",\"🔶\",\"🔷\",\"🔸\",\"🔹\",\"🔺\",\"🔻\",\"💠\",\"🔘\",\"🔳\",\"🔲\"]\n  },\n  {\n    id: \"flags\",\n    name: \"Flags\",\n    icon: \"emoji_flags\",\n    keys: [\"🏁\",\"🚩\",\"🎌\",\"🏴\",\"🏳️\",\"🏳️‍🌈\",\"🏴‍☠️\",\"🇦🇨\",\"🇦🇩\",\"🇦🇪\",\"🇦🇫\",\"🇦🇬\",\"🇦🇮\",\"🇦🇱\",\"🇦🇲\",\"🇦🇴\",\"🇦🇶\",\"🇦🇷\",\"🇦🇸\",\"🇦🇹\",\"🇦🇺\",\"🇦🇼\",\"🇦🇽\",\"🇦🇿\",\"🇧🇦\",\"🇧🇧\",\"🇧🇩\",\"🇧🇪\",\"🇧🇫\",\"🇧🇬\",\"🇧🇭\",\"🇧🇮\",\"🇧🇯\",\"🇧🇱\",\"🇧🇲\",\"🇧🇳\",\"🇧🇴\",\"🇧🇶\",\"🇧🇷\",\"🇧🇸\",\"🇧🇹\",\"🇧🇻\",\"🇧🇼\",\"🇧🇾\",\"🇧🇿\",\"🇨🇦\",\"🇨🇨\",\"🇨🇩\",\"🇨🇫\",\"🇨🇬\",\"🇨🇭\",\"🇨🇮\",\"🇨🇰\",\"🇨🇱\",\"🇨🇲\",\"🇨🇳\",\"🇨🇴\",\"🇨🇵\",\"🇨🇷\",\"🇨🇺\",\"🇨🇻\",\"🇨🇼\",\"🇨🇽\",\"🇨🇾\",\"🇨🇿\",\"🇩🇪\",\"🇩🇬\",\"🇩🇯\",\"🇩🇰\",\"🇩🇲\",\"🇩🇴\",\"🇩🇿\",\"🇪🇦\",\"🇪🇨\",\"🇪🇪\",\"🇪🇬\",\"🇪🇭\",\"🇪🇷\",\"🇪🇸\",\"🇪🇹\",\"🇪🇺\",\"🇫🇮\",\"🇫🇯\",\"🇫🇰\",\"🇫🇲\",\"🇫🇴\",\"🇫🇷\",\"🇬🇦\",\"🇬🇧\",\"🇬🇩\",\"🇬🇪\",\"🇬🇫\",\"🇬🇬\",\"🇬🇭\",\"🇬🇮\",\"🇬🇱\",\"🇬🇲\",\"🇬🇳\",\"🇬🇵\",\"🇬🇶\",\"🇬🇷\",\"🇬🇸\",\"🇬🇹\",\"🇬🇺\",\"🇬🇼\",\"🇬🇾\",\"🇭🇰\",\"🇭🇲\",\"🇭🇳\",\"🇭🇷\",\"🇭🇹\",\"🇭🇺\",\"🇮🇨\",\"🇮🇩\",\"🇮🇪\",\"🇮🇱\",\"🇮🇲\",\"🇮🇳\",\"🇮🇴\",\"🇮🇶\",\"🇮🇷\",\"🇮🇸\",\"🇮🇹\",\"🇯🇪\",\"🇯🇲\",\"🇯🇴\",\"🇯🇵\",\"🇰🇪\",\"🇰🇬\",\"🇰🇭\",\"🇰🇮\",\"🇰🇲\",\"🇰🇳\",\"🇰🇵\",\"🇰🇷\",\"🇰🇼\",\"🇰🇾\",\"🇰🇿\",\"🇱🇦\",\"🇱🇧\",\"🇱🇨\",\"🇱🇮\",\"🇱🇰\",\"🇱🇷\",\"🇱🇸\",\"🇱🇹\",\"🇱🇺\",\"🇱🇻\",\"🇱🇾\",\"🇲🇦\",\"🇲🇨\",\"🇲🇩\",\"🇲🇪\",\"🇲🇫\",\"🇲🇬\",\"🇲🇭\",\"🇲🇰\",\"🇲🇱\",\"🇲🇲\",\"🇲🇳\",\"🇲🇴\",\"🇲🇵\",\"🇲🇶\",\"🇲🇷\",\"🇲🇸\",\"🇲🇹\",\"🇲🇺\",\"🇲🇻\",\"🇲🇼\",\"🇲🇽\",\"🇲🇾\",\"🇲🇿\",\"🇳🇦\",\"🇳🇨\",\"🇳🇪\",\"🇳🇫\",\"🇳🇬\",\"🇳🇮\",\"🇳🇱\",\"🇳🇴\",\"🇳🇵\",\"🇳🇷\",\"🇳🇺\",\"🇳🇿\",\"🇴🇲\",\"🇵🇦\",\"🇵🇪\",\"🇵🇫\",\"🇵🇬\",\"🇵🇭\",\"🇵🇰\",\"🇵🇱\",\"🇵🇲\",\"🇵🇳\",\"🇵🇷\",\"🇵🇸\",\"🇵🇹\",\"🇵🇼\",\"🇵🇾\",\"🇶🇦\",\"🇷🇪\",\"🇷🇴\",\"🇷🇸\",\"🇷🇺\",\"🇷🇼\",\"🇸🇦\",\"🇸🇧\",\"🇸🇨\",\"🇸🇩\",\"🇸🇪\",\"🇸🇬\",\"🇸🇭\",\"🇸🇮\",\"🇸🇯\",\"🇸🇰\",\"🇸🇱\",\"🇸🇲\",\"🇸🇳\",\"🇸🇴\",\"🇸🇷\",\"🇸🇸\",\"🇸🇹\",\"🇸🇻\",\"🇸🇽\",\"🇸🇾\",\"🇸🇿\",\"🇹🇦\",\"🇹🇨\",\"🇹🇩\",\"🇹🇫\",\"🇹🇬\",\"🇹🇭\",\"🇹🇯\",\"🇹🇰\",\"🇹🇱\",\"🇹🇲\",\"🇹🇳\",\"🇹🇴\",\"🇹🇷\",\"🇹🇹\",\"🇹🇻\",\"🇹🇼\",\"🇹🇿\",\"🇺🇦\",\"🇺🇬\",\"🇺🇲\",\"🇺🇳\",\"🇺🇸\",\"🇺🇾\",\"🇺🇿\",\"🇻🇦\",\"🇻🇨\",\"🇻🇪\",\"🇻🇬\",\"🇻🇮\",\"🇻🇳\",\"🇻🇺\",\"🇼🇫\",\"🇼🇸\",\"🇽🇰\",\"🇾🇪\",\"🇾🇹\",\"🇿🇦\",\"🇿🇲\",\"🇿🇼\",\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\",\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\",\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\"]\n  }\n]});\n"],"sourceRoot":"webpack:///"}
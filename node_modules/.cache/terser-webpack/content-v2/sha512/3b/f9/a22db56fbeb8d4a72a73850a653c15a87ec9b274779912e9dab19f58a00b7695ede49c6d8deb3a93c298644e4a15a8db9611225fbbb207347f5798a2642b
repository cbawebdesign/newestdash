{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{vyJ5:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"UploadsModule\",function(){return uploads_module_UploadsModule});var common=__webpack_require__(\"SVse\"),flex_layout=__webpack_require__(\"u9T3\"),coercion=__webpack_require__(\"8LU1\"),collections=__webpack_require__(\"CtHx\"),core=__webpack_require__(\"8Y7J\"),bidi=__webpack_require__(\"9gLZ\"),platform=__webpack_require__(\"SCoL\"),scrolling=__webpack_require__(\"7KAL\"),Subject=__webpack_require__(\"XNiG\"),from=__webpack_require__(\"Cfvw\"),BehaviorSubject=__webpack_require__(\"2Vo4\"),isObservable=__webpack_require__(\"7+OI\"),of=__webpack_require__(\"LRne\"),takeUntil=__webpack_require__(\"1G5W\"),take=__webpack_require__(\"IzEk\");const _c0=[[[\"caption\"]],[[\"colgroup\"],[\"col\"]]],_c1=[\"caption\",\"colgroup, col\"];function mixinHasStickyInput(base){return class extends base{constructor(...args){super(...args),this._sticky=!1,this._hasStickyChanged=!1}get sticky(){return this._sticky}set sticky(v){const prevValue=this._sticky;this._sticky=Object(coercion.c)(v),this._hasStickyChanged=prevValue!==this._sticky}hasStickyChanged(){const hasStickyChanged=this._hasStickyChanged;return this._hasStickyChanged=!1,hasStickyChanged}resetStickyChanged(){this._hasStickyChanged=!1}}}const CDK_TABLE=new core.s(\"CDK_TABLE\");let table_CdkCellDef=(()=>{class CdkCellDef{constructor(template){this.template=template}}return CdkCellDef.ɵfac=function(t){return new(t||CdkCellDef)(core.Qb(core.O))},CdkCellDef.ɵdir=core.Lb({type:CdkCellDef,selectors:[[\"\",\"cdkCellDef\",\"\"]]}),CdkCellDef})(),table_CdkHeaderCellDef=(()=>{class CdkHeaderCellDef{constructor(template){this.template=template}}return CdkHeaderCellDef.ɵfac=function(t){return new(t||CdkHeaderCellDef)(core.Qb(core.O))},CdkHeaderCellDef.ɵdir=core.Lb({type:CdkHeaderCellDef,selectors:[[\"\",\"cdkHeaderCellDef\",\"\"]]}),CdkHeaderCellDef})(),table_CdkFooterCellDef=(()=>{class CdkFooterCellDef{constructor(template){this.template=template}}return CdkFooterCellDef.ɵfac=function(t){return new(t||CdkFooterCellDef)(core.Qb(core.O))},CdkFooterCellDef.ɵdir=core.Lb({type:CdkFooterCellDef,selectors:[[\"\",\"cdkFooterCellDef\",\"\"]]}),CdkFooterCellDef})();class CdkColumnDefBase{}const _CdkColumnDefBase=mixinHasStickyInput(CdkColumnDefBase);let table_CdkColumnDef=(()=>{class CdkColumnDef extends _CdkColumnDefBase{constructor(_table){super(),this._table=_table,this._stickyEnd=!1}get name(){return this._name}set name(name){this._setNameInput(name)}get stickyEnd(){return this._stickyEnd}set stickyEnd(v){const prevValue=this._stickyEnd;this._stickyEnd=Object(coercion.c)(v),this._hasStickyChanged=prevValue!==this._stickyEnd}_updateColumnCssClassName(){this._columnCssClassName=[`cdk-column-${this.cssClassFriendlyName}`]}_setNameInput(value){value&&(this._name=value,this.cssClassFriendlyName=value.replace(/[^a-z0-9_-]/gi,\"-\"),this._updateColumnCssClassName())}}return CdkColumnDef.ɵfac=function(t){return new(t||CdkColumnDef)(core.Qb(CDK_TABLE,8))},CdkColumnDef.ɵdir=core.Lb({type:CdkColumnDef,selectors:[[\"\",\"cdkColumnDef\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Jb(dirIndex,table_CdkCellDef,1),core.Jb(dirIndex,table_CdkHeaderCellDef,1),core.Jb(dirIndex,table_CdkFooterCellDef,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx.cell=_t.first),core.uc(_t=core.fc())&&(ctx.headerCell=_t.first),core.uc(_t=core.fc())&&(ctx.footerCell=_t.first)}},inputs:{sticky:\"sticky\",name:[\"cdkColumnDef\",\"name\"],stickyEnd:\"stickyEnd\"},features:[core.Cb([{provide:\"MAT_SORT_HEADER_COLUMN_DEF\",useExisting:CdkColumnDef}]),core.Ab]}),CdkColumnDef})();class BaseCdkCell{constructor(columnDef,elementRef){const classList=elementRef.nativeElement.classList;for(const className of columnDef._columnCssClassName)classList.add(className)}}let table_CdkHeaderCell=(()=>{class CdkHeaderCell extends BaseCdkCell{constructor(columnDef,elementRef){super(columnDef,elementRef)}}return CdkHeaderCell.ɵfac=function(t){return new(t||CdkHeaderCell)(core.Qb(table_CdkColumnDef),core.Qb(core.l))},CdkHeaderCell.ɵdir=core.Lb({type:CdkHeaderCell,selectors:[[\"cdk-header-cell\"],[\"th\",\"cdk-header-cell\",\"\"]],hostAttrs:[\"role\",\"columnheader\",1,\"cdk-header-cell\"],features:[core.Ab]}),CdkHeaderCell})(),table_CdkCell=(()=>{class CdkCell extends BaseCdkCell{constructor(columnDef,elementRef){super(columnDef,elementRef)}}return CdkCell.ɵfac=function(t){return new(t||CdkCell)(core.Qb(table_CdkColumnDef),core.Qb(core.l))},CdkCell.ɵdir=core.Lb({type:CdkCell,selectors:[[\"cdk-cell\"],[\"td\",\"cdk-cell\",\"\"]],hostAttrs:[\"role\",\"gridcell\",1,\"cdk-cell\"],features:[core.Ab]}),CdkCell})();class _Schedule{constructor(){this.tasks=[],this.endTasks=[]}}const _COALESCED_STYLE_SCHEDULER=new core.s(\"_COALESCED_STYLE_SCHEDULER\");let table_CoalescedStyleScheduler=(()=>{class _CoalescedStyleScheduler{constructor(_ngZone){this._ngZone=_ngZone,this._currentSchedule=null,this._destroyed=new Subject.a}schedule(task){this._createScheduleIfNeeded(),this._currentSchedule.tasks.push(task)}scheduleEnd(task){this._createScheduleIfNeeded(),this._currentSchedule.endTasks.push(task)}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete()}_createScheduleIfNeeded(){this._currentSchedule||(this._currentSchedule=new _Schedule,this._getScheduleObservable().pipe(Object(takeUntil.a)(this._destroyed)).subscribe(()=>{for(;this._currentSchedule.tasks.length||this._currentSchedule.endTasks.length;){const schedule=this._currentSchedule;this._currentSchedule=new _Schedule;for(const task of schedule.tasks)task();for(const task of schedule.endTasks)task()}this._currentSchedule=null}))}_getScheduleObservable(){return this._ngZone.isStable?Object(from.a)(Promise.resolve(void 0)):this._ngZone.onStable.pipe(Object(take.a)(1))}}return _CoalescedStyleScheduler.ɵfac=function(t){return new(t||_CoalescedStyleScheduler)(core.ac(core.B))},_CoalescedStyleScheduler.ɵprov=core.Mb({token:_CoalescedStyleScheduler,factory:_CoalescedStyleScheduler.ɵfac}),_CoalescedStyleScheduler})(),table_BaseRowDef=(()=>{class BaseRowDef{constructor(template,_differs){this.template=template,this._differs=_differs}ngOnChanges(changes){if(!this._columnsDiffer){const columns=changes.columns&&changes.columns.currentValue||[];this._columnsDiffer=this._differs.find(columns).create(),this._columnsDiffer.diff(columns)}}getColumnsDiff(){return this._columnsDiffer.diff(this.columns)}extractCellTemplate(column){return this instanceof table_CdkHeaderRowDef?column.headerCell.template:this instanceof table_CdkFooterRowDef?column.footerCell.template:column.cell.template}}return BaseRowDef.ɵfac=function(t){return new(t||BaseRowDef)(core.Qb(core.O),core.Qb(core.u))},BaseRowDef.ɵdir=core.Lb({type:BaseRowDef,features:[core.Bb]}),BaseRowDef})();class CdkHeaderRowDefBase extends table_BaseRowDef{}const _CdkHeaderRowDefBase=mixinHasStickyInput(CdkHeaderRowDefBase);let table_CdkHeaderRowDef=(()=>{class CdkHeaderRowDef extends _CdkHeaderRowDefBase{constructor(template,_differs,_table){super(template,_differs),this._table=_table}ngOnChanges(changes){super.ngOnChanges(changes)}}return CdkHeaderRowDef.ɵfac=function(t){return new(t||CdkHeaderRowDef)(core.Qb(core.O),core.Qb(core.u),core.Qb(CDK_TABLE,8))},CdkHeaderRowDef.ɵdir=core.Lb({type:CdkHeaderRowDef,selectors:[[\"\",\"cdkHeaderRowDef\",\"\"]],inputs:{columns:[\"cdkHeaderRowDef\",\"columns\"],sticky:[\"cdkHeaderRowDefSticky\",\"sticky\"]},features:[core.Ab,core.Bb]}),CdkHeaderRowDef})();class CdkFooterRowDefBase extends table_BaseRowDef{}const _CdkFooterRowDefBase=mixinHasStickyInput(CdkFooterRowDefBase);let table_CdkFooterRowDef=(()=>{class CdkFooterRowDef extends _CdkFooterRowDefBase{constructor(template,_differs,_table){super(template,_differs),this._table=_table}ngOnChanges(changes){super.ngOnChanges(changes)}}return CdkFooterRowDef.ɵfac=function(t){return new(t||CdkFooterRowDef)(core.Qb(core.O),core.Qb(core.u),core.Qb(CDK_TABLE,8))},CdkFooterRowDef.ɵdir=core.Lb({type:CdkFooterRowDef,selectors:[[\"\",\"cdkFooterRowDef\",\"\"]],inputs:{columns:[\"cdkFooterRowDef\",\"columns\"],sticky:[\"cdkFooterRowDefSticky\",\"sticky\"]},features:[core.Ab,core.Bb]}),CdkFooterRowDef})(),table_CdkRowDef=(()=>{class CdkRowDef extends table_BaseRowDef{constructor(template,_differs,_table){super(template,_differs),this._table=_table}}return CdkRowDef.ɵfac=function(t){return new(t||CdkRowDef)(core.Qb(core.O),core.Qb(core.u),core.Qb(CDK_TABLE,8))},CdkRowDef.ɵdir=core.Lb({type:CdkRowDef,selectors:[[\"\",\"cdkRowDef\",\"\"]],inputs:{columns:[\"cdkRowDefColumns\",\"columns\"],when:[\"cdkRowDefWhen\",\"when\"]},features:[core.Ab]}),CdkRowDef})(),table_CdkCellOutlet=(()=>{class CdkCellOutlet{constructor(_viewContainer){this._viewContainer=_viewContainer,CdkCellOutlet.mostRecentCellOutlet=this}ngOnDestroy(){CdkCellOutlet.mostRecentCellOutlet===this&&(CdkCellOutlet.mostRecentCellOutlet=null)}}return CdkCellOutlet.ɵfac=function(t){return new(t||CdkCellOutlet)(core.Qb(core.S))},CdkCellOutlet.ɵdir=core.Lb({type:CdkCellOutlet,selectors:[[\"\",\"cdkCellOutlet\",\"\"]]}),CdkCellOutlet.mostRecentCellOutlet=null,CdkCellOutlet})(),table_CdkHeaderRow=(()=>{class CdkHeaderRow{}return CdkHeaderRow.ɵfac=function(t){return new(t||CdkHeaderRow)},CdkHeaderRow.ɵcmp=core.Kb({type:CdkHeaderRow,selectors:[[\"cdk-header-row\"],[\"tr\",\"cdk-header-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"cdk-header-row\"],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(rf,ctx){1&rf&&core.Sb(0,0)},directives:[table_CdkCellOutlet],encapsulation:2}),CdkHeaderRow})(),table_CdkRow=(()=>{class CdkRow{}return CdkRow.ɵfac=function(t){return new(t||CdkRow)},CdkRow.ɵcmp=core.Kb({type:CdkRow,selectors:[[\"cdk-row\"],[\"tr\",\"cdk-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"cdk-row\"],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(rf,ctx){1&rf&&core.Sb(0,0)},directives:[table_CdkCellOutlet],encapsulation:2}),CdkRow})(),table_CdkNoDataRow=(()=>{class CdkNoDataRow{constructor(templateRef){this.templateRef=templateRef}}return CdkNoDataRow.ɵfac=function(t){return new(t||CdkNoDataRow)(core.Qb(core.O))},CdkNoDataRow.ɵdir=core.Lb({type:CdkNoDataRow,selectors:[[\"ng-template\",\"cdkNoDataRow\",\"\"]]}),CdkNoDataRow})();const STICKY_DIRECTIONS=[\"top\",\"bottom\",\"left\",\"right\"];class StickyStyler{constructor(_isNativeHtmlTable,_stickCellCss,direction,_coalescedStyleScheduler,_isBrowser=!0,_needsPositionStickyOnElement=!0,_positionListener){this._isNativeHtmlTable=_isNativeHtmlTable,this._stickCellCss=_stickCellCss,this.direction=direction,this._coalescedStyleScheduler=_coalescedStyleScheduler,this._isBrowser=_isBrowser,this._needsPositionStickyOnElement=_needsPositionStickyOnElement,this._positionListener=_positionListener,this._cachedCellWidths=[],this._borderCellCss={top:`${_stickCellCss}-border-elem-top`,bottom:`${_stickCellCss}-border-elem-bottom`,left:`${_stickCellCss}-border-elem-left`,right:`${_stickCellCss}-border-elem-right`}}clearStickyPositioning(rows,stickyDirections){const elementsToClear=[];for(const row of rows)if(row.nodeType===row.ELEMENT_NODE){elementsToClear.push(row);for(let i=0;i<row.children.length;i++)elementsToClear.push(row.children[i])}this._scheduleStyleChanges(()=>{for(const element of elementsToClear)this._removeStickyStyle(element,stickyDirections)})}updateStickyColumns(rows,stickyStartStates,stickyEndStates,recalculateCellWidths=!0){if(!rows.length||!this._isBrowser||!stickyStartStates.some(state=>state)&&!stickyEndStates.some(state=>state))return void(this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:[]}),this._positionListener.stickyEndColumnsUpdated({sizes:[]})));const firstRow=rows[0],numCells=firstRow.children.length,cellWidths=this._getCellWidths(firstRow,recalculateCellWidths),startPositions=this._getStickyStartColumnPositions(cellWidths,stickyStartStates),endPositions=this._getStickyEndColumnPositions(cellWidths,stickyEndStates),lastStickyStart=stickyStartStates.lastIndexOf(!0),firstStickyEnd=stickyEndStates.indexOf(!0);this._scheduleStyleChanges(()=>{const isRtl=\"rtl\"===this.direction,start=isRtl?\"right\":\"left\",end=isRtl?\"left\":\"right\";for(const row of rows)for(let i=0;i<numCells;i++){const cell=row.children[i];stickyStartStates[i]&&this._addStickyStyle(cell,start,startPositions[i],i===lastStickyStart),stickyEndStates[i]&&this._addStickyStyle(cell,end,endPositions[i],i===firstStickyEnd)}this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:-1===lastStickyStart?[]:cellWidths.slice(0,lastStickyStart+1).map((width,index)=>stickyStartStates[index]?width:null)}),this._positionListener.stickyEndColumnsUpdated({sizes:-1===firstStickyEnd?[]:cellWidths.slice(firstStickyEnd).map((width,index)=>stickyEndStates[index+firstStickyEnd]?width:null).reverse()}))})}stickRows(rowsToStick,stickyStates,position){if(!this._isBrowser)return;const rows=\"bottom\"===position?rowsToStick.slice().reverse():rowsToStick,states=\"bottom\"===position?stickyStates.slice().reverse():stickyStates,stickyOffsets=[],stickyCellHeights=[],elementsToStick=[];for(let rowIndex=0,stickyOffset=0;rowIndex<rows.length;rowIndex++){if(stickyOffsets[rowIndex]=stickyOffset,!states[rowIndex])continue;const row=rows[rowIndex];elementsToStick[rowIndex]=this._isNativeHtmlTable?Array.from(row.children):[row];const height=row.getBoundingClientRect().height;stickyOffset+=height,stickyCellHeights[rowIndex]=height}const borderedRowIndex=states.lastIndexOf(!0);this._scheduleStyleChanges(()=>{var _a,_b;for(let rowIndex=0;rowIndex<rows.length;rowIndex++){if(!states[rowIndex])continue;const offset=stickyOffsets[rowIndex],isBorderedRowIndex=rowIndex===borderedRowIndex;for(const element of elementsToStick[rowIndex])this._addStickyStyle(element,position,offset,isBorderedRowIndex)}\"top\"===position?null===(_a=this._positionListener)||void 0===_a||_a.stickyHeaderRowsUpdated({sizes:stickyCellHeights,elements:elementsToStick}):null===(_b=this._positionListener)||void 0===_b||_b.stickyFooterRowsUpdated({sizes:stickyCellHeights,elements:elementsToStick})})}updateStickyFooterContainer(tableElement,stickyStates){if(!this._isNativeHtmlTable)return;const tfoot=tableElement.querySelector(\"tfoot\");this._scheduleStyleChanges(()=>{stickyStates.some(state=>!state)?this._removeStickyStyle(tfoot,[\"bottom\"]):this._addStickyStyle(tfoot,\"bottom\",0,!1)})}_removeStickyStyle(element,stickyDirections){for(const dir of stickyDirections)element.style[dir]=\"\",element.classList.remove(this._borderCellCss[dir]);STICKY_DIRECTIONS.some(dir=>-1===stickyDirections.indexOf(dir)&&element.style[dir])?element.style.zIndex=this._getCalculatedZIndex(element):(element.style.zIndex=\"\",this._needsPositionStickyOnElement&&(element.style.position=\"\"),element.classList.remove(this._stickCellCss))}_addStickyStyle(element,dir,dirValue,isBorderElement){element.classList.add(this._stickCellCss),isBorderElement&&element.classList.add(this._borderCellCss[dir]),element.style[dir]=`${dirValue}px`,element.style.zIndex=this._getCalculatedZIndex(element),this._needsPositionStickyOnElement&&(element.style.cssText+=\"position: -webkit-sticky; position: sticky; \")}_getCalculatedZIndex(element){const zIndexIncrements={top:100,bottom:10,left:1,right:1};let zIndex=0;for(const dir of STICKY_DIRECTIONS)element.style[dir]&&(zIndex+=zIndexIncrements[dir]);return zIndex?`${zIndex}`:\"\"}_getCellWidths(row,recalculateCellWidths=!0){if(!recalculateCellWidths&&this._cachedCellWidths.length)return this._cachedCellWidths;const cellWidths=[],firstRowCells=row.children;for(let i=0;i<firstRowCells.length;i++)cellWidths.push(firstRowCells[i].getBoundingClientRect().width);return this._cachedCellWidths=cellWidths,cellWidths}_getStickyStartColumnPositions(widths,stickyStates){const positions=[];let nextPosition=0;for(let i=0;i<widths.length;i++)stickyStates[i]&&(positions[i]=nextPosition,nextPosition+=widths[i]);return positions}_getStickyEndColumnPositions(widths,stickyStates){const positions=[];let nextPosition=0;for(let i=widths.length;i>0;i--)stickyStates[i]&&(positions[i]=nextPosition,nextPosition+=widths[i]);return positions}_scheduleStyleChanges(changes){this._coalescedStyleScheduler?this._coalescedStyleScheduler.schedule(changes):changes()}}const STICKY_POSITIONING_LISTENER=new core.s(\"CDK_SPL\");let table_DataRowOutlet=(()=>{class DataRowOutlet{constructor(viewContainer,elementRef){this.viewContainer=viewContainer,this.elementRef=elementRef}}return DataRowOutlet.ɵfac=function(t){return new(t||DataRowOutlet)(core.Qb(core.S),core.Qb(core.l))},DataRowOutlet.ɵdir=core.Lb({type:DataRowOutlet,selectors:[[\"\",\"rowOutlet\",\"\"]]}),DataRowOutlet})(),table_HeaderRowOutlet=(()=>{class HeaderRowOutlet{constructor(viewContainer,elementRef){this.viewContainer=viewContainer,this.elementRef=elementRef}}return HeaderRowOutlet.ɵfac=function(t){return new(t||HeaderRowOutlet)(core.Qb(core.S),core.Qb(core.l))},HeaderRowOutlet.ɵdir=core.Lb({type:HeaderRowOutlet,selectors:[[\"\",\"headerRowOutlet\",\"\"]]}),HeaderRowOutlet})(),table_FooterRowOutlet=(()=>{class FooterRowOutlet{constructor(viewContainer,elementRef){this.viewContainer=viewContainer,this.elementRef=elementRef}}return FooterRowOutlet.ɵfac=function(t){return new(t||FooterRowOutlet)(core.Qb(core.S),core.Qb(core.l))},FooterRowOutlet.ɵdir=core.Lb({type:FooterRowOutlet,selectors:[[\"\",\"footerRowOutlet\",\"\"]]}),FooterRowOutlet})(),table_NoDataRowOutlet=(()=>{class NoDataRowOutlet{constructor(viewContainer,elementRef){this.viewContainer=viewContainer,this.elementRef=elementRef}}return NoDataRowOutlet.ɵfac=function(t){return new(t||NoDataRowOutlet)(core.Qb(core.S),core.Qb(core.l))},NoDataRowOutlet.ɵdir=core.Lb({type:NoDataRowOutlet,selectors:[[\"\",\"noDataRowOutlet\",\"\"]]}),NoDataRowOutlet})(),table_CdkTable=(()=>{class CdkTable{constructor(_differs,_changeDetectorRef,_elementRef,role,_dir,_document,_platform,_viewRepeater,_coalescedStyleScheduler,_stickyPositioningListener,_viewportRuler){this._differs=_differs,this._changeDetectorRef=_changeDetectorRef,this._elementRef=_elementRef,this._dir=_dir,this._platform=_platform,this._viewRepeater=_viewRepeater,this._coalescedStyleScheduler=_coalescedStyleScheduler,this._stickyPositioningListener=_stickyPositioningListener,this._viewportRuler=_viewportRuler,this._onDestroy=new Subject.a,this._columnDefsByName=new Map,this._customColumnDefs=new Set,this._customRowDefs=new Set,this._customHeaderRowDefs=new Set,this._customFooterRowDefs=new Set,this._headerRowDefChanged=!0,this._footerRowDefChanged=!0,this._stickyColumnStylesNeedReset=!0,this._forceRecalculateCellWidths=!0,this._cachedRenderRowsMap=new Map,this.stickyCssClass=\"cdk-table-sticky\",this.needsPositionStickyOnElement=!0,this._isShowingNoDataRow=!1,this._multiTemplateDataRows=!1,this._fixedLayout=!1,this.viewChange=new BehaviorSubject.a({start:0,end:Number.MAX_VALUE}),role||this._elementRef.nativeElement.setAttribute(\"role\",\"grid\"),this._document=_document,this._isNativeHtmlTable=\"TABLE\"===this._elementRef.nativeElement.nodeName}get trackBy(){return this._trackByFn}set trackBy(fn){this._trackByFn=fn}get dataSource(){return this._dataSource}set dataSource(dataSource){this._dataSource!==dataSource&&this._switchDataSource(dataSource)}get multiTemplateDataRows(){return this._multiTemplateDataRows}set multiTemplateDataRows(v){this._multiTemplateDataRows=Object(coercion.c)(v),this._rowOutlet&&this._rowOutlet.viewContainer.length&&(this._forceRenderDataRows(),this.updateStickyColumnStyles())}get fixedLayout(){return this._fixedLayout}set fixedLayout(v){this._fixedLayout=Object(coercion.c)(v),this._forceRecalculateCellWidths=!0,this._stickyColumnStylesNeedReset=!0}ngOnInit(){this._setupStickyStyler(),this._isNativeHtmlTable&&this._applyNativeTableSections(),this._dataDiffer=this._differs.find([]).create((_i,dataRow)=>this.trackBy?this.trackBy(dataRow.dataIndex,dataRow.data):dataRow),this._viewportRuler&&this._viewportRuler.change().pipe(Object(takeUntil.a)(this._onDestroy)).subscribe(()=>{this._forceRecalculateCellWidths=!0})}ngAfterContentChecked(){this._cacheRowDefs(),this._cacheColumnDefs();const rowDefsChanged=this._renderUpdatedColumns()||this._headerRowDefChanged||this._footerRowDefChanged;this._stickyColumnStylesNeedReset=this._stickyColumnStylesNeedReset||rowDefsChanged,this._forceRecalculateCellWidths=rowDefsChanged,this._headerRowDefChanged&&(this._forceRenderHeaderRows(),this._headerRowDefChanged=!1),this._footerRowDefChanged&&(this._forceRenderFooterRows(),this._footerRowDefChanged=!1),this.dataSource&&this._rowDefs.length>0&&!this._renderChangeSubscription?this._observeRenderChanges():this._stickyColumnStylesNeedReset&&this.updateStickyColumnStyles(),this._checkStickyStates()}ngOnDestroy(){this._rowOutlet.viewContainer.clear(),this._noDataRowOutlet.viewContainer.clear(),this._headerRowOutlet.viewContainer.clear(),this._footerRowOutlet.viewContainer.clear(),this._cachedRenderRowsMap.clear(),this._onDestroy.next(),this._onDestroy.complete(),Object(collections.h)(this.dataSource)&&this.dataSource.disconnect(this)}renderRows(){this._renderRows=this._getAllRenderRows();const changes=this._dataDiffer.diff(this._renderRows);if(!changes)return void this._updateNoDataRow();const viewContainer=this._rowOutlet.viewContainer;this._viewRepeater?this._viewRepeater.applyChanges(changes,viewContainer,(record,_adjustedPreviousIndex,currentIndex)=>this._getEmbeddedViewArgs(record.item,currentIndex),record=>record.item.data,change=>{1===change.operation&&change.context&&this._renderCellTemplateForItem(change.record.item.rowDef,change.context)}):changes.forEachOperation((record,prevIndex,currentIndex)=>{if(null==record.previousIndex){const renderRow=record.item;this._renderRow(this._rowOutlet,renderRow.rowDef,currentIndex,{$implicit:renderRow.data})}else if(null==currentIndex)viewContainer.remove(prevIndex);else{const view=viewContainer.get(prevIndex);viewContainer.move(view,currentIndex)}}),this._updateRowIndexContext(),changes.forEachIdentityChange(record=>{viewContainer.get(record.currentIndex).context.$implicit=record.item.data}),this._updateNoDataRow(),this.updateStickyColumnStyles()}addColumnDef(columnDef){this._customColumnDefs.add(columnDef)}removeColumnDef(columnDef){this._customColumnDefs.delete(columnDef)}addRowDef(rowDef){this._customRowDefs.add(rowDef)}removeRowDef(rowDef){this._customRowDefs.delete(rowDef)}addHeaderRowDef(headerRowDef){this._customHeaderRowDefs.add(headerRowDef),this._headerRowDefChanged=!0}removeHeaderRowDef(headerRowDef){this._customHeaderRowDefs.delete(headerRowDef),this._headerRowDefChanged=!0}addFooterRowDef(footerRowDef){this._customFooterRowDefs.add(footerRowDef),this._footerRowDefChanged=!0}removeFooterRowDef(footerRowDef){this._customFooterRowDefs.delete(footerRowDef),this._footerRowDefChanged=!0}setNoDataRow(noDataRow){this._customNoDataRow=noDataRow}updateStickyHeaderRowStyles(){const headerRows=this._getRenderedRows(this._headerRowOutlet),thead=this._elementRef.nativeElement.querySelector(\"thead\");thead&&(thead.style.display=headerRows.length?\"\":\"none\");const stickyStates=this._headerRowDefs.map(def=>def.sticky);this._stickyStyler.clearStickyPositioning(headerRows,[\"top\"]),this._stickyStyler.stickRows(headerRows,stickyStates,\"top\"),this._headerRowDefs.forEach(def=>def.resetStickyChanged())}updateStickyFooterRowStyles(){const footerRows=this._getRenderedRows(this._footerRowOutlet),tfoot=this._elementRef.nativeElement.querySelector(\"tfoot\");tfoot&&(tfoot.style.display=footerRows.length?\"\":\"none\");const stickyStates=this._footerRowDefs.map(def=>def.sticky);this._stickyStyler.clearStickyPositioning(footerRows,[\"bottom\"]),this._stickyStyler.stickRows(footerRows,stickyStates,\"bottom\"),this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement,stickyStates),this._footerRowDefs.forEach(def=>def.resetStickyChanged())}updateStickyColumnStyles(){const headerRows=this._getRenderedRows(this._headerRowOutlet),dataRows=this._getRenderedRows(this._rowOutlet),footerRows=this._getRenderedRows(this._footerRowOutlet);(this._isNativeHtmlTable&&!this._fixedLayout||this._stickyColumnStylesNeedReset)&&(this._stickyStyler.clearStickyPositioning([...headerRows,...dataRows,...footerRows],[\"left\",\"right\"]),this._stickyColumnStylesNeedReset=!1),headerRows.forEach((headerRow,i)=>{this._addStickyColumnStyles([headerRow],this._headerRowDefs[i])}),this._rowDefs.forEach(rowDef=>{const rows=[];for(let i=0;i<dataRows.length;i++)this._renderRows[i].rowDef===rowDef&&rows.push(dataRows[i]);this._addStickyColumnStyles(rows,rowDef)}),footerRows.forEach((footerRow,i)=>{this._addStickyColumnStyles([footerRow],this._footerRowDefs[i])}),Array.from(this._columnDefsByName.values()).forEach(def=>def.resetStickyChanged())}_getAllRenderRows(){const renderRows=[],prevCachedRenderRows=this._cachedRenderRowsMap;this._cachedRenderRowsMap=new Map;for(let i=0;i<this._data.length;i++){let data=this._data[i];const renderRowsForData=this._getRenderRowsForData(data,i,prevCachedRenderRows.get(data));this._cachedRenderRowsMap.has(data)||this._cachedRenderRowsMap.set(data,new WeakMap);for(let j=0;j<renderRowsForData.length;j++){let renderRow=renderRowsForData[j];const cache=this._cachedRenderRowsMap.get(renderRow.data);cache.has(renderRow.rowDef)?cache.get(renderRow.rowDef).push(renderRow):cache.set(renderRow.rowDef,[renderRow]),renderRows.push(renderRow)}}return renderRows}_getRenderRowsForData(data,dataIndex,cache){return this._getRowDefs(data,dataIndex).map(rowDef=>{const cachedRenderRows=cache&&cache.has(rowDef)?cache.get(rowDef):[];if(cachedRenderRows.length){const dataRow=cachedRenderRows.shift();return dataRow.dataIndex=dataIndex,dataRow}return{data:data,rowDef:rowDef,dataIndex:dataIndex}})}_cacheColumnDefs(){this._columnDefsByName.clear(),mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs),this._customColumnDefs).forEach(columnDef=>{this._columnDefsByName.has(columnDef.name),this._columnDefsByName.set(columnDef.name,columnDef)})}_cacheRowDefs(){this._headerRowDefs=mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs),this._customHeaderRowDefs),this._footerRowDefs=mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs),this._customFooterRowDefs),this._rowDefs=mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs),this._customRowDefs);const defaultRowDefs=this._rowDefs.filter(def=>!def.when);this._defaultRowDef=defaultRowDefs[0]}_renderUpdatedColumns(){const columnsDiffReducer=(acc,def)=>acc||!!def.getColumnsDiff(),dataColumnsChanged=this._rowDefs.reduce(columnsDiffReducer,!1);dataColumnsChanged&&this._forceRenderDataRows();const headerColumnsChanged=this._headerRowDefs.reduce(columnsDiffReducer,!1);headerColumnsChanged&&this._forceRenderHeaderRows();const footerColumnsChanged=this._footerRowDefs.reduce(columnsDiffReducer,!1);return footerColumnsChanged&&this._forceRenderFooterRows(),dataColumnsChanged||headerColumnsChanged||footerColumnsChanged}_switchDataSource(dataSource){this._data=[],Object(collections.h)(this.dataSource)&&this.dataSource.disconnect(this),this._renderChangeSubscription&&(this._renderChangeSubscription.unsubscribe(),this._renderChangeSubscription=null),dataSource||(this._dataDiffer&&this._dataDiffer.diff([]),this._rowOutlet.viewContainer.clear()),this._dataSource=dataSource}_observeRenderChanges(){if(!this.dataSource)return;let dataStream;Object(collections.h)(this.dataSource)?dataStream=this.dataSource.connect(this):Object(isObservable.a)(this.dataSource)?dataStream=this.dataSource:Array.isArray(this.dataSource)&&(dataStream=Object(of.a)(this.dataSource)),this._renderChangeSubscription=dataStream.pipe(Object(takeUntil.a)(this._onDestroy)).subscribe(data=>{this._data=data||[],this.renderRows()})}_forceRenderHeaderRows(){this._headerRowOutlet.viewContainer.length>0&&this._headerRowOutlet.viewContainer.clear(),this._headerRowDefs.forEach((def,i)=>this._renderRow(this._headerRowOutlet,def,i)),this.updateStickyHeaderRowStyles()}_forceRenderFooterRows(){this._footerRowOutlet.viewContainer.length>0&&this._footerRowOutlet.viewContainer.clear(),this._footerRowDefs.forEach((def,i)=>this._renderRow(this._footerRowOutlet,def,i)),this.updateStickyFooterRowStyles()}_addStickyColumnStyles(rows,rowDef){const columnDefs=Array.from(rowDef.columns||[]).map(columnName=>this._columnDefsByName.get(columnName)),stickyStartStates=columnDefs.map(columnDef=>columnDef.sticky),stickyEndStates=columnDefs.map(columnDef=>columnDef.stickyEnd);this._stickyStyler.updateStickyColumns(rows,stickyStartStates,stickyEndStates,!this._fixedLayout||this._forceRecalculateCellWidths)}_getRenderedRows(rowOutlet){const renderedRows=[];for(let i=0;i<rowOutlet.viewContainer.length;i++){const viewRef=rowOutlet.viewContainer.get(i);renderedRows.push(viewRef.rootNodes[0])}return renderedRows}_getRowDefs(data,dataIndex){if(1==this._rowDefs.length)return[this._rowDefs[0]];let rowDefs=[];if(this.multiTemplateDataRows)rowDefs=this._rowDefs.filter(def=>!def.when||def.when(dataIndex,data));else{let rowDef=this._rowDefs.find(def=>def.when&&def.when(dataIndex,data))||this._defaultRowDef;rowDef&&rowDefs.push(rowDef)}return rowDefs}_getEmbeddedViewArgs(renderRow,index){return{templateRef:renderRow.rowDef.template,context:{$implicit:renderRow.data},index:index}}_renderRow(outlet,rowDef,index,context={}){const view=outlet.viewContainer.createEmbeddedView(rowDef.template,context,index);return this._renderCellTemplateForItem(rowDef,context),view}_renderCellTemplateForItem(rowDef,context){for(let cellTemplate of this._getCellTemplates(rowDef))table_CdkCellOutlet.mostRecentCellOutlet&&table_CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate,context);this._changeDetectorRef.markForCheck()}_updateRowIndexContext(){const viewContainer=this._rowOutlet.viewContainer;for(let renderIndex=0,count=viewContainer.length;renderIndex<count;renderIndex++){const context=viewContainer.get(renderIndex).context;context.count=count,context.first=0===renderIndex,context.last=renderIndex===count-1,context.even=renderIndex%2==0,context.odd=!context.even,this.multiTemplateDataRows?(context.dataIndex=this._renderRows[renderIndex].dataIndex,context.renderIndex=renderIndex):context.index=this._renderRows[renderIndex].dataIndex}}_getCellTemplates(rowDef){return rowDef&&rowDef.columns?Array.from(rowDef.columns,columnId=>{const column=this._columnDefsByName.get(columnId);return rowDef.extractCellTemplate(column)}):[]}_applyNativeTableSections(){const documentFragment=this._document.createDocumentFragment(),sections=[{tag:\"thead\",outlets:[this._headerRowOutlet]},{tag:\"tbody\",outlets:[this._rowOutlet,this._noDataRowOutlet]},{tag:\"tfoot\",outlets:[this._footerRowOutlet]}];for(const section of sections){const element=this._document.createElement(section.tag);element.setAttribute(\"role\",\"rowgroup\");for(const outlet of section.outlets)element.appendChild(outlet.elementRef.nativeElement);documentFragment.appendChild(element)}this._elementRef.nativeElement.appendChild(documentFragment)}_forceRenderDataRows(){this._dataDiffer.diff([]),this._rowOutlet.viewContainer.clear(),this.renderRows()}_checkStickyStates(){const stickyCheckReducer=(acc,d)=>acc||d.hasStickyChanged();this._headerRowDefs.reduce(stickyCheckReducer,!1)&&this.updateStickyHeaderRowStyles(),this._footerRowDefs.reduce(stickyCheckReducer,!1)&&this.updateStickyFooterRowStyles(),Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer,!1)&&(this._stickyColumnStylesNeedReset=!0,this.updateStickyColumnStyles())}_setupStickyStyler(){this._stickyStyler=new StickyStyler(this._isNativeHtmlTable,this.stickyCssClass,this._dir?this._dir.value:\"ltr\",this._coalescedStyleScheduler,this._platform.isBrowser,this.needsPositionStickyOnElement,this._stickyPositioningListener),(this._dir?this._dir.change:Object(of.a)()).pipe(Object(takeUntil.a)(this._onDestroy)).subscribe(value=>{this._stickyStyler.direction=value,this.updateStickyColumnStyles()})}_getOwnDefs(items){return items.filter(item=>!item._table||item._table===this)}_updateNoDataRow(){const noDataRow=this._customNoDataRow||this._noDataRow;if(noDataRow){const shouldShow=0===this._rowOutlet.viewContainer.length;if(shouldShow!==this._isShowingNoDataRow){const container=this._noDataRowOutlet.viewContainer;shouldShow?container.createEmbeddedView(noDataRow.templateRef):container.clear(),this._isShowingNoDataRow=shouldShow}}}}return CdkTable.ɵfac=function(t){return new(t||CdkTable)(core.Qb(core.u),core.Qb(core.h),core.Qb(core.l),core.bc(\"role\"),core.Qb(bidi.b,8),core.Qb(common.d),core.Qb(platform.a),core.Qb(collections.g,8),core.Qb(_COALESCED_STYLE_SCHEDULER,8),core.Qb(STICKY_POSITIONING_LISTENER,12),core.Qb(scrolling.h,8))},CdkTable.ɵcmp=core.Kb({type:CdkTable,selectors:[[\"cdk-table\"],[\"table\",\"cdk-table\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Jb(dirIndex,table_CdkNoDataRow,1),core.Jb(dirIndex,table_CdkColumnDef,1),core.Jb(dirIndex,table_CdkRowDef,1),core.Jb(dirIndex,table_CdkHeaderRowDef,1),core.Jb(dirIndex,table_CdkFooterRowDef,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._noDataRow=_t.first),core.uc(_t=core.fc())&&(ctx._contentColumnDefs=_t),core.uc(_t=core.fc())&&(ctx._contentRowDefs=_t),core.uc(_t=core.fc())&&(ctx._contentHeaderRowDefs=_t),core.uc(_t=core.fc())&&(ctx._contentFooterRowDefs=_t)}},viewQuery:function(rf,ctx){if(1&rf&&(core.Lc(table_DataRowOutlet,3),core.Lc(table_HeaderRowOutlet,3),core.Lc(table_FooterRowOutlet,3),core.Lc(table_NoDataRowOutlet,3)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._rowOutlet=_t.first),core.uc(_t=core.fc())&&(ctx._headerRowOutlet=_t.first),core.uc(_t=core.fc())&&(ctx._footerRowOutlet=_t.first),core.uc(_t=core.fc())&&(ctx._noDataRowOutlet=_t.first)}},hostAttrs:[1,\"cdk-table\"],hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Ib(\"cdk-table-fixed-layout\",ctx.fixedLayout)},inputs:{trackBy:\"trackBy\",dataSource:\"dataSource\",multiTemplateDataRows:\"multiTemplateDataRows\",fixedLayout:\"fixedLayout\"},exportAs:[\"cdkTable\"],features:[core.Cb([{provide:CDK_TABLE,useExisting:CdkTable},{provide:collections.g,useClass:collections.e},{provide:_COALESCED_STYLE_SCHEDULER,useClass:table_CoalescedStyleScheduler},{provide:STICKY_POSITIONING_LISTENER,useValue:null}])],ngContentSelectors:_c1,decls:6,vars:0,consts:[[\"headerRowOutlet\",\"\"],[\"rowOutlet\",\"\"],[\"noDataRowOutlet\",\"\"],[\"footerRowOutlet\",\"\"]],template:function(rf,ctx){1&rf&&(core.oc(_c0),core.nc(0),core.nc(1,1),core.Sb(2,0),core.Sb(3,1),core.Sb(4,2),core.Sb(5,3))},directives:[table_HeaderRowOutlet,table_DataRowOutlet,table_NoDataRowOutlet,table_FooterRowOutlet],styles:[\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],encapsulation:2}),CdkTable})();function mergeArrayAndSet(array,set){return array.concat(Array.from(set))}let table_CdkTableModule=(()=>{class CdkTableModule{}return CdkTableModule.ɵmod=core.Ob({type:CdkTableModule}),CdkTableModule.ɵinj=core.Nb({factory:function(t){return new(t||CdkTableModule)},imports:[[scrolling.g]]}),CdkTableModule})();var fesm2015_core=__webpack_require__(\"UhP/\"),merge=__webpack_require__(\"VRyK\"),combineLatest=__webpack_require__(\"itXk\"),map=__webpack_require__(\"lJxs\");const table_c0=[[[\"caption\"]],[[\"colgroup\"],[\"col\"]]],table_c1=[\"caption\",\"colgroup, col\"];let table_MatTable=(()=>{class MatTable extends table_CdkTable{constructor(){super(...arguments),this.stickyCssClass=\"mat-table-sticky\",this.needsPositionStickyOnElement=!1}}return MatTable.ɵfac=function(t){return ɵMatTable_BaseFactory(t||MatTable)},MatTable.ɵcmp=core.Kb({type:MatTable,selectors:[[\"mat-table\"],[\"table\",\"mat-table\",\"\"]],hostAttrs:[1,\"mat-table\"],hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Ib(\"mat-table-fixed-layout\",ctx.fixedLayout)},exportAs:[\"matTable\"],features:[core.Cb([{provide:collections.g,useClass:collections.e},{provide:table_CdkTable,useExisting:MatTable},{provide:CDK_TABLE,useExisting:MatTable},{provide:_COALESCED_STYLE_SCHEDULER,useClass:table_CoalescedStyleScheduler}]),core.Ab],ngContentSelectors:table_c1,decls:6,vars:0,consts:[[\"headerRowOutlet\",\"\"],[\"rowOutlet\",\"\"],[\"noDataRowOutlet\",\"\"],[\"footerRowOutlet\",\"\"]],template:function(rf,ctx){1&rf&&(core.oc(table_c0),core.nc(0),core.nc(1,1),core.Sb(2,0),core.Sb(3,1),core.Sb(4,2),core.Sb(5,3))},directives:[table_HeaderRowOutlet,table_DataRowOutlet,table_NoDataRowOutlet,table_FooterRowOutlet],styles:['mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\"\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n'],encapsulation:2}),MatTable})();const ɵMatTable_BaseFactory=core.Yb(table_MatTable);let table_MatCellDef=(()=>{class MatCellDef extends table_CdkCellDef{}return MatCellDef.ɵfac=function(t){return ɵMatCellDef_BaseFactory(t||MatCellDef)},MatCellDef.ɵdir=core.Lb({type:MatCellDef,selectors:[[\"\",\"matCellDef\",\"\"]],features:[core.Cb([{provide:table_CdkCellDef,useExisting:MatCellDef}]),core.Ab]}),MatCellDef})();const ɵMatCellDef_BaseFactory=core.Yb(table_MatCellDef);let table_MatHeaderCellDef=(()=>{class MatHeaderCellDef extends table_CdkHeaderCellDef{}return MatHeaderCellDef.ɵfac=function(t){return ɵMatHeaderCellDef_BaseFactory(t||MatHeaderCellDef)},MatHeaderCellDef.ɵdir=core.Lb({type:MatHeaderCellDef,selectors:[[\"\",\"matHeaderCellDef\",\"\"]],features:[core.Cb([{provide:table_CdkHeaderCellDef,useExisting:MatHeaderCellDef}]),core.Ab]}),MatHeaderCellDef})();const ɵMatHeaderCellDef_BaseFactory=core.Yb(table_MatHeaderCellDef);let table_MatColumnDef=(()=>{class MatColumnDef extends table_CdkColumnDef{get name(){return this._name}set name(name){this._setNameInput(name)}_updateColumnCssClassName(){super._updateColumnCssClassName(),this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`)}}return MatColumnDef.ɵfac=function(t){return ɵMatColumnDef_BaseFactory(t||MatColumnDef)},MatColumnDef.ɵdir=core.Lb({type:MatColumnDef,selectors:[[\"\",\"matColumnDef\",\"\"]],inputs:{sticky:\"sticky\",name:[\"matColumnDef\",\"name\"]},features:[core.Cb([{provide:table_CdkColumnDef,useExisting:MatColumnDef},{provide:\"MAT_SORT_HEADER_COLUMN_DEF\",useExisting:MatColumnDef}]),core.Ab]}),MatColumnDef})();const ɵMatColumnDef_BaseFactory=core.Yb(table_MatColumnDef);let table_MatHeaderCell=(()=>{class MatHeaderCell extends table_CdkHeaderCell{}return MatHeaderCell.ɵfac=function(t){return ɵMatHeaderCell_BaseFactory(t||MatHeaderCell)},MatHeaderCell.ɵdir=core.Lb({type:MatHeaderCell,selectors:[[\"mat-header-cell\"],[\"th\",\"mat-header-cell\",\"\"]],hostAttrs:[\"role\",\"columnheader\",1,\"mat-header-cell\"],features:[core.Ab]}),MatHeaderCell})();const ɵMatHeaderCell_BaseFactory=core.Yb(table_MatHeaderCell);let table_MatCell=(()=>{class MatCell extends table_CdkCell{}return MatCell.ɵfac=function(t){return ɵMatCell_BaseFactory(t||MatCell)},MatCell.ɵdir=core.Lb({type:MatCell,selectors:[[\"mat-cell\"],[\"td\",\"mat-cell\",\"\"]],hostAttrs:[\"role\",\"gridcell\",1,\"mat-cell\"],features:[core.Ab]}),MatCell})();const ɵMatCell_BaseFactory=core.Yb(table_MatCell);let table_MatHeaderRowDef=(()=>{class MatHeaderRowDef extends table_CdkHeaderRowDef{}return MatHeaderRowDef.ɵfac=function(t){return ɵMatHeaderRowDef_BaseFactory(t||MatHeaderRowDef)},MatHeaderRowDef.ɵdir=core.Lb({type:MatHeaderRowDef,selectors:[[\"\",\"matHeaderRowDef\",\"\"]],inputs:{columns:[\"matHeaderRowDef\",\"columns\"],sticky:[\"matHeaderRowDefSticky\",\"sticky\"]},features:[core.Cb([{provide:table_CdkHeaderRowDef,useExisting:MatHeaderRowDef}]),core.Ab]}),MatHeaderRowDef})();const ɵMatHeaderRowDef_BaseFactory=core.Yb(table_MatHeaderRowDef);let table_MatRowDef=(()=>{class MatRowDef extends table_CdkRowDef{}return MatRowDef.ɵfac=function(t){return ɵMatRowDef_BaseFactory(t||MatRowDef)},MatRowDef.ɵdir=core.Lb({type:MatRowDef,selectors:[[\"\",\"matRowDef\",\"\"]],inputs:{columns:[\"matRowDefColumns\",\"columns\"],when:[\"matRowDefWhen\",\"when\"]},features:[core.Cb([{provide:table_CdkRowDef,useExisting:MatRowDef}]),core.Ab]}),MatRowDef})();const ɵMatRowDef_BaseFactory=core.Yb(table_MatRowDef);let table_MatHeaderRow=(()=>{class MatHeaderRow extends table_CdkHeaderRow{}return MatHeaderRow.ɵfac=function(t){return ɵMatHeaderRow_BaseFactory(t||MatHeaderRow)},MatHeaderRow.ɵcmp=core.Kb({type:MatHeaderRow,selectors:[[\"mat-header-row\"],[\"tr\",\"mat-header-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"mat-header-row\"],exportAs:[\"matHeaderRow\"],features:[core.Cb([{provide:table_CdkHeaderRow,useExisting:MatHeaderRow}]),core.Ab],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(rf,ctx){1&rf&&core.Sb(0,0)},directives:[table_CdkCellOutlet],encapsulation:2}),MatHeaderRow})();const ɵMatHeaderRow_BaseFactory=core.Yb(table_MatHeaderRow);let table_MatRow=(()=>{class MatRow extends table_CdkRow{}return MatRow.ɵfac=function(t){return ɵMatRow_BaseFactory(t||MatRow)},MatRow.ɵcmp=core.Kb({type:MatRow,selectors:[[\"mat-row\"],[\"tr\",\"mat-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"mat-row\"],exportAs:[\"matRow\"],features:[core.Cb([{provide:table_CdkRow,useExisting:MatRow}]),core.Ab],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(rf,ctx){1&rf&&core.Sb(0,0)},directives:[table_CdkCellOutlet],encapsulation:2}),MatRow})();const ɵMatRow_BaseFactory=core.Yb(table_MatRow);let table_MatTableModule=(()=>{class MatTableModule{}return MatTableModule.ɵmod=core.Ob({type:MatTableModule}),MatTableModule.ɵinj=core.Nb({factory:function(t){return new(t||MatTableModule)},imports:[[table_CdkTableModule,fesm2015_core.j],fesm2015_core.j]}),MatTableModule})();var keycodes=__webpack_require__(\"Ht+U\"),animations=__webpack_require__(\"GS7A\"),a11y=__webpack_require__(\"YEUz\");const sort_c0=[\"mat-sort-header\",\"\"];function MatSortHeader_div_3_Template(rf,ctx){if(1&rf){const _r2=core.Xb();core.Wb(0,\"div\",3),core.ec(\"@arrowPosition.start\",function(){return core.yc(_r2),core.ic()._disableViewStateAnimation=!0})(\"@arrowPosition.done\",function(){return core.yc(_r2),core.ic()._disableViewStateAnimation=!1}),core.Rb(1,\"div\",4),core.Wb(2,\"div\",5),core.Rb(3,\"div\",6),core.Rb(4,\"div\",7),core.Rb(5,\"div\",8),core.Vb(),core.Vb()}if(2&rf){const ctx_r0=core.ic();core.pc(\"@arrowOpacity\",ctx_r0._getArrowViewState())(\"@arrowPosition\",ctx_r0._getArrowViewState())(\"@allowChildren\",ctx_r0._getArrowDirectionState()),core.Db(2),core.pc(\"@indicator\",ctx_r0._getArrowDirectionState()),core.Db(1),core.pc(\"@leftPointer\",ctx_r0._getArrowDirectionState()),core.Db(1),core.pc(\"@rightPointer\",ctx_r0._getArrowDirectionState())}}const sort_c1=[\"*\"];class MatSortBase{}const _MatSortMixinBase=Object(fesm2015_core.z)(Object(fesm2015_core.x)(MatSortBase));let sort_MatSort=(()=>{class MatSort extends _MatSortMixinBase{constructor(){super(...arguments),this.sortables=new Map,this._stateChanges=new Subject.a,this.start=\"asc\",this._direction=\"\",this.sortChange=new core.o}get direction(){return this._direction}set direction(direction){this._direction=direction}get disableClear(){return this._disableClear}set disableClear(v){this._disableClear=Object(coercion.c)(v)}register(sortable){this.sortables.set(sortable.id,sortable)}deregister(sortable){this.sortables.delete(sortable.id)}sort(sortable){this.active!=sortable.id?(this.active=sortable.id,this.direction=sortable.start?sortable.start:this.start):this.direction=this.getNextSortDirection(sortable),this.sortChange.emit({active:this.active,direction:this.direction})}getNextSortDirection(sortable){if(!sortable)return\"\";let sortDirectionCycle=function(start,disableClear){let sortOrder=[\"asc\",\"desc\"];return\"desc\"==start&&sortOrder.reverse(),disableClear||sortOrder.push(\"\"),sortOrder}(sortable.start||this.start,null!=sortable.disableClear?sortable.disableClear:this.disableClear),nextDirectionIndex=sortDirectionCycle.indexOf(this.direction)+1;return nextDirectionIndex>=sortDirectionCycle.length&&(nextDirectionIndex=0),sortDirectionCycle[nextDirectionIndex]}ngOnInit(){this._markInitialized()}ngOnChanges(){this._stateChanges.next()}ngOnDestroy(){this._stateChanges.complete()}}return MatSort.ɵfac=function(t){return ɵMatSort_BaseFactory(t||MatSort)},MatSort.ɵdir=core.Lb({type:MatSort,selectors:[[\"\",\"matSort\",\"\"]],hostAttrs:[1,\"mat-sort\"],inputs:{disabled:[\"matSortDisabled\",\"disabled\"],start:[\"matSortStart\",\"start\"],direction:[\"matSortDirection\",\"direction\"],disableClear:[\"matSortDisableClear\",\"disableClear\"],active:[\"matSortActive\",\"active\"]},outputs:{sortChange:\"matSortChange\"},exportAs:[\"matSort\"],features:[core.Ab,core.Bb]}),MatSort})();const ɵMatSort_BaseFactory=core.Yb(sort_MatSort),SORT_ANIMATION_TRANSITION=fesm2015_core.b.ENTERING+\" \"+fesm2015_core.a.STANDARD_CURVE,matSortAnimations={indicator:Object(animations.o)(\"indicator\",[Object(animations.l)(\"active-asc, asc\",Object(animations.m)({transform:\"translateY(0px)\"})),Object(animations.l)(\"active-desc, desc\",Object(animations.m)({transform:\"translateY(10px)\"})),Object(animations.n)(\"active-asc <=> active-desc\",Object(animations.e)(SORT_ANIMATION_TRANSITION))]),leftPointer:Object(animations.o)(\"leftPointer\",[Object(animations.l)(\"active-asc, asc\",Object(animations.m)({transform:\"rotate(-45deg)\"})),Object(animations.l)(\"active-desc, desc\",Object(animations.m)({transform:\"rotate(45deg)\"})),Object(animations.n)(\"active-asc <=> active-desc\",Object(animations.e)(SORT_ANIMATION_TRANSITION))]),rightPointer:Object(animations.o)(\"rightPointer\",[Object(animations.l)(\"active-asc, asc\",Object(animations.m)({transform:\"rotate(45deg)\"})),Object(animations.l)(\"active-desc, desc\",Object(animations.m)({transform:\"rotate(-45deg)\"})),Object(animations.n)(\"active-asc <=> active-desc\",Object(animations.e)(SORT_ANIMATION_TRANSITION))]),arrowOpacity:Object(animations.o)(\"arrowOpacity\",[Object(animations.l)(\"desc-to-active, asc-to-active, active\",Object(animations.m)({opacity:1})),Object(animations.l)(\"desc-to-hint, asc-to-hint, hint\",Object(animations.m)({opacity:.54})),Object(animations.l)(\"hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void\",Object(animations.m)({opacity:0})),Object(animations.n)(\"* => asc, * => desc, * => active, * => hint, * => void\",Object(animations.e)(\"0ms\")),Object(animations.n)(\"* <=> *\",Object(animations.e)(SORT_ANIMATION_TRANSITION))]),arrowPosition:Object(animations.o)(\"arrowPosition\",[Object(animations.n)(\"* => desc-to-hint, * => desc-to-active\",Object(animations.e)(SORT_ANIMATION_TRANSITION,Object(animations.h)([Object(animations.m)({transform:\"translateY(-25%)\"}),Object(animations.m)({transform:\"translateY(0)\"})]))),Object(animations.n)(\"* => hint-to-desc, * => active-to-desc\",Object(animations.e)(SORT_ANIMATION_TRANSITION,Object(animations.h)([Object(animations.m)({transform:\"translateY(0)\"}),Object(animations.m)({transform:\"translateY(25%)\"})]))),Object(animations.n)(\"* => asc-to-hint, * => asc-to-active\",Object(animations.e)(SORT_ANIMATION_TRANSITION,Object(animations.h)([Object(animations.m)({transform:\"translateY(25%)\"}),Object(animations.m)({transform:\"translateY(0)\"})]))),Object(animations.n)(\"* => hint-to-asc, * => active-to-asc\",Object(animations.e)(SORT_ANIMATION_TRANSITION,Object(animations.h)([Object(animations.m)({transform:\"translateY(0)\"}),Object(animations.m)({transform:\"translateY(-25%)\"})]))),Object(animations.l)(\"desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active\",Object(animations.m)({transform:\"translateY(0)\"})),Object(animations.l)(\"hint-to-desc, active-to-desc, desc\",Object(animations.m)({transform:\"translateY(-25%)\"})),Object(animations.l)(\"hint-to-asc, active-to-asc, asc\",Object(animations.m)({transform:\"translateY(25%)\"}))]),allowChildren:Object(animations.o)(\"allowChildren\",[Object(animations.n)(\"* <=> *\",[Object(animations.i)(\"@*\",Object(animations.f)(),{optional:!0})])])};let sort_MatSortHeaderIntl=(()=>{class MatSortHeaderIntl{constructor(){this.changes=new Subject.a,this.sortButtonLabel=id=>`Change sorting for ${id}`}}return MatSortHeaderIntl.ɵfac=function(t){return new(t||MatSortHeaderIntl)},MatSortHeaderIntl.ɵprov=Object(core.Mb)({factory:function(){return new MatSortHeaderIntl},token:MatSortHeaderIntl,providedIn:\"root\"}),MatSortHeaderIntl})();const MAT_SORT_HEADER_INTL_PROVIDER={provide:sort_MatSortHeaderIntl,deps:[[new core.C,new core.M,sort_MatSortHeaderIntl]],useFactory:function(parentIntl){return parentIntl||new sort_MatSortHeaderIntl}};class MatSortHeaderBase{}const _MatSortHeaderMixinBase=Object(fesm2015_core.x)(MatSortHeaderBase);let sort_MatSortHeader=(()=>{class MatSortHeader extends _MatSortHeaderMixinBase{constructor(_intl,_changeDetectorRef,_sort,_columnDef,_focusMonitor,_elementRef){super(),this._intl=_intl,this._changeDetectorRef=_changeDetectorRef,this._sort=_sort,this._columnDef=_columnDef,this._focusMonitor=_focusMonitor,this._elementRef=_elementRef,this._showIndicatorHint=!1,this._arrowDirection=\"\",this._disableViewStateAnimation=!1,this.arrowPosition=\"after\",this._rerenderSubscription=Object(merge.a)(_sort.sortChange,_sort._stateChanges,_intl.changes).subscribe(()=>{this._isSorted()&&this._updateArrowDirection(),!this._isSorted()&&this._viewState&&\"active\"===this._viewState.toState&&(this._disableViewStateAnimation=!1,this._setAnimationTransitionState({fromState:\"active\",toState:this._arrowDirection})),_changeDetectorRef.markForCheck()})}get disableClear(){return this._disableClear}set disableClear(v){this._disableClear=Object(coercion.c)(v)}ngOnInit(){!this.id&&this._columnDef&&(this.id=this._columnDef.name),this._updateArrowDirection(),this._setAnimationTransitionState({toState:this._isSorted()?\"active\":this._arrowDirection}),this._sort.register(this)}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(origin=>{const newState=!!origin;newState!==this._showIndicatorHint&&(this._setIndicatorHintVisible(newState),this._changeDetectorRef.markForCheck())})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._sort.deregister(this),this._rerenderSubscription.unsubscribe()}_setIndicatorHintVisible(visible){this._isDisabled()&&visible||(this._showIndicatorHint=visible,this._isSorted()||(this._updateArrowDirection(),this._setAnimationTransitionState(this._showIndicatorHint?{fromState:this._arrowDirection,toState:\"hint\"}:{fromState:\"hint\",toState:this._arrowDirection})))}_setAnimationTransitionState(viewState){this._viewState=viewState,this._disableViewStateAnimation&&(this._viewState={toState:viewState.toState})}_toggleOnInteraction(){this._sort.sort(this),\"hint\"!==this._viewState.toState&&\"active\"!==this._viewState.toState||(this._disableViewStateAnimation=!0);const viewState=this._isSorted()?{fromState:this._arrowDirection,toState:\"active\"}:{fromState:\"active\",toState:this._arrowDirection};this._setAnimationTransitionState(viewState),this._showIndicatorHint=!1}_handleClick(){this._isDisabled()||this._toggleOnInteraction()}_handleKeydown(event){this._isDisabled()||event.keyCode!==keycodes.m&&event.keyCode!==keycodes.e||(event.preventDefault(),this._toggleOnInteraction())}_isSorted(){return this._sort.active==this.id&&(\"asc\"===this._sort.direction||\"desc\"===this._sort.direction)}_getArrowDirectionState(){return`${this._isSorted()?\"active-\":\"\"}${this._arrowDirection}`}_getArrowViewState(){const fromState=this._viewState.fromState;return(fromState?`${fromState}-to-`:\"\")+this._viewState.toState}_updateArrowDirection(){this._arrowDirection=this._isSorted()?this._sort.direction:this.start||this._sort.start}_isDisabled(){return this._sort.disabled||this.disabled}_getAriaSortAttribute(){return this._isSorted()?\"asc\"==this._sort.direction?\"ascending\":\"descending\":\"none\"}_renderArrow(){return!this._isDisabled()||this._isSorted()}}return MatSortHeader.ɵfac=function(t){return new(t||MatSortHeader)(core.Qb(sort_MatSortHeaderIntl),core.Qb(core.h),core.Qb(sort_MatSort,8),core.Qb(\"MAT_SORT_HEADER_COLUMN_DEF\",8),core.Qb(a11y.h),core.Qb(core.l))},MatSortHeader.ɵcmp=core.Kb({type:MatSortHeader,selectors:[[\"\",\"mat-sort-header\",\"\"]],hostAttrs:[1,\"mat-sort-header\"],hostVars:3,hostBindings:function(rf,ctx){1&rf&&core.ec(\"click\",function(){return ctx._handleClick()})(\"keydown\",function($event){return ctx._handleKeydown($event)})(\"mouseenter\",function(){return ctx._setIndicatorHintVisible(!0)})(\"mouseleave\",function(){return ctx._setIndicatorHintVisible(!1)}),2&rf&&(core.Eb(\"aria-sort\",ctx._getAriaSortAttribute()),core.Ib(\"mat-sort-header-disabled\",ctx._isDisabled()))},inputs:{disabled:\"disabled\",arrowPosition:\"arrowPosition\",disableClear:\"disableClear\",id:[\"mat-sort-header\",\"id\"],start:\"start\"},exportAs:[\"matSortHeader\"],features:[core.Ab],attrs:sort_c0,ngContentSelectors:sort_c1,decls:4,vars:6,consts:[[\"role\",\"button\",1,\"mat-sort-header-container\",\"mat-focus-indicator\"],[1,\"mat-sort-header-content\"],[\"class\",\"mat-sort-header-arrow\",4,\"ngIf\"],[1,\"mat-sort-header-arrow\"],[1,\"mat-sort-header-stem\"],[1,\"mat-sort-header-indicator\"],[1,\"mat-sort-header-pointer-left\"],[1,\"mat-sort-header-pointer-right\"],[1,\"mat-sort-header-pointer-middle\"]],template:function(rf,ctx){1&rf&&(core.oc(),core.Wb(0,\"div\",0),core.Wb(1,\"div\",1),core.nc(2),core.Vb(),core.Gc(3,MatSortHeader_div_3_Template,6,6,\"div\",2),core.Vb()),2&rf&&(core.Ib(\"mat-sort-header-sorted\",ctx._isSorted())(\"mat-sort-header-position-before\",\"before\"==ctx.arrowPosition),core.Eb(\"tabindex\",ctx._isDisabled()?null:0),core.Db(3),core.pc(\"ngIf\",ctx._renderArrow()))},directives:[common.m],styles:[\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"],encapsulation:2,data:{animation:[matSortAnimations.indicator,matSortAnimations.leftPointer,matSortAnimations.rightPointer,matSortAnimations.arrowOpacity,matSortAnimations.arrowPosition,matSortAnimations.allowChildren]},changeDetection:0}),MatSortHeader})(),sort_MatSortModule=(()=>{class MatSortModule{}return MatSortModule.ɵmod=core.Ob({type:MatSortModule}),MatSortModule.ɵinj=core.Nb({factory:function(t){return new(t||MatSortModule)},providers:[MAT_SORT_HEADER_INTL_PROVIDER],imports:[[common.c,fesm2015_core.j]]}),MatSortModule})();var divider=__webpack_require__(\"BSbQ\"),icon=__webpack_require__(\"Tj54\"),fesm2015_button=__webpack_require__(\"Dxy4\"),fesm2015_forms=__webpack_require__(\"s7LF\"),fesm2015_animations=__webpack_require__(\"omvX\"),observers=__webpack_require__(\"9b/N\");const checkbox_c0=[\"input\"],checkbox_c1=function(){return{enterDuration:150}},_c2=[\"*\"],MAT_CHECKBOX_DEFAULT_OPTIONS=new core.s(\"mat-checkbox-default-options\",{providedIn:\"root\",factory:MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY});function MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY(){return{color:\"accent\",clickAction:\"check-indeterminate\"}}let nextUniqueId=0;const defaults=MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY(),MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR={provide:fesm2015_forms.k,useExisting:Object(core.W)(()=>checkbox_MatCheckbox),multi:!0};class MatCheckboxChange{}class MatCheckboxBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatCheckboxMixinBase=Object(fesm2015_core.A)(Object(fesm2015_core.v)(Object(fesm2015_core.w)(Object(fesm2015_core.x)(MatCheckboxBase))));let checkbox_MatCheckbox=(()=>{class MatCheckbox extends _MatCheckboxMixinBase{constructor(elementRef,_changeDetectorRef,_focusMonitor,_ngZone,tabIndex,_animationMode,_options){super(elementRef),this._changeDetectorRef=_changeDetectorRef,this._focusMonitor=_focusMonitor,this._ngZone=_ngZone,this._animationMode=_animationMode,this._options=_options,this.ariaLabel=\"\",this.ariaLabelledby=null,this._uniqueId=\"mat-checkbox-\"+ ++nextUniqueId,this.id=this._uniqueId,this.labelPosition=\"after\",this.name=null,this.change=new core.o,this.indeterminateChange=new core.o,this._onTouched=()=>{},this._currentAnimationClass=\"\",this._currentCheckState=0,this._controlValueAccessorChangeFn=()=>{},this._checked=!1,this._disabled=!1,this._indeterminate=!1,this._options=this._options||defaults,this.color=this.defaultColor=this._options.color||defaults.color,this.tabIndex=parseInt(tabIndex)||0}get inputId(){return`${this.id||this._uniqueId}-input`}get required(){return this._required}set required(value){this._required=Object(coercion.c)(value)}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(focusOrigin=>{focusOrigin||Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})}),this._syncIndeterminate(this._indeterminate)}ngAfterViewChecked(){}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}get checked(){return this._checked}set checked(value){value!=this.checked&&(this._checked=value,this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled}set disabled(value){const newValue=Object(coercion.c)(value);newValue!==this.disabled&&(this._disabled=newValue,this._changeDetectorRef.markForCheck())}get indeterminate(){return this._indeterminate}set indeterminate(value){const changed=value!=this._indeterminate;this._indeterminate=Object(coercion.c)(value),changed&&(this._transitionCheckState(this._indeterminate?3:this.checked?1:2),this.indeterminateChange.emit(this._indeterminate)),this._syncIndeterminate(this._indeterminate)}_isRippleDisabled(){return this.disableRipple||this.disabled}_onLabelTextChange(){this._changeDetectorRef.detectChanges()}writeValue(value){this.checked=!!value}registerOnChange(fn){this._controlValueAccessorChangeFn=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_getAriaChecked(){return this.checked?\"true\":this.indeterminate?\"mixed\":\"false\"}_transitionCheckState(newState){let oldState=this._currentCheckState,element=this._elementRef.nativeElement;if(oldState!==newState&&(this._currentAnimationClass.length>0&&element.classList.remove(this._currentAnimationClass),this._currentAnimationClass=this._getAnimationClassForCheckStateTransition(oldState,newState),this._currentCheckState=newState,this._currentAnimationClass.length>0)){element.classList.add(this._currentAnimationClass);const animationClass=this._currentAnimationClass;this._ngZone.runOutsideAngular(()=>{setTimeout(()=>{element.classList.remove(animationClass)},1e3)})}}_emitChangeEvent(){const event=new MatCheckboxChange;event.source=this,event.checked=this.checked,this._controlValueAccessorChangeFn(this.checked),this.change.emit(event)}toggle(){this.checked=!this.checked}_onInputClick(event){var _a;const clickAction=null===(_a=this._options)||void 0===_a?void 0:_a.clickAction;event.stopPropagation(),this.disabled||\"noop\"===clickAction?this.disabled||\"noop\"!==clickAction||(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate):(this.indeterminate&&\"check\"!==clickAction&&Promise.resolve().then(()=>{this._indeterminate=!1,this.indeterminateChange.emit(this._indeterminate)}),this.toggle(),this._transitionCheckState(this._checked?1:2),this._emitChangeEvent())}focus(origin,options){origin?this._focusMonitor.focusVia(this._inputElement,origin,options):this._inputElement.nativeElement.focus(options)}_onInteractionEvent(event){event.stopPropagation()}_getAnimationClassForCheckStateTransition(oldState,newState){if(\"NoopAnimations\"===this._animationMode)return\"\";let animSuffix=\"\";switch(oldState){case 0:if(1===newState)animSuffix=\"unchecked-checked\";else{if(3!=newState)return\"\";animSuffix=\"unchecked-indeterminate\"}break;case 2:animSuffix=1===newState?\"unchecked-checked\":\"unchecked-indeterminate\";break;case 1:animSuffix=2===newState?\"checked-unchecked\":\"checked-indeterminate\";break;case 3:animSuffix=1===newState?\"indeterminate-checked\":\"indeterminate-unchecked\"}return`mat-checkbox-anim-${animSuffix}`}_syncIndeterminate(value){const nativeCheckbox=this._inputElement;nativeCheckbox&&(nativeCheckbox.nativeElement.indeterminate=value)}}return MatCheckbox.ɵfac=function(t){return new(t||MatCheckbox)(core.Qb(core.l),core.Qb(core.h),core.Qb(a11y.h),core.Qb(core.B),core.bc(\"tabindex\"),core.Qb(fesm2015_animations.a,8),core.Qb(MAT_CHECKBOX_DEFAULT_OPTIONS,8))},MatCheckbox.ɵcmp=core.Kb({type:MatCheckbox,selectors:[[\"mat-checkbox\"]],viewQuery:function(rf,ctx){if(1&rf&&(core.Lc(checkbox_c0,1),core.Lc(fesm2015_core.q,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._inputElement=_t.first),core.uc(_t=core.fc())&&(ctx.ripple=_t.first)}},hostAttrs:[1,\"mat-checkbox\"],hostVars:12,hostBindings:function(rf,ctx){2&rf&&(core.Zb(\"id\",ctx.id),core.Eb(\"tabindex\",null),core.Ib(\"mat-checkbox-indeterminate\",ctx.indeterminate)(\"mat-checkbox-checked\",ctx.checked)(\"mat-checkbox-disabled\",ctx.disabled)(\"mat-checkbox-label-before\",\"before\"==ctx.labelPosition)(\"_mat-animation-noopable\",\"NoopAnimations\"===ctx._animationMode))},inputs:{disableRipple:\"disableRipple\",color:\"color\",tabIndex:\"tabIndex\",ariaLabel:[\"aria-label\",\"ariaLabel\"],ariaLabelledby:[\"aria-labelledby\",\"ariaLabelledby\"],id:\"id\",labelPosition:\"labelPosition\",name:\"name\",required:\"required\",checked:\"checked\",disabled:\"disabled\",indeterminate:\"indeterminate\",ariaDescribedby:[\"aria-describedby\",\"ariaDescribedby\"],value:\"value\"},outputs:{change:\"change\",indeterminateChange:\"indeterminateChange\"},exportAs:[\"matCheckbox\"],features:[core.Cb([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]),core.Ab],ngContentSelectors:_c2,decls:17,vars:20,consts:[[1,\"mat-checkbox-layout\"],[\"label\",\"\"],[1,\"mat-checkbox-inner-container\"],[\"type\",\"checkbox\",1,\"mat-checkbox-input\",\"cdk-visually-hidden\",3,\"id\",\"required\",\"checked\",\"disabled\",\"tabIndex\",\"change\",\"click\"],[\"input\",\"\"],[\"matRipple\",\"\",1,\"mat-checkbox-ripple\",\"mat-focus-indicator\",3,\"matRippleTrigger\",\"matRippleDisabled\",\"matRippleRadius\",\"matRippleCentered\",\"matRippleAnimation\"],[1,\"mat-ripple-element\",\"mat-checkbox-persistent-ripple\"],[1,\"mat-checkbox-frame\"],[1,\"mat-checkbox-background\"],[\"version\",\"1.1\",\"focusable\",\"false\",\"viewBox\",\"0 0 24 24\",0,\"xml\",\"space\",\"preserve\",1,\"mat-checkbox-checkmark\"],[\"fill\",\"none\",\"stroke\",\"white\",\"d\",\"M4.1,12.7 9,17.6 20.3,6.3\",1,\"mat-checkbox-checkmark-path\"],[1,\"mat-checkbox-mixedmark\"],[1,\"mat-checkbox-label\",3,\"cdkObserveContent\"],[\"checkboxLabel\",\"\"],[2,\"display\",\"none\"]],template:function(rf,ctx){if(1&rf&&(core.oc(),core.Wb(0,\"label\",0,1),core.Wb(2,\"span\",2),core.Wb(3,\"input\",3,4),core.ec(\"change\",function($event){return ctx._onInteractionEvent($event)})(\"click\",function($event){return ctx._onInputClick($event)}),core.Vb(),core.Wb(5,\"span\",5),core.Rb(6,\"span\",6),core.Vb(),core.Rb(7,\"span\",7),core.Wb(8,\"span\",8),core.hc(),core.Wb(9,\"svg\",9),core.Rb(10,\"path\",10),core.Vb(),core.gc(),core.Rb(11,\"span\",11),core.Vb(),core.Vb(),core.Wb(12,\"span\",12,13),core.ec(\"cdkObserveContent\",function(){return ctx._onLabelTextChange()}),core.Wb(14,\"span\",14),core.Ic(15,\" \"),core.Vb(),core.nc(16),core.Vb(),core.Vb()),2&rf){const _r0=core.vc(1),_r2=core.vc(13);core.Eb(\"for\",ctx.inputId),core.Db(2),core.Ib(\"mat-checkbox-inner-container-no-side-margin\",!_r2.textContent||!_r2.textContent.trim()),core.Db(1),core.pc(\"id\",ctx.inputId)(\"required\",ctx.required)(\"checked\",ctx.checked)(\"disabled\",ctx.disabled)(\"tabIndex\",ctx.tabIndex),core.Eb(\"value\",ctx.value)(\"name\",ctx.name)(\"aria-label\",ctx.ariaLabel||null)(\"aria-labelledby\",ctx.ariaLabelledby)(\"aria-checked\",ctx._getAriaChecked())(\"aria-describedby\",ctx.ariaDescribedby),core.Db(2),core.pc(\"matRippleTrigger\",_r0)(\"matRippleDisabled\",ctx._isRippleDisabled())(\"matRippleRadius\",20)(\"matRippleCentered\",!0)(\"matRippleAnimation\",core.rc(19,checkbox_c1))}},directives:[fesm2015_core.q,observers.a],styles:[\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"],encapsulation:2,changeDetection:0}),MatCheckbox})(),checkbox_MatCheckboxRequiredValidatorModule=(()=>{class _MatCheckboxRequiredValidatorModule{}return _MatCheckboxRequiredValidatorModule.ɵmod=core.Ob({type:_MatCheckboxRequiredValidatorModule}),_MatCheckboxRequiredValidatorModule.ɵinj=core.Nb({factory:function(t){return new(t||_MatCheckboxRequiredValidatorModule)}}),_MatCheckboxRequiredValidatorModule})(),checkbox_MatCheckboxModule=(()=>{class MatCheckboxModule{}return MatCheckboxModule.ɵmod=core.Ob({type:MatCheckboxModule}),MatCheckboxModule.ɵinj=core.Nb({factory:function(t){return new(t||MatCheckboxModule)},imports:[[fesm2015_core.r,fesm2015_core.j,observers.c,checkbox_MatCheckboxRequiredValidatorModule],fesm2015_core.j,checkbox_MatCheckboxRequiredValidatorModule]}),MatCheckboxModule})();var badge=__webpack_require__(\"8Qe2\"),progress_bar=__webpack_require__(\"BTe0\"),progress_spinner=__webpack_require__(\"pu8Q\"),src=__webpack_require__(\"fi6C\"),dialog=__webpack_require__(\"XNpK\"),readme_src=__webpack_require__(\"C1VQ\"),catchError=__webpack_require__(\"JIr8\");const SAMEORIGIN=new core.s(\"wizdm.sameorigin.regex\",{factory:()=>{var _a;return new RegExp(`^data:|^blob:|^http(?:s)?://${(null===(_a=null===window||void 0===window?void 0:window.location)||void 0===_a?void 0:_a.host)||\"\"}`)}});var http=__webpack_require__(\"IheW\"),platform_browser=__webpack_require__(\"cUpR\");let download_directive_DownloadDirective=(()=>{class DownloadDirective{constructor(sameOrigin,http,ref,sanitizer){this.sameOrigin=sameOrigin,this.http=http,this.ref=ref,this.sanitizer=sanitizer,this.error=!1,this.busy=!1}set source(href){this.blob&&(URL.revokeObjectURL(this.blob),this.blob=void 0),this.error=!1,this.href=href}get safeHref(){return this.sanitizer.bypassSecurityTrustUrl(this.href)}onClick(){return!(!this.href||this.busy||!this.error&&!this.sameOrigin.test(this.href)&&(this.sub&&this.sub.unsubscribe(),this.busy=!0,this.sub=this.http.get(this.href,{responseType:\"blob\"}).pipe(Object(map.a)(blob=>this.blob=URL.createObjectURL(blob)),Object(catchError.a)(error=>(console.error(\"Unable to download the source file\",error),this.error=!0,Object(of.a)(this.href)))).subscribe(url=>{this.href=url,this.busy=!1,setTimeout(()=>this.ref.nativeElement.click())}),1))}ngOnDestroy(){this.blob&&URL.revokeObjectURL(this.blob),this.sub&&this.sub.unsubscribe()}}return DownloadDirective.ɵfac=function(t){return new(t||DownloadDirective)(core.Qb(SAMEORIGIN),core.Qb(http.b),core.Qb(core.l),core.Qb(platform_browser.b))},DownloadDirective.ɵdir=core.Lb({type:DownloadDirective,selectors:[[\"a\",\"download\",\"\"]],hostVars:2,hostBindings:function(rf,ctx){1&rf&&core.ec(\"click\",function(){return ctx.onClick()}),2&rf&&(core.Zb(\"href\",ctx.safeHref,core.Ac),core.Eb(\"download\",ctx.download))},inputs:{download:\"download\",source:[\"href\",\"source\"]},exportAs:[\"wmDownload\"]}),DownloadDirective})(),download_module_DownloadModule=(()=>{class DownloadModule{}return DownloadModule.ɵmod=core.Ob({type:DownloadModule}),DownloadModule.ɵinj=core.Nb({factory:function(t){return new(t||DownloadModule)},imports:[[http.c]]}),DownloadModule})();var lib_icon=__webpack_require__(\"txmD\");function ImageComponent_ng_content_1_Template(rf,ctx){1&rf&&core.nc(0,0,[\"*ngIf\",\"!source\"])}function ImageComponent_ng_content_2_Template(rf,ctx){1&rf&&core.nc(0,1,[\"*ngIf\",\"!!source && !load && !error\"])}function ImageComponent_ng_content_3_Template(rf,ctx){1&rf&&core.nc(0,2,[\"*ngIf\",\"error\"])}const image_component_c0=[[[\"\",\"imagePlaceholder\",\"\"]],[[\"\",\"imageLoading\",\"\"]],[[\"\",\"imageError\",\"\"]]],image_component_c1=[\"[imagePlaceholder]\",\"[imageLoading]\",\"[imageError]\"];let image_component_ImageComponent=(()=>{class ImageComponent{set src(src){this.load=this.error=!1,this.source=src}}return ImageComponent.ɵfac=function(t){return new(t||ImageComponent)},ImageComponent.ɵcmp=core.Kb({type:ImageComponent,selectors:[[\"wm-image\"]],hostAttrs:[1,\"wm-image\"],inputs:{src:\"src\",alt:\"alt\"},ngContentSelectors:image_component_c1,decls:4,vars:7,consts:[[3,\"src\",\"alt\",\"load\",\"error\"],[4,\"ngIf\"]],template:function(rf,ctx){1&rf&&(core.oc(image_component_c0),core.Wb(0,\"img\",0),core.ec(\"load\",function(){return ctx.load=!0})(\"error\",function(){return ctx.error=!0}),core.Vb(),core.Gc(1,ImageComponent_ng_content_1_Template,1,0,\"ng-content\",1),core.Gc(2,ImageComponent_ng_content_2_Template,1,0,\"ng-content\",1),core.Gc(3,ImageComponent_ng_content_3_Template,1,0,\"ng-content\",1)),2&rf&&(core.Dc(\"display\",ctx.source&&ctx.load?void 0:\"none\"),core.pc(\"src\",ctx.source,core.Ac)(\"alt\",ctx.alt),core.Db(1),core.pc(\"ngIf\",!ctx.source),core.Db(1),core.pc(\"ngIf\",!!ctx.source&&!ctx.load&&!ctx.error),core.Db(1),core.pc(\"ngIf\",ctx.error))},directives:[common.m],styles:[\".wm-image{overflow:hidden}.wm-image img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}\"],encapsulation:2}),ImageComponent})(),image_module_ImageModule=(()=>{class ImageModule{}return ImageModule.ɵmod=core.Ob({type:ImageModule}),ImageModule.ɵinj=core.Nb({factory:function(t){return new(t||ImageModule)},imports:[[common.c]]}),ImageModule})();var lib_button=__webpack_require__(\"uaks\"),content_src=__webpack_require__(\"g7MM\"),moment=__webpack_require__(\"pvxE\");const FILE_SIZE_UNITS_LONG=[\"Bytes\",\"Kilobytes\",\"Megabytes\",\"Gigabytes\",\"Pettabytes\",\"Exabytes\",\"Zettabytes\",\"Yottabytes\"],FILE_SIZE_UNITS=[\"B\",\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"];let file_size_pipe_FileSizePipe=(()=>{class FileSizePipe{transform(sizeInBytes,longForm){if(null==sizeInBytes)return\"\";const units=longForm?FILE_SIZE_UNITS_LONG:FILE_SIZE_UNITS;let power=Math.min(Math.floor(Math.log(sizeInBytes)/Math.log(1024)),units.length-1);const size=sizeInBytes/Math.pow(1024,power),formattedSize=Math.round(100*size)/100;return size?`${formattedSize} ${units[power]}`:\"0\"}}return FileSizePipe.ɵfac=function(t){return new(t||FileSizePipe)},FileSizePipe.ɵpipe=core.Pb({name:\"fileSize\",type:FileSizePipe,pure:!0}),FileSizePipe})(),file_size_module_FileSizePipeModule=(()=>{class FileSizePipeModule{}return FileSizePipeModule.ɵmod=core.Ob({type:FileSizePipeModule}),FileSizePipeModule.ɵinj=core.Nb({factory:function(t){return new(t||FileSizePipeModule)},imports:[[]]}),FileSizePipeModule})();var actionbar=__webpack_require__(\"kNiW\"),extras=__webpack_require__(\"I9WU\"),forkJoin=__webpack_require__(\"cp0P\"),switchMap=__webpack_require__(\"eIep\"),tap=__webpack_require__(\"vkgz\"),storage=__webpack_require__(\"tFpD\"),lib_auth=__webpack_require__(\"R6uK\");const $timing=\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\",$animations=[Object(animations.o)(\"expand\",[Object(animations.n)(\":enter\",[Object(animations.m)({height:\"0px\",minHeight:\"0\"}),Object(animations.e)($timing)]),Object(animations.n)(\":leave\",Object(animations.e)($timing,Object(animations.m)({height:\"0px\",minHeight:\"0\"})))])];var esm2015_core=__webpack_require__(\"/q54\"),content_directive=__webpack_require__(\"Qfjl\"),gtag_directive=__webpack_require__(\"FkMH\"),actionbar_directive=__webpack_require__(\"mx0f\"),flex=__webpack_require__(\"VDRc\"),dialog_component=__webpack_require__(\"7/R1\"),fesm2015_dialog=__webpack_require__(\"iELJ\"),readme_component=__webpack_require__(\"n8oj\"),button_media_changer_directive=__webpack_require__(\"U3RD\"),button_changer_directive=__webpack_require__(\"6920\"),icon_component=__webpack_require__(\"h0Qx\"),moment_pipe=__webpack_require__(\"cpjW\");function UploadsComponent_ng_container_0_ng_template_1_mat_progress_spinner_0_Template(rf,ctx){1&rf&&core.Rb(0,\"mat-progress-spinner\",39)}function UploadsComponent_ng_container_0_ng_template_1_wm_icon_19_Template(rf,ctx){if(1&rf&&core.Rb(0,\"wm-icon\",40),2&rf){const msgs_r1=core.ic(2).$implicit;core.pc(\"icon\",(null==msgs_r1.actions||null==msgs_r1.actions.delete?null:msgs_r1.actions.delete.icon)||\"delete\")}}function UploadsComponent_ng_container_0_ng_template_1_ng_template_20_Template(rf,ctx){if(1&rf&&core.Ic(0),2&rf){const msgs_r1=core.ic(2).$implicit;core.Jc((null==msgs_r1.actions||null==msgs_r1.actions.delete?null:msgs_r1.actions.delete.caption)||\"Delete files\")}}function UploadsComponent_ng_container_0_ng_template_1_wm_icon_40_Template(rf,ctx){if(1&rf&&core.Rb(0,\"wm-icon\",40),2&rf){const msgs_r1=core.ic(2).$implicit;core.pc(\"icon\",(null==msgs_r1.actions||null==msgs_r1.actions.upload?null:msgs_r1.actions.upload.icon)||\"backup\")}}function UploadsComponent_ng_container_0_ng_template_1_ng_template_41_Template(rf,ctx){if(1&rf&&core.Ic(0),2&rf){const msgs_r1=core.ic(2).$implicit;core.Jc((null==msgs_r1.actions||null==msgs_r1.actions.upload?null:msgs_r1.actions.upload.caption)||\"Upload Files\")}}function UploadsComponent_ng_container_0_ng_template_1_Template(rf,ctx){if(1&rf){const _r35=core.Xb();core.Gc(0,UploadsComponent_ng_container_0_ng_template_1_mat_progress_spinner_0_Template,1,0,\"mat-progress-spinner\",22),core.Wb(1,\"wm-dialog\",23,24),core.ec(\"closedChange\",function($event){core.yc(_r35);const ctx_r34=core.ic(2);return $event&&ctx_r34.deleteFiles()}),core.Wb(3,\"h2\",25),core.Wb(4,\"b\"),core.Ic(5),core.Vb(),core.Vb(),core.Wb(6,\"mat-dialog-content\",26),core.Ic(7,\" You're about to \"),core.Wb(8,\"b\"),core.Ic(9,\"delete\"),core.Vb(),core.Ic(10,\" the selected files.\"),core.Rb(11,\"br\"),core.Ic(12,\"Are you sure? \"),core.Vb(),core.Wb(13,\"mat-dialog-actions\",27),core.Wb(14,\"button\",28),core.Ic(15),core.Vb(),core.Wb(16,\"button\",29),core.Ic(17),core.Vb(),core.Vb(),core.Vb(),core.Wb(18,\"button\",30),core.ec(\"click\",function(){return core.yc(_r35),core.vc(2).open()}),core.Gc(19,UploadsComponent_ng_container_0_ng_template_1_wm_icon_19_Template,1,1,\"wm-icon\",31),core.Gc(20,UploadsComponent_ng_container_0_ng_template_1_ng_template_20_Template,1,1,\"ng-template\",null,32,core.Hc),core.Vb(),core.Wb(22,\"input\",33,34),core.ec(\"change\",function($event){return core.yc(_r35),core.ic(2).uploadFiles($event.target.files)}),core.Vb(),core.Wb(24,\"wm-dialog\",35,36),core.ec(\"closedChange\",function($event){core.yc(_r35);const ctx_r38=core.ic(2);return $event&&ctx_r38.uploadFiles(ctx_r38.overwriteFiles,!0)}),core.Wb(26,\"h2\",25),core.Wb(27,\"b\"),core.Ic(28),core.Vb(),core.Vb(),core.Wb(29,\"mat-dialog-content\",26),core.Ic(30,\" Some of the files \"),core.Wb(31,\"i\"),core.Ic(32,\"already exist\"),core.Vb(),core.Ic(33,\" and will be overridden. \"),core.Vb(),core.Wb(34,\"mat-dialog-actions\",27),core.Wb(35,\"button\",28),core.Ic(36),core.Vb(),core.Wb(37,\"button\",29),core.Ic(38),core.Vb(),core.Vb(),core.Vb(),core.Wb(39,\"button\",37),core.ec(\"click\",function(){core.yc(_r35);const _r25=core.vc(23);return _r25.value=\"\",_r25.click()}),core.Gc(40,UploadsComponent_ng_container_0_ng_template_1_wm_icon_40_Template,1,1,\"wm-icon\",31),core.Gc(41,UploadsComponent_ng_container_0_ng_template_1_ng_template_41_Template,1,1,\"ng-template\",null,38,core.Hc),core.Vb()}if(2&rf){const mobile_r19=ctx.isMobile,_r23=core.vc(21),_r28=core.vc(42),msgs_r1=core.ic().$implicit,ctx_r2=core.ic();core.pc(\"ngIf\",ctx_r2.busy),core.Db(5),core.Jc((null==msgs_r1.confirmDelete?null:msgs_r1.confirmDelete.title)||\"Deleting file(s)\"),core.Db(1),core.pc(\"wm-readme\",null==msgs_r1.confirmDelete?null:msgs_r1.confirmDelete.message),core.Db(8),core.pc(\"mat-dialog-close\",!1),core.Db(1),core.Jc((null==msgs_r1.confirmDelete?null:msgs_r1.confirmDelete.cancel)||\"Abort\"),core.Db(1),core.pc(\"mat-dialog-close\",!0),core.Db(1),core.Jc((null==msgs_r1.confirmDelete?null:msgs_r1.confirmDelete.ok)||\"Proceed\"),core.Db(1),core.pc(\"color\",(null==msgs_r1.actions||null==msgs_r1.actions.delete?null:msgs_r1.actions.delete.color)||\"warn\")(\"disabled\",ctx_r2.busy||ctx_r2.isNoneSelected()),core.Db(1),core.pc(\"ngIf\",mobile_r19)(\"ngIfElse\",_r23),core.Db(5),core.pc(\"opened\",ctx_r2.overwriteFiles),core.Db(4),core.Jc((null==msgs_r1.confirmOverwrite?null:msgs_r1.confirmOverwrite.title)||\"Existing file(s)\"),core.Db(1),core.pc(\"wm-readme\",null==msgs_r1.confirmOverwrite?null:msgs_r1.confirmOverwrite.message),core.Db(6),core.pc(\"mat-dialog-close\",!1),core.Db(1),core.Jc((null==msgs_r1.confirmOverwrite?null:msgs_r1.confirmOverwrite.cancel)||\"Abort\"),core.Db(1),core.pc(\"mat-dialog-close\",!0),core.Db(1),core.Jc((null==msgs_r1.confirmOverwrite?null:msgs_r1.confirmOverwrite.ok)||\"Proceed\"),core.Db(1),core.pc(\"color\",(null==msgs_r1.actions||null==msgs_r1.actions.upload?null:msgs_r1.actions.upload.color)||\"primary\")(\"type\",mobile_r19?\"icon\":\"stroked\")(\"disabled\",ctx_r2.busy),core.Db(1),core.pc(\"ngIf\",mobile_r19)(\"ngIfElse\",_r28)}}function UploadsComponent_ng_container_0_th_7_Template(rf,ctx){if(1&rf){const _r42=core.Xb();core.Wb(0,\"th\",41),core.Wb(1,\"mat-checkbox\",42),core.ec(\"click\",function(){return core.yc(_r42),core.ic(2).toggleSelection()}),core.Vb(),core.Vb()}if(2&rf){const ctx_r3=core.ic(2);core.Db(1),core.pc(\"checked\",ctx_r3.isAllSelected())(\"indeterminate\",ctx_r3.isPartlySelected())(\"disabled\",ctx_r3.busy)}}function UploadsComponent_ng_container_0_td_8_Template(rf,ctx){if(1&rf){const _r46=core.Xb();core.Wb(0,\"td\",43),core.ec(\"click\",function($event){return $event.stopPropagation()}),core.Wb(1,\"mat-checkbox\",44),core.ec(\"click\",function(){core.yc(_r46);const record_r43=ctx.$implicit;return core.ic(2).toggleSelection(record_r43)}),core.Vb(),core.Vb()}if(2&rf){const record_r43=ctx.$implicit,ctx_r4=core.ic(2);core.Db(1),core.pc(\"checked\",ctx_r4.isSelected(record_r43))(\"disabled\",record_r43.file.uploading)}}function UploadsComponent_ng_container_0_th_10_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",45),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.columns?null:msgs_r1.columns.name)||\"Name\")}}function UploadsComponent_ng_container_0_td_11_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",46),core.Wb(1,\"span\",47),core.jc(2,\"olderThan\"),core.Ic(3),core.Vb(),core.Vb()),2&rf){const record_r48=ctx.$implicit,msgs_r1=core.ic().$implicit;core.Db(1),core.pc(\"matBadge\",msgs_r1.newBadge||\"new\")(\"matBadgeHidden\",!core.lc(2,3,record_r48.data.updated,\"PT3M\")),core.Db(2),core.Jc(record_r48.data.name)}}function UploadsComponent_ng_container_0_th_13_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",48),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.columns?null:msgs_r1.columns.size)||\"Size\")}}function UploadsComponent_ng_container_0_td_14_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",49),core.Ic(1),core.jc(2,\"fileSize\"),core.Vb()),2&rf){const record_r51=ctx.$implicit;core.Db(1),core.Jc(core.kc(2,1,record_r51.data.size)||\"-\")}}function UploadsComponent_ng_container_0_th_16_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",48),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.columns?null:msgs_r1.columns.type)||\"Type\")}}function UploadsComponent_ng_container_0_td_17_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",49),core.Ic(1),core.Vb()),2&rf){const record_r53=ctx.$implicit;core.Db(1),core.Jc(record_r53.data.contentType)}}function UploadsComponent_ng_container_0_th_19_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",48),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.columns?null:msgs_r1.columns.updated)||\"Last modified\")}}function UploadsComponent_ng_container_0_td_20_span_1_Template(rf,ctx){if(1&rf){const _r62=core.Xb();core.Wb(0,\"span\",52),core.Rb(1,\"mat-progress-bar\",53),core.Wb(2,\"button\",54),core.ec(\"click\",function(){return core.yc(_r62),core.ic().$implicit.file.cancel()}),core.Wb(3,\"mat-icon\",55),core.Ic(4,\"clear\"),core.Vb(),core.Vb(),core.Vb()}if(2&rf){const progress_r59=ctx.ngIf;core.Db(1),core.pc(\"value\",progress_r59)(\"mode\",progress_r59<100?\"determinate\":\"indeterminate\"),core.Db(1),core.pc(\"disabled\",progress_r59>=100)}}function UploadsComponent_ng_container_0_td_20_ng_template_3_Template(rf,ctx){if(1&rf&&(core.Ic(0),core.jc(1,\"moment\")),2&rf){const record_r55=core.ic().$implicit;core.Jc(core.lc(1,1,record_r55.data.updated,\"ll\")||\"-\")}}function UploadsComponent_ng_container_0_td_20_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",49),core.Gc(1,UploadsComponent_ng_container_0_td_20_span_1_Template,5,3,\"span\",50),core.jc(2,\"async\"),core.Gc(3,UploadsComponent_ng_container_0_td_20_ng_template_3_Template,2,4,\"ng-template\",null,51,core.Hc),core.Vb()),2&rf){const record_r55=ctx.$implicit,_r57=core.vc(4);core.Db(1),core.pc(\"ngIf\",core.kc(2,2,record_r55.file.progress$))(\"ngIfElse\",_r57)}}function UploadsComponent_ng_container_0_th_22_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",56),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc((null==msgs_r1.columns?null:msgs_r1.columns.download)||\"Download\")}}function UploadsComponent_ng_container_0_td_23_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",57),core.ec(\"click\",function($event){return $event.stopPropagation()}),core.Wb(1,\"a\",58,59),core.Wb(3,\"mat-icon\",55),core.Ic(4,\"get_app\"),core.Vb(),core.Vb(),core.Vb()),2&rf){const record_r65=ctx.$implicit,_r66=core.vc(2),msgs_r1=core.ic().$implicit;core.Db(1),core.pc(\"href\",record_r65.data.url,core.Ac)(\"download\",record_r65.data.name)(\"disabled\",!record_r65.data.url||_r66.busy)(\"title\",(msgs_r1.downloadTitle||\"Download\")+\" \"+record_r65.data.name)}}function UploadsComponent_ng_container_0_td_25_div_1_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"div\",61),core.Wb(1,\"wm-image\",62),core.Rb(2,\"mat-progress-spinner\",63),core.Vb(),core.Vb()),2&rf){const record_r69=core.ic().$implicit;core.pc(\"@expand\",void 0),core.Db(1),core.pc(\"src\",record_r69.data.url)}}function UploadsComponent_ng_container_0_td_25_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",46),core.Gc(1,UploadsComponent_ng_container_0_td_25_div_1_Template,3,2,\"div\",60),core.Vb()),2&rf){const record_r69=ctx.$implicit,ctx_r15=core.ic(2);core.Eb(\"colspan\",ctx_r15.displayedColumns.length),core.Db(1),core.pc(\"ngIf\",record_r69===ctx_r15.previewRecord)}}function UploadsComponent_ng_container_0_tr_26_Template(rf,ctx){1&rf&&core.Rb(0,\"tr\",64)}function UploadsComponent_ng_container_0_tr_27_Template(rf,ctx){if(1&rf){const _r74=core.Xb();core.Wb(0,\"tr\",65),core.ec(\"click\",function(){core.yc(_r74);const row_r72=ctx.$implicit;return core.ic(2).togglePreview(row_r72)}),core.Vb()}}function UploadsComponent_ng_container_0_tr_28_Template(rf,ctx){1&rf&&core.Rb(0,\"tr\",66)}const uploads_component_c0=function(){return[\"preview\"]};function UploadsComponent_ng_container_0_Template(rf,ctx){if(1&rf){const _r77=core.Xb();core.Ub(0,1),core.Gc(1,UploadsComponent_ng_container_0_ng_template_1_Template,43,23,\"ng-template\",2),core.Wb(2,\"h2\"),core.Ic(3),core.Vb(),core.Rb(4,\"mat-divider\"),core.Wb(5,\"table\",3),core.ec(\"matSortChange\",function($event){return core.yc(_r77),core.ic().sortBy$.next($event)}),core.Ub(6,4),core.Gc(7,UploadsComponent_ng_container_0_th_7_Template,2,3,\"th\",5),core.Gc(8,UploadsComponent_ng_container_0_td_8_Template,2,2,\"td\",6),core.Tb(),core.Ub(9,7),core.Gc(10,UploadsComponent_ng_container_0_th_10_Template,2,1,\"th\",8),core.Gc(11,UploadsComponent_ng_container_0_td_11_Template,4,6,\"td\",9),core.Tb(),core.Ub(12,10),core.Gc(13,UploadsComponent_ng_container_0_th_13_Template,2,1,\"th\",11),core.Gc(14,UploadsComponent_ng_container_0_td_14_Template,3,3,\"td\",12),core.Tb(),core.Ub(15,13),core.Gc(16,UploadsComponent_ng_container_0_th_16_Template,2,1,\"th\",11),core.Gc(17,UploadsComponent_ng_container_0_td_17_Template,2,1,\"td\",12),core.Tb(),core.Ub(18,14),core.Gc(19,UploadsComponent_ng_container_0_th_19_Template,2,1,\"th\",11),core.Gc(20,UploadsComponent_ng_container_0_td_20_Template,5,4,\"td\",12),core.Tb(),core.Ub(21,15),core.Gc(22,UploadsComponent_ng_container_0_th_22_Template,2,1,\"th\",16),core.Gc(23,UploadsComponent_ng_container_0_td_23_Template,5,4,\"td\",17),core.Tb(),core.Ub(24,18),core.Gc(25,UploadsComponent_ng_container_0_td_25_Template,2,2,\"td\",9),core.Tb(),core.Gc(26,UploadsComponent_ng_container_0_tr_26_Template,1,0,\"tr\",19),core.Gc(27,UploadsComponent_ng_container_0_tr_27_Template,1,0,\"tr\",20),core.Gc(28,UploadsComponent_ng_container_0_tr_28_Template,1,0,\"tr\",21),core.Vb(),core.Tb()}if(2&rf){const msgs_r1=ctx.$implicit,ctx_r0=core.ic();core.Db(3),core.Jc(msgs_r1.title||\"Uploads\"),core.Db(2),core.pc(\"dataSource\",ctx_r0)(\"matSortActive\",ctx_r0.sortBy$.value.active)(\"matSortDirection\",ctx_r0.sortBy$.value.direction)(\"matSortDisabled\",!!ctx_r0.previewRecord),core.Db(21),core.pc(\"matHeaderRowDef\",ctx_r0.displayedColumns),core.Db(1),core.pc(\"matRowDefColumns\",ctx_r0.displayedColumns),core.Db(1),core.pc(\"matRowDefColumns\",core.rc(8,uploads_component_c0))}}let uploads_component_UploadsComponent=(()=>{class UploadsComponent extends extras.b{constructor(store,auth,media){super(store,auth.userId),this.media=media,this.sortBy$=new BehaviorSubject.a({active:\"name\",direction:\"asc\"}),this.selection=new collections.c(!0,[]),this.allRecords=[],this.previewRecord=null,this.uploading=!1,this.deleting=!1,this.loading=!0}get busy(){return this.loading||this.uploading||this.deleting}get mobile(){return this.media.isActive(\"xs\")}get displayedColumns(){return this.mobile?[\"select\",\"name\",\"download\"]:[\"select\",\"name\",\"size\",\"type\",\"updated\",\"download\"]}connect(viewer){return this.files$.pipe(Object(switchMap.a)(files=>files.length>0?Object(combineLatest.a)(files.map(file=>file.summary$.pipe(Object(map.a)(data=>({file:file,data:data}))))):Object(of.a)([])),Object(tap.a)(()=>{this.selection.clear(),this.previewRecord=null}),Object(switchMap.a)(records=>this.sortBy$.pipe(Object(map.a)(sortBy=>{const dir=\"asc\"==sortBy.direction?1:-1;return records.sort((a,b)=>{const valueA=a.data[sortBy.active];if(!valueA)return 1;const valueB=b.data[sortBy.active];return valueB?valueA>valueB?dir:valueA<valueB?-dir:0:-1})}))),Object(tap.a)(files=>{this.allRecords=files,this.loading=!1}))}disconnect(collectionViewer){this.allRecords=[]}listFiles(list){let allFiles=[],existingFiles=[];for(let i=0;i<list.length;i++){const item=list.item(i);this.allRecords.some(rec=>rec.data.name===item.name)&&existingFiles.push(item),allFiles.push(item)}return{allFiles:allFiles,existingFiles:existingFiles}}uploadFiles(list,overwrite=!1){if(list.length<=0)return;const{allFiles:allFiles,existingFiles:existingFiles}=this.listFiles(list);existingFiles.length>0&&!overwrite?this.overwriteFiles=list:(this.uploading=!0,Object(forkJoin.a)(allFiles.map(file=>this.upload(file,{contentType:file.type}).pipe(Object(catchError.a)(()=>Object(of.a)(null))))).toPromise().then(uploads=>{(overwrite||uploads.some(upload=>null===upload))&&(this.ls(\".\"),this.loading=!0),this.uploading=!1}))}deleteFiles(){this.isNoneSelected()||(this.deleting=!0,Promise.all(this.selection.selected.map(rec=>rec.file.delete())).then(()=>{this.ls(\".\"),this.loading=!0,this.deleting=!1}))}toggleSelection(record){record?this.selection.toggle(record):this.isNoneSelected()?this.allRecords.forEach(record=>this.selection.select(record)):this.selection.clear()}isSelected(record){return this.selection.isSelected(record)}isAllSelected(){return this.allRecords.length>0&&this.allRecords.length===this.selection.selected.length}isPartlySelected(){return this.selection.selected.length>0&&!this.isAllSelected()}isNoneSelected(){return 0===this.allRecords.length||this.selection.selected.length<=0}togglePreview(record){var _a,_b;this.previewRecord=this.previewRecord===record?null:(null===(_b=null===(_a=record.data)||void 0===_a?void 0:_a.contentType)||void 0===_b?void 0:_b.startsWith(\"image\"))?record:null}}return UploadsComponent.ɵfac=function(t){return new(t||UploadsComponent)(core.Qb(storage.b),core.Qb(lib_auth.c),core.Qb(esm2015_core.g))},UploadsComponent.ɵcmp=core.Kb({type:UploadsComponent,selectors:[[\"wm-uploads\"]],features:[core.Ab],decls:1,vars:1,consts:[[\"gtag\",\"uploads\",4,\"wmContent\",\"wmContentSelect\"],[\"gtag\",\"uploads\"],[\"wmActionbar\",\"\"],[\"mat-table\",\"\",\"multiTemplateDataRows\",\"\",\"matSort\",\"\",\"fxFill\",\"\",3,\"dataSource\",\"matSortActive\",\"matSortDirection\",\"matSortDisabled\",\"matSortChange\"],[\"matColumnDef\",\"select\"],[\"mat-header-cell\",\"\",4,\"matHeaderCellDef\"],[\"mat-cell\",\"\",3,\"click\",4,\"matCellDef\"],[\"matColumnDef\",\"name\"],[\"mat-header-cell\",\"\",\"mat-sort-header\",\"\",4,\"matHeaderCellDef\"],[\"mat-cell\",\"\",4,\"matCellDef\"],[\"matColumnDef\",\"size\"],[\"mat-header-cell\",\"\",\"mat-sort-header\",\"\",\"class\",\"center\",4,\"matHeaderCellDef\"],[\"mat-cell\",\"\",\"class\",\"center\",4,\"matCellDef\"],[\"matColumnDef\",\"type\"],[\"matColumnDef\",\"updated\"],[\"matColumnDef\",\"download\"],[\"mat-header-cell\",\"\",\"class\",\"center\",4,\"matHeaderCellDef\"],[\"mat-cell\",\"\",\"class\",\"center\",3,\"click\",4,\"matCellDef\"],[\"matColumnDef\",\"preview\"],[\"mat-header-row\",\"\",\"class\",\"background-color\",4,\"matHeaderRowDef\"],[\"mat-row\",\"\",\"class\",\"background-color background-active\",3,\"click\",4,\"matRowDef\",\"matRowDefColumns\"],[\"mat-row\",\"\",\"class\",\"background-color\",4,\"matRowDef\",\"matRowDefColumns\"],[\"color\",\"prinary\",\"mode\",\"indeterminate\",\"diameter\",\"20\",4,\"ngIf\"],[3,\"closedChange\"],[\"confirmDelete\",\"\"],[\"mat-dialog-title\",\"\"],[3,\"wm-readme\"],[\"align\",\"end\"],[\"mat-button\",\"\",\"color\",\"primary\",\"cdkFocusInitial\",\"\",3,\"mat-dialog-close\"],[\"mat-button\",\"\",\"color\",\"warn\",3,\"mat-dialog-close\"],[\"mat-stroked-button\",\"\",\"type.lt-sm\",\"icon\",3,\"color\",\"disabled\",\"click\"],[3,\"icon\",4,\"ngIf\",\"ngIfElse\"],[\"deleteTemplate\",\"\"],[\"type\",\"file\",\"accept\",\"image/*\",\"multiple\",\"\",2,\"display\",\"none\",3,\"change\"],[\"openfile\",\"\"],[3,\"opened\",\"closedChange\"],[\"confirmOverwrite\",\"\"],[\"mat-button\",\"\",3,\"color\",\"type\",\"disabled\",\"click\"],[\"uploadTemplate\",\"\"],[\"color\",\"prinary\",\"mode\",\"indeterminate\",\"diameter\",\"20\"],[3,\"icon\"],[\"mat-header-cell\",\"\"],[3,\"checked\",\"indeterminate\",\"disabled\",\"click\"],[\"mat-cell\",\"\",3,\"click\"],[3,\"checked\",\"disabled\",\"click\"],[\"mat-header-cell\",\"\",\"mat-sort-header\",\"\"],[\"mat-cell\",\"\"],[\"matBadgeSize\",\"small\",\"matBadgeOverlap\",\"false\",\"matBadgeColor\",\"warn\",3,\"matBadge\",\"matBadgeHidden\"],[\"mat-header-cell\",\"\",\"mat-sort-header\",\"\",1,\"center\"],[\"mat-cell\",\"\",1,\"center\"],[\"fxLayout\",\"row\",\"fxLayoutAlign\",\"center center\",4,\"ngIf\",\"ngIfElse\"],[\"updatedTemplate\",\"\"],[\"fxLayout\",\"row\",\"fxLayoutAlign\",\"center center\"],[3,\"value\",\"mode\"],[\"mat-icon-button\",\"\",3,\"disabled\",\"click\"],[\"inline\",\"\"],[\"mat-header-cell\",\"\",1,\"center\"],[\"mat-cell\",\"\",1,\"center\",3,\"click\"],[\"mat-icon-button\",\"\",\"target\",\"_blank\",3,\"href\",\"download\",\"disabled\",\"title\"],[\"dwld\",\"wmDownload\"],[\"fxLayout\",\"column\",\"fxLayoutAlign\",\"center center\",\"class\",\"preview\",4,\"ngIf\"],[\"fxLayout\",\"column\",\"fxLayoutAlign\",\"center center\",1,\"preview\"],[3,\"src\"],[\"imageLoading\",\"\",\"color\",\"prinary\",\"mode\",\"indeterminate\"],[\"mat-header-row\",\"\",1,\"background-color\"],[\"mat-row\",\"\",1,\"background-color\",\"background-active\",3,\"click\"],[\"mat-row\",\"\",1,\"background-color\"]],template:function(rf,ctx){1&rf&&core.Gc(0,UploadsComponent_ng_container_0_Template,29,9,\"ng-container\",0),2&rf&&core.pc(\"wmContentSelect\",\"settings-uploads\")},directives:[content_directive.a,gtag_directive.a,actionbar_directive.a,divider.a,table_MatTable,sort_MatSort,flex.g,table_MatColumnDef,table_MatHeaderCellDef,table_MatCellDef,table_MatHeaderRowDef,table_MatRowDef,common.m,dialog_component.a,fesm2015_dialog.h,fesm2015_dialog.e,readme_component.a,fesm2015_dialog.c,fesm2015_button.b,fesm2015_dialog.d,button_media_changer_directive.a,button_changer_directive.a,progress_spinner.a,icon_component.a,table_MatHeaderCell,checkbox_MatCheckbox,table_MatCell,sort_MatSortHeader,badge.a,flex.e,flex.d,progress_bar.a,icon.a,fesm2015_button.a,download_directive_DownloadDirective,image_component_ImageComponent,table_MatHeaderRow,table_MatRow],pipes:[moment_pipe.d,file_size_pipe_FileSizePipe,common.b,moment_pipe.c],styles:[\"[_nghost-%COMP%]{display:flex;position:relative;flex-flow:column;justify-content:center}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{margin-bottom:16px}[_nghost-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(2n){height:0}[_nghost-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd)   td[_ngcontent-%COMP%]{border-bottom-width:0}[_nghost-%COMP%]   .preview[_ngcontent-%COMP%]{overflow:hidden;height:240px;margin:16px 0}[_nghost-%COMP%]   .preview[_ngcontent-%COMP%]   .wm-image[_ngcontent-%COMP%]{max-height:240px;max-width:100%}\"],data:{animation:$animations}}),UploadsComponent})();__webpack_require__(\"J3Me\");const routes=[{path:\"\",content:\"settings-uploads\",component:uploads_component_UploadsComponent}];let uploads_module_UploadsModule=(()=>{class UploadsModule{}return UploadsModule.ɵmod=core.Ob({type:UploadsModule}),UploadsModule.ɵinj=core.Nb({factory:function(t){return new(t||UploadsModule)},providers:[{provide:MAT_CHECKBOX_DEFAULT_OPTIONS,useValue:{clickAction:\"noop\"}}],imports:[[common.c,flex_layout.a,table_MatTableModule,sort_MatSortModule,divider.b,icon.b,fesm2015_button.c,checkbox_MatCheckboxModule,badge.b,progress_bar.b,progress_spinner.b,src.a,dialog.b,readme_src.a,lib_icon.a,image_module_ImageModule,lib_button.a,actionbar.a,file_size_module_FileSizePipeModule,moment.a,download_module_DownloadModule,content_src.e.forChild(routes)]]}),UploadsModule})()}}]);","name":"36-es2015.e25cae5956e76f77ecdf.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[36],{\n\n/***/ \"vyJ5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"UploadsModule\", function() { return /* binding */ uploads_module_UploadsModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/fesm2015/common.js\nvar common = __webpack_require__(\"SVse\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex-layout.js + 1 modules\nvar flex_layout = __webpack_require__(\"u9T3\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/coercion.js\nvar coercion = __webpack_require__(\"8LU1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/collections.js\nvar collections = __webpack_require__(\"CtHx\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/fesm2015/core.js\nvar core = __webpack_require__(\"8Y7J\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/bidi.js\nvar bidi = __webpack_require__(\"9gLZ\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/platform.js\nvar platform = __webpack_require__(\"SCoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/scrolling.js + 1 modules\nvar scrolling = __webpack_require__(\"7KAL\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/from.js\nvar from = __webpack_require__(\"Cfvw\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/isObservable.js\nvar isObservable = __webpack_require__(\"7+OI\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js\nvar takeUntil = __webpack_require__(\"1G5W\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/take.js\nvar take = __webpack_require__(\"IzEk\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/cdk/fesm2015/table.js\n\n\n\n\n\n\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 3);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Dc\" /* ɵɵstyleProp */](\"text-align\", ctx_r0.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r0.headerText, \" \");\n    }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const data_r2 = ctx.$implicit;\n        const ctx_r1 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Dc\" /* ɵɵstyleProp */](\"text-align\", ctx_r1.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n    }\n}\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('text-column-options');\nlet table_CdkCellDef = /*@__PURE__*/ (() => {\n    class CdkCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */])); };\n    CdkCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n    return CdkCellDef;\n})();\nlet table_CdkHeaderCellDef = /*@__PURE__*/ (() => {\n    class CdkHeaderCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */])); };\n    CdkHeaderCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n    return CdkHeaderCellDef;\n})();\nlet table_CdkFooterCellDef = /*@__PURE__*/ (() => {\n    class CdkFooterCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */])); };\n    CdkFooterCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n    return CdkFooterCellDef;\n})();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkColumnDefBase);\nlet table_CdkColumnDef = /*@__PURE__*/ (() => {\n    class CdkColumnDef extends _CdkColumnDefBase {\n        constructor(_table) {\n            super();\n            this._table = _table;\n            this._stickyEnd = false;\n        }\n        /** Unique name for this column. */\n        get name() { return this._name; }\n        set name(name) { this._setNameInput(name); }\n        /**\n         * Whether this column should be sticky positioned on the end of the row. Should make sure\n         * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n         * has been changed.\n         */\n        get stickyEnd() {\n            return this._stickyEnd;\n        }\n        set stickyEnd(v) {\n            const prevValue = this._stickyEnd;\n            this._stickyEnd = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            this._hasStickyChanged = prevValue !== this._stickyEnd;\n        }\n        /**\n         * Overridable method that sets the css classes that will be added to every cell in this\n         * column.\n         * In the future, columnCssClassName will change from type string[] to string and this\n         * will set a single string value.\n         * @docs-private\n         */\n        _updateColumnCssClassName() {\n            this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n        }\n        /**\n         * This has been extracted to a util because of TS 4 and VE.\n         * View Engine doesn't support property rename inheritance.\n         * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n         * @docs-private\n         */\n        _setNameInput(value) {\n            // If the directive is set without a name (updated programatically), then this setter will\n            // trigger with an empty string and should not overwrite the programatically set value.\n            if (value) {\n                this._name = value;\n                this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n                this._updateColumnCssClassName();\n            }\n        }\n    }\n    CdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(core[\"Qb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkColumnDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkCellDef, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkHeaderCellDef, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkFooterCellDef, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.cell = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.headerCell = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.footerCell = _t.first);\n            }\n        }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkColumnDef;\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\nlet table_CdkHeaderCell = /*@__PURE__*/ (() => {\n    class CdkHeaderCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(core[\"Qb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkHeaderCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkHeaderCell;\n})();\nlet table_CdkFooterCell = /*@__PURE__*/ (() => {\n    class CdkFooterCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(core[\"Qb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkFooterCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkFooterCell;\n})();\nlet table_CdkCell = /*@__PURE__*/ (() => {\n    class CdkCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(core[\"Qb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkCell;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('_COALESCED_STYLE_SCHEDULER');\nlet table_CoalescedStyleScheduler = /*@__PURE__*/ (() => {\n    class _CoalescedStyleScheduler {\n        constructor(_ngZone) {\n            this._ngZone = _ngZone;\n            this._currentSchedule = null;\n            this._destroyed = new Subject[\"a\" /* Subject */]();\n        }\n        /**\n         * Schedules the specified task to run at the end of the current VM turn.\n         */\n        schedule(task) {\n            this._createScheduleIfNeeded();\n            this._currentSchedule.tasks.push(task);\n        }\n        /**\n         * Schedules the specified task to run after other scheduled tasks at the end of the current\n         * VM turn.\n         */\n        scheduleEnd(task) {\n            this._createScheduleIfNeeded();\n            this._currentSchedule.endTasks.push(task);\n        }\n        /** Prevent any further tasks from running. */\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        _createScheduleIfNeeded() {\n            if (this._currentSchedule) {\n                return;\n            }\n            this._currentSchedule = new _Schedule();\n            this._getScheduleObservable().pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed)).subscribe(() => {\n                while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                    const schedule = this._currentSchedule;\n                    // Capture new tasks scheduled by the current set of tasks.\n                    this._currentSchedule = new _Schedule();\n                    for (const task of schedule.tasks) {\n                        task();\n                    }\n                    for (const task of schedule.endTasks) {\n                        task();\n                    }\n                }\n                this._currentSchedule = null;\n            });\n        }\n        _getScheduleObservable() {\n            // Use onStable when in the context of an ongoing change detection cycle so that we\n            // do not accidentally trigger additional cycles.\n            return this._ngZone.isStable ?\n                Object(from[\"a\" /* from */])(Promise.resolve(undefined)) :\n                this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1));\n        }\n    }\n    _CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(core[\"ac\" /* ɵɵinject */](core[\"B\" /* NgZone */])); };\n    _CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjectable */]({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n    return _CoalescedStyleScheduler;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\nlet table_BaseRowDef = /*@__PURE__*/ (() => {\n    class BaseRowDef {\n        constructor(\n        /** @docs-private */ template, _differs) {\n            this.template = template;\n            this._differs = _differs;\n        }\n        ngOnChanges(changes) {\n            // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n            // of the columns property or an empty array if none is provided.\n            if (!this._columnsDiffer) {\n                const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n                this._columnsDiffer = this._differs.find(columns).create();\n                this._columnsDiffer.diff(columns);\n            }\n        }\n        /**\n         * Returns the difference between the current columns and the columns from the last diff, or null\n         * if there is no difference.\n         */\n        getColumnsDiff() {\n            return this._columnsDiffer.diff(this.columns);\n        }\n        /** Gets this row def's relevant cell template from the provided column def. */\n        extractCellTemplate(column) {\n            if (this instanceof table_CdkHeaderRowDef) {\n                return column.headerCell.template;\n            }\n            if (this instanceof table_CdkFooterRowDef) {\n                return column.footerCell.template;\n            }\n            else {\n                return column.cell.template;\n            }\n        }\n    }\n    BaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */])); };\n    BaseRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: BaseRowDef, features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return BaseRowDef;\n})();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends table_BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkHeaderRowDefBase);\nlet table_CdkHeaderRowDef = /*@__PURE__*/ (() => {\n    class CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n        // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n        // Explicitly define it so that the method is called as part of the Angular lifecycle.\n        ngOnChanges(changes) {\n            super.ngOnChanges(changes);\n        }\n    }\n    CdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Qb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkHeaderRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return CdkHeaderRowDef;\n})();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends table_BaseRowDef {\n}\nconst _CdkFooterRowDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkFooterRowDefBase);\nlet table_CdkFooterRowDef = /*@__PURE__*/ (() => {\n    class CdkFooterRowDef extends _CdkFooterRowDefBase {\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n        // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n        // Explicitly define it so that the method is called as part of the Angular lifecycle.\n        ngOnChanges(changes) {\n            super.ngOnChanges(changes);\n        }\n    }\n    CdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Qb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkFooterRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return CdkFooterRowDef;\n})();\nlet table_CdkRowDef = /*@__PURE__*/ (() => {\n    class CdkRowDef extends table_BaseRowDef {\n        // TODO(andrewseguin): Add an input for providing a switch function to determine\n        //   if this template should be used.\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n    }\n    CdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Qb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkRowDef;\n})();\nlet table_CdkCellOutlet = /*@__PURE__*/ (() => {\n    class CdkCellOutlet {\n        constructor(_viewContainer) {\n            this._viewContainer = _viewContainer;\n            CdkCellOutlet.mostRecentCellOutlet = this;\n        }\n        ngOnDestroy() {\n            // If this was the last outlet being rendered in the view, remove the reference\n            // from the static property after it has been destroyed to avoid leaking memory.\n            if (CdkCellOutlet.mostRecentCellOutlet === this) {\n                CdkCellOutlet.mostRecentCellOutlet = null;\n            }\n        }\n    }\n    CdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */])); };\n    CdkCellOutlet.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    CdkCellOutlet.mostRecentCellOutlet = null;\n    return CdkCellOutlet;\n})();\nlet table_CdkHeaderRow = /*@__PURE__*/ (() => {\n    class CdkHeaderRow {\n    }\n    CdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\n    CdkHeaderRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkHeaderRow;\n})();\nlet table_CdkFooterRow = /*@__PURE__*/ (() => {\n    class CdkFooterRow {\n    }\n    CdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\n    CdkFooterRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkFooterRow;\n})();\nlet table_CdkRow = /*@__PURE__*/ (() => {\n    class CdkRow {\n    }\n    CdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\n    CdkRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkRow;\n})();\nlet table_CdkNoDataRow = /*@__PURE__*/ (() => {\n    class CdkNoDataRow {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    }\n    CdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"O\" /* TemplateRef */])); };\n    CdkNoDataRow.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\n    return CdkNoDataRow;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            stickyOffsets[rowIndex] = stickyOffset;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('CDK_SPL');\nlet table_DataRowOutlet = /*@__PURE__*/ (() => {\n    class DataRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    DataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    DataRowOutlet.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n    return DataRowOutlet;\n})();\nlet table_HeaderRowOutlet = /*@__PURE__*/ (() => {\n    class HeaderRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    HeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    HeaderRowOutlet.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n    return HeaderRowOutlet;\n})();\nlet table_FooterRowOutlet = /*@__PURE__*/ (() => {\n    class FooterRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    FooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    FooterRowOutlet.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n    return FooterRowOutlet;\n})();\nlet table_NoDataRowOutlet = /*@__PURE__*/ (() => {\n    class NoDataRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    NoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    NoDataRowOutlet.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\n    return NoDataRowOutlet;\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass table_RowViewRef extends core[\"m\" /* EmbeddedViewRef */] {\n}\nlet table_CdkTable = /*@__PURE__*/ (() => {\n    class CdkTable {\n        constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n        /**\n         * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n         *    parameters to become required.\n         * @breaking-change 11.0.0\n         */\n        _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \n        // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n        // this property will never be null.\n        // tslint:disable-next-line: lightweight-tokens\n        _viewportRuler) {\n            this._differs = _differs;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            this._dir = _dir;\n            this._platform = _platform;\n            this._viewRepeater = _viewRepeater;\n            this._coalescedStyleScheduler = _coalescedStyleScheduler;\n            this._stickyPositioningListener = _stickyPositioningListener;\n            this._viewportRuler = _viewportRuler;\n            /** Subject that emits when the component has been destroyed. */\n            this._onDestroy = new Subject[\"a\" /* Subject */]();\n            /**\n             * Map of all the user's defined columns (header, data, and footer cell template) identified by\n             * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n             * any custom column definitions added to `_customColumnDefs`.\n             */\n            this._columnDefsByName = new Map();\n            /**\n             * Column definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * column definitions as *its* content child.\n             */\n            this._customColumnDefs = new Set();\n            /**\n             * Data row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * built-in data rows as *its* content child.\n             */\n            this._customRowDefs = new Set();\n            /**\n             * Header row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * built-in header rows as *its* content child.\n             */\n            this._customHeaderRowDefs = new Set();\n            /**\n             * Footer row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n             * built-in footer row as *its* content child.\n             */\n            this._customFooterRowDefs = new Set();\n            /**\n             * Whether the header row definition has been changed. Triggers an update to the header row after\n             * content is checked. Initialized as true so that the table renders the initial set of rows.\n             */\n            this._headerRowDefChanged = true;\n            /**\n             * Whether the footer row definition has been changed. Triggers an update to the footer row after\n             * content is checked. Initialized as true so that the table renders the initial set of rows.\n             */\n            this._footerRowDefChanged = true;\n            /**\n             * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n             * change.\n             */\n            this._stickyColumnStylesNeedReset = true;\n            /**\n             * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n             * `false`, cached values will be used instead. This is only applicable to tables with\n             * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n             */\n            this._forceRecalculateCellWidths = true;\n            /**\n             * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n             * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n             * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n             * and row template matches, which allows the `IterableDiffer` to check rows by reference\n             * and understand which rows are added/moved/removed.\n             *\n             * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n             * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n             * contains an array of created pairs. The array is necessary to handle cases where the data\n             * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n             * stored.\n             */\n            this._cachedRenderRowsMap = new Map();\n            /**\n             * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n             * table subclasses.\n             */\n            this.stickyCssClass = 'cdk-table-sticky';\n            /**\n             * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n             * the position is set in a selector associated with the value of stickyCssClass. May be\n             * overridden by table subclasses\n             */\n            this.needsPositionStickyOnElement = true;\n            /** Whether the no data row is currently showing anything. */\n            this._isShowingNoDataRow = false;\n            this._multiTemplateDataRows = false;\n            this._fixedLayout = false;\n            // TODO(andrewseguin): Remove max value as the end index\n            //   and instead calculate the view on init and scroll.\n            /**\n             * Stream containing the latest information on what rows are being displayed on screen.\n             * Can be used by the data source to as a heuristic of what data should be provided.\n             *\n             * @docs-private\n             */\n            this.viewChange = new BehaviorSubject[\"a\" /* BehaviorSubject */]({ start: 0, end: Number.MAX_VALUE });\n            if (!role) {\n                this._elementRef.nativeElement.setAttribute('role', 'grid');\n            }\n            this._document = _document;\n            this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n        }\n        /**\n         * Tracking function that will be used to check the differences in data changes. Used similarly\n         * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n         * relative to the function to know if a row should be added/removed/moved.\n         * Accepts a function that takes two parameters, `index` and `item`.\n         */\n        get trackBy() {\n            return this._trackByFn;\n        }\n        set trackBy(fn) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n                console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n            }\n            this._trackByFn = fn;\n        }\n        /**\n         * The table's source of data, which can be provided in three ways (in order of complexity):\n         *   - Simple data array (each object represents one table row)\n         *   - Stream that emits a data array each time the array changes\n         *   - `DataSource` object that implements the connect/disconnect interface.\n         *\n         * If a data array is provided, the table must be notified when the array's objects are\n         * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n         * render the diff since the last table render. If the data array reference is changed, the table\n         * will automatically trigger an update to the rows.\n         *\n         * When providing an Observable stream, the table will trigger an update automatically when the\n         * stream emits a new array of data.\n         *\n         * Finally, when providing a `DataSource` object, the table will use the Observable stream\n         * provided by the connect function and trigger updates when that stream emits new data array\n         * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n         * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n         * subscriptions registered during the connect process).\n         */\n        get dataSource() {\n            return this._dataSource;\n        }\n        set dataSource(dataSource) {\n            if (this._dataSource !== dataSource) {\n                this._switchDataSource(dataSource);\n            }\n        }\n        /**\n         * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n         * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n         * dataobject will render the first row that evaluates its when predicate to true, in the order\n         * defined in the table, or otherwise the default row which does not have a when predicate.\n         */\n        get multiTemplateDataRows() {\n            return this._multiTemplateDataRows;\n        }\n        set multiTemplateDataRows(v) {\n            this._multiTemplateDataRows = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n            // this setter will be invoked before the row outlet has been defined hence the null check.\n            if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n                this._forceRenderDataRows();\n                this.updateStickyColumnStyles();\n            }\n        }\n        /**\n         * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n         * and optimize rendering sticky styles for native tables. No-op for flex tables.\n         */\n        get fixedLayout() {\n            return this._fixedLayout;\n        }\n        set fixedLayout(v) {\n            this._fixedLayout = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n            this._forceRecalculateCellWidths = true;\n            this._stickyColumnStylesNeedReset = true;\n        }\n        ngOnInit() {\n            this._setupStickyStyler();\n            if (this._isNativeHtmlTable) {\n                this._applyNativeTableSections();\n            }\n            // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n            // the user has provided a custom trackBy, return the result of that function as evaluated\n            // with the values of the `RenderRow`'s data and index.\n            this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n                return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n            });\n            // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n            // refresh its cache of cell widths the next time sticky styles are updated.\n            // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n            if (this._viewportRuler) {\n                this._viewportRuler.change().pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy)).subscribe(() => {\n                    this._forceRecalculateCellWidths = true;\n                });\n            }\n        }\n        ngAfterContentChecked() {\n            // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n            this._cacheRowDefs();\n            this._cacheColumnDefs();\n            // Make sure that the user has at least added header, footer, or data row def.\n            if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMissingRowDefsError();\n            }\n            // Render updates if the list of columns have been changed for the header, row, or footer defs.\n            const columnsChanged = this._renderUpdatedColumns();\n            const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n            // Ensure sticky column styles are reset if set to `true` elsewhere.\n            this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n            this._forceRecalculateCellWidths = rowDefsChanged;\n            // If the header row definition has been changed, trigger a render to the header row.\n            if (this._headerRowDefChanged) {\n                this._forceRenderHeaderRows();\n                this._headerRowDefChanged = false;\n            }\n            // If the footer row definition has been changed, trigger a render to the footer row.\n            if (this._footerRowDefChanged) {\n                this._forceRenderFooterRows();\n                this._footerRowDefChanged = false;\n            }\n            // If there is a data source and row definitions, connect to the data source unless a\n            // connection has already been made.\n            if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n                this._observeRenderChanges();\n            }\n            else if (this._stickyColumnStylesNeedReset) {\n                // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n                // called when it row data arrives. Otherwise, we need to call it proactively.\n                this.updateStickyColumnStyles();\n            }\n            this._checkStickyStates();\n        }\n        ngOnDestroy() {\n            this._rowOutlet.viewContainer.clear();\n            this._noDataRowOutlet.viewContainer.clear();\n            this._headerRowOutlet.viewContainer.clear();\n            this._footerRowOutlet.viewContainer.clear();\n            this._cachedRenderRowsMap.clear();\n            this._onDestroy.next();\n            this._onDestroy.complete();\n            if (Object(collections[\"h\" /* isDataSource */])(this.dataSource)) {\n                this.dataSource.disconnect(this);\n            }\n        }\n        /**\n         * Renders rows based on the table's latest set of data, which was either provided directly as an\n         * input or retrieved through an Observable stream (directly or from a DataSource).\n         * Checks for differences in the data since the last diff to perform only the necessary\n         * changes (add/remove/move rows).\n         *\n         * If the table's data source is a DataSource or Observable, this will be invoked automatically\n         * each time the provided Observable stream emits a new data array. Otherwise if your data is\n         * an array, this function will need to be called to render any changes.\n         */\n        renderRows() {\n            this._renderRows = this._getAllRenderRows();\n            const changes = this._dataDiffer.diff(this._renderRows);\n            if (!changes) {\n                this._updateNoDataRow();\n                return;\n            }\n            const viewContainer = this._rowOutlet.viewContainer;\n            // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n            // `else` clause once `_viewRepeater` is turned into a required parameter.\n            if (this._viewRepeater) {\n                this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                    if (change.operation === 1 /* INSERTED */ && change.context) {\n                        this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                    }\n                });\n            }\n            else {\n                changes.forEachOperation((record, prevIndex, currentIndex) => {\n                    if (record.previousIndex == null) {\n                        const renderRow = record.item;\n                        const rowDef = renderRow.rowDef;\n                        const context = { $implicit: renderRow.data };\n                        this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                    }\n                    else if (currentIndex == null) {\n                        viewContainer.remove(prevIndex);\n                    }\n                    else {\n                        const view = viewContainer.get(prevIndex);\n                        viewContainer.move(view, currentIndex);\n                    }\n                });\n            }\n            // Update the meta context of a row's context data (index, count, first, last, ...)\n            this._updateRowIndexContext();\n            // Update rows that did not get added/removed/moved but may have had their identity changed,\n            // e.g. if trackBy matched data on some property but the actual data reference changed.\n            changes.forEachIdentityChange((record) => {\n                const rowView = viewContainer.get(record.currentIndex);\n                rowView.context.$implicit = record.item.data;\n            });\n            this._updateNoDataRow();\n            this.updateStickyColumnStyles();\n        }\n        /** Adds a column definition that was not included as part of the content children. */\n        addColumnDef(columnDef) {\n            this._customColumnDefs.add(columnDef);\n        }\n        /** Removes a column definition that was not included as part of the content children. */\n        removeColumnDef(columnDef) {\n            this._customColumnDefs.delete(columnDef);\n        }\n        /** Adds a row definition that was not included as part of the content children. */\n        addRowDef(rowDef) {\n            this._customRowDefs.add(rowDef);\n        }\n        /** Removes a row definition that was not included as part of the content children. */\n        removeRowDef(rowDef) {\n            this._customRowDefs.delete(rowDef);\n        }\n        /** Adds a header row definition that was not included as part of the content children. */\n        addHeaderRowDef(headerRowDef) {\n            this._customHeaderRowDefs.add(headerRowDef);\n            this._headerRowDefChanged = true;\n        }\n        /** Removes a header row definition that was not included as part of the content children. */\n        removeHeaderRowDef(headerRowDef) {\n            this._customHeaderRowDefs.delete(headerRowDef);\n            this._headerRowDefChanged = true;\n        }\n        /** Adds a footer row definition that was not included as part of the content children. */\n        addFooterRowDef(footerRowDef) {\n            this._customFooterRowDefs.add(footerRowDef);\n            this._footerRowDefChanged = true;\n        }\n        /** Removes a footer row definition that was not included as part of the content children. */\n        removeFooterRowDef(footerRowDef) {\n            this._customFooterRowDefs.delete(footerRowDef);\n            this._footerRowDefChanged = true;\n        }\n        /** Sets a no data row definition that was not included as a part of the content children. */\n        setNoDataRow(noDataRow) {\n            this._customNoDataRow = noDataRow;\n        }\n        /**\n         * Updates the header sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n         * automatically called when the header row changes its displayed set of columns, or if its\n         * sticky input changes. May be called manually for cases where the cell content changes outside\n         * of these events.\n         */\n        updateStickyHeaderRowStyles() {\n            const headerRows = this._getRenderedRows(this._headerRowOutlet);\n            const tableElement = this._elementRef.nativeElement;\n            // Hide the thead element if there are no header rows. This is necessary to satisfy\n            // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n            // required child `row`.\n            const thead = tableElement.querySelector('thead');\n            if (thead) {\n                thead.style.display = headerRows.length ? '' : 'none';\n            }\n            const stickyStates = this._headerRowDefs.map(def => def.sticky);\n            this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n            this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n            // Reset the dirty state of the sticky input change since it has been used.\n            this._headerRowDefs.forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n         * automatically called when the footer row changes its displayed set of columns, or if its\n         * sticky input changes. May be called manually for cases where the cell content changes outside\n         * of these events.\n         */\n        updateStickyFooterRowStyles() {\n            const footerRows = this._getRenderedRows(this._footerRowOutlet);\n            const tableElement = this._elementRef.nativeElement;\n            // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n            // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n            // required child `row`.\n            const tfoot = tableElement.querySelector('tfoot');\n            if (tfoot) {\n                tfoot.style.display = footerRows.length ? '' : 'none';\n            }\n            const stickyStates = this._footerRowDefs.map(def => def.sticky);\n            this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n            this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n            this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n            // Reset the dirty state of the sticky input change since it has been used.\n            this._footerRowDefs.forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Updates the column sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the left and right. Then sticky styles are added for the left and right according\n         * to the column definitions for each cell in each row. This is automatically called when\n         * the data source provides a new set of data or when a column definition changes its sticky\n         * input. May be called manually for cases where the cell content changes outside of these events.\n         */\n        updateStickyColumnStyles() {\n            const headerRows = this._getRenderedRows(this._headerRowOutlet);\n            const dataRows = this._getRenderedRows(this._rowOutlet);\n            const footerRows = this._getRenderedRows(this._footerRowOutlet);\n            // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n            // In a table using a fixed layout, row content won't affect column width, so sticky styles\n            // don't need to be cleared unless either the sticky column config changes or one of the row\n            // defs change.\n            if ((this._isNativeHtmlTable && !this._fixedLayout)\n                || this._stickyColumnStylesNeedReset) {\n                // Clear the left and right positioning from all columns in the table across all rows since\n                // sticky columns span across all table sections (header, data, footer)\n                this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n                this._stickyColumnStylesNeedReset = false;\n            }\n            // Update the sticky styles for each header row depending on the def's sticky state\n            headerRows.forEach((headerRow, i) => {\n                this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n            });\n            // Update the sticky styles for each data row depending on its def's sticky state\n            this._rowDefs.forEach(rowDef => {\n                // Collect all the rows rendered with this row definition.\n                const rows = [];\n                for (let i = 0; i < dataRows.length; i++) {\n                    if (this._renderRows[i].rowDef === rowDef) {\n                        rows.push(dataRows[i]);\n                    }\n                }\n                this._addStickyColumnStyles(rows, rowDef);\n            });\n            // Update the sticky styles for each footer row depending on the def's sticky state\n            footerRows.forEach((footerRow, i) => {\n                this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n            });\n            // Reset the dirty state of the sticky input change since it has been used.\n            Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Get the list of RenderRow objects to render according to the current list of data and defined\n         * row definitions. If the previous list already contained a particular pair, it should be reused\n         * so that the differ equates their references.\n         */\n        _getAllRenderRows() {\n            const renderRows = [];\n            // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n            // new cache while unused ones can be picked up by garbage collection.\n            const prevCachedRenderRows = this._cachedRenderRowsMap;\n            this._cachedRenderRowsMap = new Map();\n            // For each data object, get the list of rows that should be rendered, represented by the\n            // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n            for (let i = 0; i < this._data.length; i++) {\n                let data = this._data[i];\n                const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n                if (!this._cachedRenderRowsMap.has(data)) {\n                    this._cachedRenderRowsMap.set(data, new WeakMap());\n                }\n                for (let j = 0; j < renderRowsForData.length; j++) {\n                    let renderRow = renderRowsForData[j];\n                    const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                    if (cache.has(renderRow.rowDef)) {\n                        cache.get(renderRow.rowDef).push(renderRow);\n                    }\n                    else {\n                        cache.set(renderRow.rowDef, [renderRow]);\n                    }\n                    renderRows.push(renderRow);\n                }\n            }\n            return renderRows;\n        }\n        /**\n         * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n         * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n         * `(T, CdkRowDef)` pair.\n         */\n        _getRenderRowsForData(data, dataIndex, cache) {\n            const rowDefs = this._getRowDefs(data, dataIndex);\n            return rowDefs.map(rowDef => {\n                const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n                if (cachedRenderRows.length) {\n                    const dataRow = cachedRenderRows.shift();\n                    dataRow.dataIndex = dataIndex;\n                    return dataRow;\n                }\n                else {\n                    return { data, rowDef, dataIndex };\n                }\n            });\n        }\n        /** Update the map containing the content's column definitions. */\n        _cacheColumnDefs() {\n            this._columnDefsByName.clear();\n            const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n            columnDefs.forEach(columnDef => {\n                if (this._columnDefsByName.has(columnDef.name) &&\n                    (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableDuplicateColumnNameError(columnDef.name);\n                }\n                this._columnDefsByName.set(columnDef.name, columnDef);\n            });\n        }\n        /** Update the list of all available row definitions that can be used. */\n        _cacheRowDefs() {\n            this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n            this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n            this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n            // After all row definitions are determined, find the row definition to be considered default.\n            const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n            if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMultipleDefaultRowDefsError();\n            }\n            this._defaultRowDef = defaultRowDefs[0];\n        }\n        /**\n         * Check if the header, data, or footer rows have changed what columns they want to display or\n         * whether the sticky states have changed for the header or footer. If there is a diff, then\n         * re-render that section.\n         */\n        _renderUpdatedColumns() {\n            const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n            // Force re-render data rows if the list of column definitions have changed.\n            const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n            if (dataColumnsChanged) {\n                this._forceRenderDataRows();\n            }\n            // Force re-render header/footer rows if the list of column definitions have changed.\n            const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n            if (headerColumnsChanged) {\n                this._forceRenderHeaderRows();\n            }\n            const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n            if (footerColumnsChanged) {\n                this._forceRenderFooterRows();\n            }\n            return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n        }\n        /**\n         * Switch to the provided data source by resetting the data and unsubscribing from the current\n         * render change subscription if one exists. If the data source is null, interpret this by\n         * clearing the row outlet. Otherwise start listening for new data.\n         */\n        _switchDataSource(dataSource) {\n            this._data = [];\n            if (Object(collections[\"h\" /* isDataSource */])(this.dataSource)) {\n                this.dataSource.disconnect(this);\n            }\n            // Stop listening for data from the previous data source.\n            if (this._renderChangeSubscription) {\n                this._renderChangeSubscription.unsubscribe();\n                this._renderChangeSubscription = null;\n            }\n            if (!dataSource) {\n                if (this._dataDiffer) {\n                    this._dataDiffer.diff([]);\n                }\n                this._rowOutlet.viewContainer.clear();\n            }\n            this._dataSource = dataSource;\n        }\n        /** Set up a subscription for the data provided by the data source. */\n        _observeRenderChanges() {\n            // If no data source has been set, there is nothing to observe for changes.\n            if (!this.dataSource) {\n                return;\n            }\n            let dataStream;\n            if (Object(collections[\"h\" /* isDataSource */])(this.dataSource)) {\n                dataStream = this.dataSource.connect(this);\n            }\n            else if (Object(isObservable[\"a\" /* isObservable */])(this.dataSource)) {\n                dataStream = this.dataSource;\n            }\n            else if (Array.isArray(this.dataSource)) {\n                dataStream = Object(of[\"a\" /* of */])(this.dataSource);\n            }\n            if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownDataSourceError();\n            }\n            this._renderChangeSubscription = dataStream.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy))\n                .subscribe(data => {\n                this._data = data || [];\n                this.renderRows();\n            });\n        }\n        /**\n         * Clears any existing content in the header row outlet and creates a new embedded view\n         * in the outlet using the header row definition.\n         */\n        _forceRenderHeaderRows() {\n            // Clear the header row outlet if any content exists.\n            if (this._headerRowOutlet.viewContainer.length > 0) {\n                this._headerRowOutlet.viewContainer.clear();\n            }\n            this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n            this.updateStickyHeaderRowStyles();\n        }\n        /**\n         * Clears any existing content in the footer row outlet and creates a new embedded view\n         * in the outlet using the footer row definition.\n         */\n        _forceRenderFooterRows() {\n            // Clear the footer row outlet if any content exists.\n            if (this._footerRowOutlet.viewContainer.length > 0) {\n                this._footerRowOutlet.viewContainer.clear();\n            }\n            this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n            this.updateStickyFooterRowStyles();\n        }\n        /** Adds the sticky column styles for the rows according to the columns' stick states. */\n        _addStickyColumnStyles(rows, rowDef) {\n            const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n                const columnDef = this._columnDefsByName.get(columnName);\n                if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableUnknownColumnError(columnName);\n                }\n                return columnDef;\n            });\n            const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n            const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n            this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n        }\n        /** Gets the list of rows that have been rendered in the row outlet. */\n        _getRenderedRows(rowOutlet) {\n            const renderedRows = [];\n            for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n                const viewRef = rowOutlet.viewContainer.get(i);\n                renderedRows.push(viewRef.rootNodes[0]);\n            }\n            return renderedRows;\n        }\n        /**\n         * Get the matching row definitions that should be used for this row data. If there is only\n         * one row definition, it is returned. Otherwise, find the row definitions that has a when\n         * predicate that returns true with the data. If none return true, return the default row\n         * definition.\n         */\n        _getRowDefs(data, dataIndex) {\n            if (this._rowDefs.length == 1) {\n                return [this._rowDefs[0]];\n            }\n            let rowDefs = [];\n            if (this.multiTemplateDataRows) {\n                rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n            }\n            else {\n                let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n                if (rowDef) {\n                    rowDefs.push(rowDef);\n                }\n            }\n            if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMissingMatchingRowDefError(data);\n            }\n            return rowDefs;\n        }\n        _getEmbeddedViewArgs(renderRow, index) {\n            const rowDef = renderRow.rowDef;\n            const context = { $implicit: renderRow.data };\n            return {\n                templateRef: rowDef.template,\n                context,\n                index,\n            };\n        }\n        /**\n         * Creates a new row template in the outlet and fills it with the set of cell templates.\n         * Optionally takes a context to provide to the row and cells, as well as an optional index\n         * of where to place the new row template in the outlet.\n         */\n        _renderRow(outlet, rowDef, index, context = {}) {\n            // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n            const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n            this._renderCellTemplateForItem(rowDef, context);\n            return view;\n        }\n        _renderCellTemplateForItem(rowDef, context) {\n            for (let cellTemplate of this._getCellTemplates(rowDef)) {\n                if (table_CdkCellOutlet.mostRecentCellOutlet) {\n                    table_CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n        /**\n         * Updates the index-related context for each row to reflect any changes in the index of the rows,\n         * e.g. first/last/even/odd.\n         */\n        _updateRowIndexContext() {\n            const viewContainer = this._rowOutlet.viewContainer;\n            for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n                const viewRef = viewContainer.get(renderIndex);\n                const context = viewRef.context;\n                context.count = count;\n                context.first = renderIndex === 0;\n                context.last = renderIndex === count - 1;\n                context.even = renderIndex % 2 === 0;\n                context.odd = !context.even;\n                if (this.multiTemplateDataRows) {\n                    context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                    context.renderIndex = renderIndex;\n                }\n                else {\n                    context.index = this._renderRows[renderIndex].dataIndex;\n                }\n            }\n        }\n        /** Gets the column definitions for the provided row def. */\n        _getCellTemplates(rowDef) {\n            if (!rowDef || !rowDef.columns) {\n                return [];\n            }\n            return Array.from(rowDef.columns, columnId => {\n                const column = this._columnDefsByName.get(columnId);\n                if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableUnknownColumnError(columnId);\n                }\n                return rowDef.extractCellTemplate(column);\n            });\n        }\n        /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n        _applyNativeTableSections() {\n            const documentFragment = this._document.createDocumentFragment();\n            const sections = [\n                { tag: 'thead', outlets: [this._headerRowOutlet] },\n                { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n                { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n            ];\n            for (const section of sections) {\n                const element = this._document.createElement(section.tag);\n                element.setAttribute('role', 'rowgroup');\n                for (const outlet of section.outlets) {\n                    element.appendChild(outlet.elementRef.nativeElement);\n                }\n                documentFragment.appendChild(element);\n            }\n            // Use a DocumentFragment so we don't hit the DOM on each iteration.\n            this._elementRef.nativeElement.appendChild(documentFragment);\n        }\n        /**\n         * Forces a re-render of the data rows. Should be called in cases where there has been an input\n         * change that affects the evaluation of which rows should be rendered, e.g. toggling\n         * `multiTemplateDataRows` or adding/removing row definitions.\n         */\n        _forceRenderDataRows() {\n            this._dataDiffer.diff([]);\n            this._rowOutlet.viewContainer.clear();\n            this.renderRows();\n        }\n        /**\n         * Checks if there has been a change in sticky states since last check and applies the correct\n         * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n         * during a change detection and after the inputs are settled (after content check).\n         */\n        _checkStickyStates() {\n            const stickyCheckReducer = (acc, d) => {\n                return acc || d.hasStickyChanged();\n            };\n            // Note that the check needs to occur for every definition since it notifies the definition\n            // that it can reset its dirty state. Using another operator like `some` may short-circuit\n            // remaining definitions and leave them in an unchecked state.\n            if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n                this.updateStickyHeaderRowStyles();\n            }\n            if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n                this.updateStickyFooterRowStyles();\n            }\n            if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n                this._stickyColumnStylesNeedReset = true;\n                this.updateStickyColumnStyles();\n            }\n        }\n        /**\n         * Creates the sticky styler that will be used for sticky rows and columns. Listens\n         * for directionality changes and provides the latest direction to the styler. Re-applies column\n         * stickiness when directionality changes.\n         */\n        _setupStickyStyler() {\n            const direction = this._dir ? this._dir.value : 'ltr';\n            this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n            (this._dir ? this._dir.change : Object(of[\"a\" /* of */])())\n                .pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy))\n                .subscribe(value => {\n                this._stickyStyler.direction = value;\n                this.updateStickyColumnStyles();\n            });\n        }\n        /** Filters definitions that belong to this table from a QueryList. */\n        _getOwnDefs(items) {\n            return items.filter(item => !item._table || item._table === this);\n        }\n        /** Creates or removes the no data row, depending on whether any data is being shown. */\n        _updateNoDataRow() {\n            const noDataRow = this._customNoDataRow || this._noDataRow;\n            if (noDataRow) {\n                const shouldShow = this._rowOutlet.viewContainer.length === 0;\n                if (shouldShow !== this._isShowingNoDataRow) {\n                    const container = this._noDataRowOutlet.viewContainer;\n                    shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                    this._isShowingNoDataRow = shouldShow;\n                }\n            }\n        }\n    }\n    CdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"bc\" /* ɵɵinjectAttribute */]('role'), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](common[\"d\" /* DOCUMENT */]), core[\"Qb\" /* ɵɵdirectiveInject */](platform[\"a\" /* Platform */]), core[\"Qb\" /* ɵɵdirectiveInject */](collections[\"g\" /* _VIEW_REPEATER_STRATEGY */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](_COALESCED_STYLE_SCHEDULER, 8), core[\"Qb\" /* ɵɵdirectiveInject */](STICKY_POSITIONING_LISTENER, 12), core[\"Qb\" /* ɵɵdirectiveInject */](scrolling[\"h\" /* ViewportRuler */], 8)); };\n    CdkTable.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkNoDataRow, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkColumnDef, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkRowDef, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkHeaderRowDef, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, table_CdkFooterRowDef, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._noDataRow = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._contentColumnDefs = _t);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._contentRowDefs = _t);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._contentHeaderRowDefs = _t);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._contentFooterRowDefs = _t);\n            }\n        }, viewQuery: function CdkTable_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](table_DataRowOutlet, 3);\n                core[\"Lc\" /* ɵɵviewQuery */](table_HeaderRowOutlet, 3);\n                core[\"Lc\" /* ɵɵviewQuery */](table_FooterRowOutlet, 3);\n                core[\"Lc\" /* ɵɵviewQuery */](table_NoDataRowOutlet, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._rowOutlet = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._headerRowOutlet = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._footerRowOutlet = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._noDataRowOutlet = _t.first);\n            }\n        }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Ib\" /* ɵɵclassProp */](\"cdk-table-fixed-layout\", ctx.fixedLayout);\n            }\n        }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: CDK_TABLE, useExisting: CdkTable },\n                { provide: collections[\"g\" /* _VIEW_REPEATER_STRATEGY */], useClass: collections[\"e\" /* _DisposeViewRepeaterStrategy */] },\n                { provide: _COALESCED_STYLE_SCHEDULER, useClass: table_CoalescedStyleScheduler },\n                // Prevent nested tables from seeing this table's StickyPositioningListener.\n                { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n            ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](_c0);\n                core[\"nc\" /* ɵɵprojection */](0);\n                core[\"nc\" /* ɵɵprojection */](1, 1);\n                core[\"Sb\" /* ɵɵelementContainer */](2, 0);\n                core[\"Sb\" /* ɵɵelementContainer */](3, 1);\n                core[\"Sb\" /* ɵɵelementContainer */](4, 2);\n                core[\"Sb\" /* ɵɵelementContainer */](5, 3);\n            }\n        }, directives: [table_HeaderRowOutlet, table_DataRowOutlet, table_NoDataRowOutlet, table_FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n    return CdkTable;\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\nlet table_CdkTextColumn = /*@__PURE__*/ (() => {\n    class CdkTextColumn {\n        constructor(\n        // `CdkTextColumn` is always requiring a table, but we just assert it manually\n        // for better error reporting.\n        // tslint:disable-next-line: lightweight-tokens\n        _table, _options) {\n            this._table = _table;\n            this._options = _options;\n            /** Alignment of the cell values. */\n            this.justify = 'start';\n            this._options = _options || {};\n        }\n        /** Column name that should be used to reference this column. */\n        get name() {\n            return this._name;\n        }\n        set name(name) {\n            this._name = name;\n            // With Ivy, inputs can be initialized before static query results are\n            // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n            this._syncColumnDefName();\n        }\n        ngOnInit() {\n            this._syncColumnDefName();\n            if (this.headerText === undefined) {\n                this.headerText = this._createDefaultHeaderText();\n            }\n            if (!this.dataAccessor) {\n                this.dataAccessor =\n                    this._options.defaultDataAccessor || ((data, name) => data[name]);\n            }\n            if (this._table) {\n                // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n                // since the columnDef will not pick up its content by the time the table finishes checking\n                // its content and initializing the rows.\n                this.columnDef.cell = this.cell;\n                this.columnDef.headerCell = this.headerCell;\n                this._table.addColumnDef(this.columnDef);\n            }\n            else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw getTableTextColumnMissingParentTableError();\n            }\n        }\n        ngOnDestroy() {\n            if (this._table) {\n                this._table.removeColumnDef(this.columnDef);\n            }\n        }\n        /**\n         * Creates a default header text. Use the options' header text transformation function if one\n         * has been provided. Otherwise simply capitalize the column name.\n         */\n        _createDefaultHeaderText() {\n            const name = this.name;\n            if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableTextColumnMissingNameError();\n            }\n            if (this._options && this._options.defaultHeaderTextTransform) {\n                return this._options.defaultHeaderTextTransform(name);\n            }\n            return name[0].toUpperCase() + name.slice(1);\n        }\n        /** Synchronizes the column definition name with the text column name. */\n        _syncColumnDefName() {\n            if (this.columnDef) {\n                this.columnDef.name = this.name;\n            }\n        }\n    }\n    CdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(core[\"Qb\" /* ɵɵdirectiveInject */](table_CdkTable, 8), core[\"Qb\" /* ɵɵdirectiveInject */](TEXT_COLUMN_OPTIONS, 8)); };\n    CdkTextColumn.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](table_CdkColumnDef, 3);\n                core[\"Lc\" /* ɵɵviewQuery */](table_CdkCellDef, 3);\n                core[\"Lc\" /* ɵɵviewQuery */](table_CdkHeaderCellDef, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.columnDef = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.cell = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.headerCell = _t.first);\n            }\n        }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ub\" /* ɵɵelementContainerStart */](0, 0);\n                core[\"Gc\" /* ɵɵtemplate */](1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n                core[\"Gc\" /* ɵɵtemplate */](2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n                core[\"Tb\" /* ɵɵelementContainerEnd */]();\n            }\n        }, directives: [table_CdkColumnDef, table_CdkHeaderCellDef, table_CdkCellDef, table_CdkHeaderCell, table_CdkCell], encapsulation: 2 });\n    return CdkTextColumn;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    table_CdkTable,\n    table_CdkRowDef,\n    table_CdkCellDef,\n    table_CdkCellOutlet,\n    table_CdkHeaderCellDef,\n    table_CdkFooterCellDef,\n    table_CdkColumnDef,\n    table_CdkCell,\n    table_CdkRow,\n    table_CdkHeaderCell,\n    table_CdkFooterCell,\n    table_CdkHeaderRow,\n    table_CdkHeaderRowDef,\n    table_CdkFooterRow,\n    table_CdkFooterRowDef,\n    table_DataRowOutlet,\n    table_HeaderRowOutlet,\n    table_FooterRowOutlet,\n    table_CdkTextColumn,\n    table_CdkNoDataRow,\n    table_NoDataRowOutlet,\n];\nlet table_CdkTableModule = /*@__PURE__*/ (() => {\n    class CdkTableModule {\n    }\n    CdkTableModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: CdkTableModule });\n    CdkTableModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); }, imports: [[scrolling[\"g\" /* ScrollingModule */]]] });\n    return CdkTableModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](table_CdkTableModule, { declarations: function () { return [table_CdkTable, table_CdkRowDef, table_CdkCellDef, table_CdkCellOutlet, table_CdkHeaderCellDef, table_CdkFooterCellDef, table_CdkColumnDef, table_CdkCell, table_CdkRow, table_CdkHeaderCell, table_CdkFooterCell, table_CdkHeaderRow, table_CdkHeaderRowDef, table_CdkFooterRow, table_CdkFooterRowDef, table_DataRowOutlet, table_HeaderRowOutlet, table_FooterRowOutlet, table_CdkTextColumn, table_CdkNoDataRow, table_NoDataRowOutlet]; }, imports: function () { return [scrolling[\"g\" /* ScrollingModule */]]; }, exports: function () { return [table_CdkTable, table_CdkRowDef, table_CdkCellDef, table_CdkCellOutlet, table_CdkHeaderCellDef, table_CdkFooterCellDef, table_CdkColumnDef, table_CdkCell, table_CdkRow, table_CdkHeaderCell, table_CdkFooterCell, table_CdkHeaderRow, table_CdkHeaderRowDef, table_CdkFooterRow, table_CdkFooterRowDef, table_DataRowOutlet, table_HeaderRowOutlet, table_FooterRowOutlet, table_CdkTextColumn, table_CdkNoDataRow, table_NoDataRowOutlet]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=table.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/core.js + 1 modules\nvar fesm2015_core = __webpack_require__(\"UhP/\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js\nvar combineLatest = __webpack_require__(\"itXk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/table.js\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n\n\nconst table_c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst table_c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 3);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Dc\" /* ɵɵstyleProp */](\"text-align\", ctx_r0.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r0.headerText, \" \");\n    }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const data_r2 = ctx.$implicit;\n        const ctx_r1 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Dc\" /* ɵɵstyleProp */](\"text-align\", ctx_r1.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n    }\n}\nlet table_MatTable = /*@__PURE__*/ (() => {\n    class MatTable extends table_CdkTable {\n        constructor() {\n            super(...arguments);\n            /** Overrides the sticky CSS class set by the `CdkTable`. */\n            this.stickyCssClass = 'mat-table-sticky';\n            /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n            this.needsPositionStickyOnElement = false;\n        }\n    }\n    MatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\n    MatTable.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-table-fixed-layout\", ctx.fixedLayout);\n            }\n        }, exportAs: [\"matTable\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                //  is only included in the build if used.\n                { provide: collections[\"g\" /* _VIEW_REPEATER_STRATEGY */], useClass: collections[\"e\" /* _DisposeViewRepeaterStrategy */] },\n                { provide: table_CdkTable, useExisting: MatTable },\n                { provide: CDK_TABLE, useExisting: MatTable },\n                { provide: _COALESCED_STYLE_SCHEDULER, useClass: table_CoalescedStyleScheduler },\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: table_c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](table_c0);\n                core[\"nc\" /* ɵɵprojection */](0);\n                core[\"nc\" /* ɵɵprojection */](1, 1);\n                core[\"Sb\" /* ɵɵelementContainer */](2, 0);\n                core[\"Sb\" /* ɵɵelementContainer */](3, 1);\n                core[\"Sb\" /* ɵɵelementContainer */](4, 2);\n                core[\"Sb\" /* ɵɵelementContainer */](5, 3);\n            }\n        }, directives: [table_HeaderRowOutlet, table_DataRowOutlet, table_NoDataRowOutlet, table_FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n    return MatTable;\n})();\nconst ɵMatTable_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatTable);\nlet table_MatCellDef = /*@__PURE__*/ (() => {\n    class MatCellDef extends table_CdkCellDef {\n    }\n    MatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\n    MatCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkCellDef, useExisting: MatCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatCellDef;\n})();\nconst ɵMatCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatCellDef);\nlet table_MatHeaderCellDef = /*@__PURE__*/ (() => {\n    class MatHeaderCellDef extends table_CdkHeaderCellDef {\n    }\n    MatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\n    MatHeaderCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderCellDef;\n})();\nconst ɵMatHeaderCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatHeaderCellDef);\nlet table_MatFooterCellDef = /*@__PURE__*/ (() => {\n    class MatFooterCellDef extends table_CdkFooterCellDef {\n    }\n    MatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\n    MatFooterCellDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterCellDef, useExisting: MatFooterCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterCellDef;\n})();\nconst ɵMatFooterCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatFooterCellDef);\nlet table_MatColumnDef = /*@__PURE__*/ (() => {\n    class MatColumnDef extends table_CdkColumnDef {\n        /** Unique name for this column. */\n        get name() { return this._name; }\n        set name(name) { this._setNameInput(name); }\n        /**\n         * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n         * In the future, this will only add \"mat-column-\" and columnCssClassName\n         * will change from type string[] to string.\n         * @docs-private\n         */\n        _updateColumnCssClassName() {\n            super._updateColumnCssClassName();\n            this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n        }\n    }\n    MatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\n    MatColumnDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: table_CdkColumnDef, useExisting: MatColumnDef },\n                { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatColumnDef;\n})();\nconst ɵMatColumnDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatColumnDef);\nlet table_MatHeaderCell = /*@__PURE__*/ (() => {\n    class MatHeaderCell extends table_CdkHeaderCell {\n    }\n    MatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return ɵMatHeaderCell_BaseFactory(t || MatHeaderCell); };\n    MatHeaderCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderCell;\n})();\nconst ɵMatHeaderCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatHeaderCell);\nlet table_MatFooterCell = /*@__PURE__*/ (() => {\n    class MatFooterCell extends table_CdkFooterCell {\n    }\n    MatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return ɵMatFooterCell_BaseFactory(t || MatFooterCell); };\n    MatFooterCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterCell;\n})();\nconst ɵMatFooterCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatFooterCell);\nlet table_MatCell = /*@__PURE__*/ (() => {\n    class MatCell extends table_CdkCell {\n    }\n    MatCell.ɵfac = function MatCell_Factory(t) { return ɵMatCell_BaseFactory(t || MatCell); };\n    MatCell.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatCell;\n})();\nconst ɵMatCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatCell);\nlet table_MatHeaderRowDef = /*@__PURE__*/ (() => {\n    class MatHeaderRowDef extends table_CdkHeaderRowDef {\n    }\n    MatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\n    MatHeaderRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderRowDef;\n})();\nconst ɵMatHeaderRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatHeaderRowDef);\nlet table_MatFooterRowDef = /*@__PURE__*/ (() => {\n    class MatFooterRowDef extends table_CdkFooterRowDef {\n    }\n    MatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\n    MatFooterRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterRowDef, useExisting: MatFooterRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterRowDef;\n})();\nconst ɵMatFooterRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatFooterRowDef);\nlet table_MatRowDef = /*@__PURE__*/ (() => {\n    class MatRowDef extends table_CdkRowDef {\n    }\n    MatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\n    MatRowDef.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkRowDef, useExisting: MatRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatRowDef;\n})();\nconst ɵMatRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatRowDef);\nlet table_MatHeaderRow = /*@__PURE__*/ (() => {\n    class MatHeaderRow extends table_CdkHeaderRow {\n    }\n    MatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\n    MatHeaderRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderRow, useExisting: MatHeaderRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatHeaderRow;\n})();\nconst ɵMatHeaderRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatHeaderRow);\nlet table_MatFooterRow = /*@__PURE__*/ (() => {\n    class MatFooterRow extends table_CdkFooterRow {\n    }\n    MatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\n    MatFooterRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterRow, useExisting: MatFooterRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatFooterRow;\n})();\nconst ɵMatFooterRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatFooterRow);\nlet table_MatRow = /*@__PURE__*/ (() => {\n    class MatRow extends table_CdkRow {\n    }\n    MatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\n    MatRow.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkRow, useExisting: MatRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatRow;\n})();\nconst ɵMatRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatRow);\nlet table_MatNoDataRow = /*@__PURE__*/ (() => {\n    class MatNoDataRow extends table_CdkNoDataRow {\n    }\n    MatNoDataRow.ɵfac = function MatNoDataRow_Factory(t) { return ɵMatNoDataRow_BaseFactory(t || MatNoDataRow); };\n    MatNoDataRow.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkNoDataRow, useExisting: MatNoDataRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatNoDataRow;\n})();\nconst ɵMatNoDataRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatNoDataRow);\nlet table_MatTextColumn = /*@__PURE__*/ (() => {\n    class MatTextColumn extends table_CdkTextColumn {\n    }\n    MatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\n    MatTextColumn.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ub\" /* ɵɵelementContainerStart */](0, 0);\n                core[\"Gc\" /* ɵɵtemplate */](1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n                core[\"Gc\" /* ɵɵtemplate */](2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n                core[\"Tb\" /* ɵɵelementContainerEnd */]();\n            }\n        }, directives: [table_MatColumnDef, table_MatHeaderCellDef, table_MatCellDef, table_MatHeaderCell, table_MatCell], encapsulation: 2 });\n    return MatTextColumn;\n})();\nconst ɵMatTextColumn_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](table_MatTextColumn);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst table_EXPORTED_DECLARATIONS = [\n    // Table\n    table_MatTable,\n    // Template defs\n    table_MatHeaderCellDef,\n    table_MatHeaderRowDef,\n    table_MatColumnDef,\n    table_MatCellDef,\n    table_MatRowDef,\n    table_MatFooterCellDef,\n    table_MatFooterRowDef,\n    // Cell directives\n    table_MatHeaderCell,\n    table_MatCell,\n    table_MatFooterCell,\n    // Row directives\n    table_MatHeaderRow,\n    table_MatRow,\n    table_MatFooterRow,\n    table_MatNoDataRow,\n    table_MatTextColumn,\n];\nlet table_MatTableModule = /*@__PURE__*/ (() => {\n    class MatTableModule {\n    }\n    MatTableModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatTableModule });\n    MatTableModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n                table_CdkTableModule,\n                fesm2015_core[\"j\" /* MatCommonModule */],\n            ], fesm2015_core[\"j\" /* MatCommonModule */]] });\n    return MatTableModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](table_MatTableModule, { declarations: function () { return [table_MatTable, table_MatHeaderCellDef, table_MatHeaderRowDef, table_MatColumnDef, table_MatCellDef, table_MatRowDef, table_MatFooterCellDef, table_MatFooterRowDef, table_MatHeaderCell, table_MatCell, table_MatFooterCell, table_MatHeaderRow, table_MatRow, table_MatFooterRow, table_MatNoDataRow, table_MatTextColumn]; }, imports: function () {\n            return [table_CdkTableModule,\n                fesm2015_core[\"j\" /* MatCommonModule */]];\n        }, exports: function () { return [fesm2015_core[\"j\" /* MatCommonModule */], table_MatTable, table_MatHeaderCellDef, table_MatHeaderRowDef, table_MatColumnDef, table_MatCellDef, table_MatRowDef, table_MatFooterCellDef, table_MatFooterRowDef, table_MatHeaderCell, table_MatCell, table_MatFooterCell, table_MatHeaderRow, table_MatRow, table_MatFooterRow, table_MatNoDataRow, table_MatTextColumn]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass table_MatTableDataSource extends collections[\"b\" /* DataSource */] {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject[\"a\" /* BehaviorSubject */]([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject[\"a\" /* BehaviorSubject */]('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject[\"a\" /* Subject */]();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (Object(coercion[\"a\" /* _isNumberValue */])(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject[\"a\" /* BehaviorSubject */](initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            Object(merge[\"a\" /* merge */])(this._sort.sortChange, this._sort.initialized) :\n            Object(of[\"a\" /* of */])(null);\n        const pageChange = this._paginator ?\n            Object(merge[\"a\" /* merge */])(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            Object(of[\"a\" /* of */])(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = Object(combineLatest[\"a\" /* combineLatest */])([dataStream, this._filter])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = Object(combineLatest[\"a\" /* combineLatest */])([filteredData, sortChange])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = Object(combineLatest[\"a\" /* combineLatest */])([orderedData, pageChange])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends table_MatTableDataSource {\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=table.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/keycodes.js\nvar keycodes = __webpack_require__(\"Ht+U\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/animations/fesm2015/animations.js\nvar animations = __webpack_require__(\"GS7A\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/a11y.js\nvar a11y = __webpack_require__(\"YEUz\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/sort.js\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\n\n\n\nconst sort_c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 3);\n        core[\"ec\" /* ɵɵlistener */](\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { core[\"yc\" /* ɵɵrestoreView */](_r2); const ctx_r1 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { core[\"yc\" /* ɵɵrestoreView */](_r2); const ctx_r3 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r3._disableViewStateAnimation = false; });\n        core[\"Rb\" /* ɵɵelement */](1, \"div\", 4);\n        core[\"Wb\" /* ɵɵelementStart */](2, \"div\", 5);\n        core[\"Rb\" /* ɵɵelement */](3, \"div\", 6);\n        core[\"Rb\" /* ɵɵelement */](4, \"div\", 7);\n        core[\"Rb\" /* ɵɵelement */](5, \"div\", 8);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"@indicator\", ctx_r0._getArrowDirectionState());\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"@leftPointer\", ctx_r0._getArrowDirectionState());\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"@rightPointer\", ctx_r0._getArrowDirectionState());\n    }\n}\nconst sort_c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"z\" /* mixinInitialized */])(/*@__PURE__*/ Object(fesm2015_core[\"x\" /* mixinDisabled */])(MatSortBase));\nlet sort_MatSort = /*@__PURE__*/ (() => {\n    class MatSort extends _MatSortMixinBase {\n        constructor() {\n            super(...arguments);\n            /** Collection of all registered sortables that this directive manages. */\n            this.sortables = new Map();\n            /** Used to notify any child components listening to state changes. */\n            this._stateChanges = new Subject[\"a\" /* Subject */]();\n            /**\n             * The direction to set when an MatSortable is initially sorted.\n             * May be overriden by the MatSortable's sort start.\n             */\n            this.start = 'asc';\n            this._direction = '';\n            /** Event emitted when the user changes either the active sort or sort direction. */\n            this.sortChange = new core[\"o\" /* EventEmitter */]();\n        }\n        /** The sort direction of the currently active MatSortable. */\n        get direction() { return this._direction; }\n        set direction(direction) {\n            if (direction && direction !== 'asc' && direction !== 'desc' &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getSortInvalidDirectionError(direction);\n            }\n            this._direction = direction;\n        }\n        /**\n         * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n         * May be overriden by the MatSortable's disable clear input.\n         */\n        get disableClear() { return this._disableClear; }\n        set disableClear(v) { this._disableClear = Object(coercion[\"c\" /* coerceBooleanProperty */])(v); }\n        /**\n         * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n         * collection of MatSortables.\n         */\n        register(sortable) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!sortable.id) {\n                    throw getSortHeaderMissingIdError();\n                }\n                if (this.sortables.has(sortable.id)) {\n                    throw getSortDuplicateSortableIdError(sortable.id);\n                }\n            }\n            this.sortables.set(sortable.id, sortable);\n        }\n        /**\n         * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n         * collection of contained MatSortables.\n         */\n        deregister(sortable) {\n            this.sortables.delete(sortable.id);\n        }\n        /** Sets the active sort id and determines the new sort direction. */\n        sort(sortable) {\n            if (this.active != sortable.id) {\n                this.active = sortable.id;\n                this.direction = sortable.start ? sortable.start : this.start;\n            }\n            else {\n                this.direction = this.getNextSortDirection(sortable);\n            }\n            this.sortChange.emit({ active: this.active, direction: this.direction });\n        }\n        /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n        getNextSortDirection(sortable) {\n            if (!sortable) {\n                return '';\n            }\n            // Get the sort direction cycle with the potential sortable overrides.\n            const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n            let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n            // Get and return the next direction in the cycle\n            let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n            if (nextDirectionIndex >= sortDirectionCycle.length) {\n                nextDirectionIndex = 0;\n            }\n            return sortDirectionCycle[nextDirectionIndex];\n        }\n        ngOnInit() {\n            this._markInitialized();\n        }\n        ngOnChanges() {\n            this._stateChanges.next();\n        }\n        ngOnDestroy() {\n            this._stateChanges.complete();\n        }\n    }\n    MatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\n    MatSort.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return MatSort;\n})();\nconst ɵMatSort_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](sort_MatSort);\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = fesm2015_core[\"b\" /* AnimationDurations */].ENTERING + ' ' +\n    fesm2015_core[\"a\" /* AnimationCurves */].STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('indicator', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-asc, asc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-desc, desc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(10px)' })),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('active-asc <=> active-desc', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('leftPointer', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-asc, asc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'rotate(-45deg)' })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-desc, desc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'rotate(45deg)' })),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('active-asc <=> active-desc', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('rightPointer', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-asc, asc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'rotate(45deg)' })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('active-desc, desc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'rotate(-45deg)' })),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('active-asc <=> active-desc', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('arrowOpacity', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('desc-to-active, asc-to-active, active', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 1 })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('desc-to-hint, asc-to-hint, hint', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: .54 })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => asc, * => desc, * => active, * => hint, * => void', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('0ms')),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* <=> *', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('arrowPosition', [\n        // Hidden Above => Hint Center\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => desc-to-hint, * => desc-to-active', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(animations[\"h\" /* keyframes */])([\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(-25%)' }),\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => hint-to-desc, * => active-to-desc', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(animations[\"h\" /* keyframes */])([\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0)' }),\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => asc-to-hint, * => asc-to-active', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(animations[\"h\" /* keyframes */])([\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(25%)' }),\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => hint-to-asc, * => active-to-asc', /*@__PURE__*/ Object(animations[\"e\" /* animate */])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(animations[\"h\" /* keyframes */])([\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0)' }),\n            /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(-25%)' })\n        ]))),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(0)' })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('hint-to-desc, active-to-desc, desc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(-25%)' })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('hint-to-asc, active-to-asc, asc', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('allowChildren', [\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* <=> *', [\n            /*@__PURE__*/ Object(animations[\"i\" /* query */])('@*', /*@__PURE__*/ Object(animations[\"f\" /* animateChild */])(), { optional: true })\n        ])\n    ]),\n};\nlet sort_MatSortHeaderIntl = /*@__PURE__*/ (() => {\n    class MatSortHeaderIntl {\n        constructor() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new Subject[\"a\" /* Subject */]();\n            /**\n             * ARIA label for the sorting button.\n             * @deprecated Not used anymore. To be removed.\n             * @breaking-change 8.0.0\n             */\n            this.sortButtonLabel = (id) => {\n                return `Change sorting for ${id}`;\n            };\n        }\n    }\n    MatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n    MatSortHeaderIntl.ɵprov = /*@__PURE__*/ Object(core[\"Mb\" /* ɵɵdefineInjectable */])({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n    return MatSortHeaderIntl;\n})();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new sort_MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: sort_MatSortHeaderIntl,\n    deps: [[/*@__PURE__*/ new core[\"C\" /* Optional */](), /*@__PURE__*/ new core[\"M\" /* SkipSelf */](), sort_MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"x\" /* mixinDisabled */])(MatSortHeaderBase);\nlet sort_MatSortHeader = /*@__PURE__*/ (() => {\n    class MatSortHeader extends _MatSortHeaderMixinBase {\n        constructor(_intl, _changeDetectorRef, \n        // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n        // tslint:disable-next-line: lightweight-tokens\n        _sort, _columnDef, _focusMonitor, _elementRef) {\n            // Note that we use a string token for the `_columnDef`, because the value is provided both by\n            // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n            // and we want to avoid having the sort header depending on the CDK table because\n            // of this single reference.\n            super();\n            this._intl = _intl;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._sort = _sort;\n            this._columnDef = _columnDef;\n            this._focusMonitor = _focusMonitor;\n            this._elementRef = _elementRef;\n            /**\n             * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n             * provide an affordance that the header is sortable by showing on focus and hover.\n             */\n            this._showIndicatorHint = false;\n            /** The direction the arrow should be facing according to the current state. */\n            this._arrowDirection = '';\n            /**\n             * Whether the view state animation should show the transition between the `from` and `to` states.\n             */\n            this._disableViewStateAnimation = false;\n            /** Sets the position of the arrow that displays when sorted. */\n            this.arrowPosition = 'after';\n            if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getSortHeaderNotContainedWithinSortError();\n            }\n            this._rerenderSubscription = Object(merge[\"a\" /* merge */])(_sort.sortChange, _sort._stateChanges, _intl.changes)\n                .subscribe(() => {\n                if (this._isSorted()) {\n                    this._updateArrowDirection();\n                }\n                // If this header was recently active and now no longer sorted, animate away the arrow.\n                if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = false;\n                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                }\n                _changeDetectorRef.markForCheck();\n            });\n        }\n        /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n        get disableClear() { return this._disableClear; }\n        set disableClear(v) { this._disableClear = Object(coercion[\"c\" /* coerceBooleanProperty */])(v); }\n        ngOnInit() {\n            if (!this.id && this._columnDef) {\n                this.id = this._columnDef.name;\n            }\n            // Initialize the direction of the arrow and set the view state to be immediately that state.\n            this._updateArrowDirection();\n            this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n            this._sort.register(this);\n        }\n        ngAfterViewInit() {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n                const newState = !!origin;\n                if (newState !== this._showIndicatorHint) {\n                    this._setIndicatorHintVisible(newState);\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n        }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n            this._sort.deregister(this);\n            this._rerenderSubscription.unsubscribe();\n        }\n        /**\n         * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n         * user showing what the active sort will become. If set to false, the arrow will fade away.\n         */\n        _setIndicatorHintVisible(visible) {\n            // No-op if the sort header is disabled - should not make the hint visible.\n            if (this._isDisabled() && visible) {\n                return;\n            }\n            this._showIndicatorHint = visible;\n            if (!this._isSorted()) {\n                this._updateArrowDirection();\n                if (this._showIndicatorHint) {\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n                }\n                else {\n                    this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n                }\n            }\n        }\n        /**\n         * Sets the animation transition view state for the arrow's position and opacity. If the\n         * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n         * no animation appears.\n         */\n        _setAnimationTransitionState(viewState) {\n            this._viewState = viewState;\n            // If the animation for arrow position state (opacity/translation) should be disabled,\n            // remove the fromState so that it jumps right to the toState.\n            if (this._disableViewStateAnimation) {\n                this._viewState = { toState: viewState.toState };\n            }\n        }\n        /** Triggers the sort on this sort header and removes the indicator hint. */\n        _toggleOnInteraction() {\n            this._sort.sort(this);\n            // Do not show the animation if the header was already shown in the right position.\n            if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = true;\n            }\n            // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n            // the direction it is facing.\n            const viewState = this._isSorted() ?\n                { fromState: this._arrowDirection, toState: 'active' } :\n                { fromState: 'active', toState: this._arrowDirection };\n            this._setAnimationTransitionState(viewState);\n            this._showIndicatorHint = false;\n        }\n        _handleClick() {\n            if (!this._isDisabled()) {\n                this._toggleOnInteraction();\n            }\n        }\n        _handleKeydown(event) {\n            if (!this._isDisabled() && (event.keyCode === keycodes[\"m\" /* SPACE */] || event.keyCode === keycodes[\"e\" /* ENTER */])) {\n                event.preventDefault();\n                this._toggleOnInteraction();\n            }\n        }\n        /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n        _isSorted() {\n            return this._sort.active == this.id &&\n                (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n        }\n        /** Returns the animation state for the arrow direction (indicator and pointers). */\n        _getArrowDirectionState() {\n            return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n        }\n        /** Returns the arrow position state (opacity, translation). */\n        _getArrowViewState() {\n            const fromState = this._viewState.fromState;\n            return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n        }\n        /**\n         * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n         * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n         * active sorted direction. The reason this is updated through a function is because the direction\n         * should only be changed at specific times - when deactivated but the hint is displayed and when\n         * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n         * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n         * preserving its direction, even though the next sort direction is actually different and should\n         * only be changed once the arrow displays again (hint or activation).\n         */\n        _updateArrowDirection() {\n            this._arrowDirection = this._isSorted() ?\n                this._sort.direction :\n                (this.start || this._sort.start);\n        }\n        _isDisabled() {\n            return this._sort.disabled || this.disabled;\n        }\n        /**\n         * Gets the aria-sort attribute that should be applied to this sort header. If this header\n         * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n         * says that the aria-sort property should only be present on one header at a time, so removing\n         * ensures this is true.\n         */\n        _getAriaSortAttribute() {\n            if (!this._isSorted()) {\n                return 'none';\n            }\n            return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n        }\n        /** Whether the arrow inside the sort header should be rendered. */\n        _renderArrow() {\n            return !this._isDisabled() || this._isSorted();\n        }\n    }\n    MatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(core[\"Qb\" /* ɵɵdirectiveInject */](sort_MatSortHeaderIntl), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](sort_MatSort, 8), core[\"Qb\" /* ɵɵdirectiveInject */]('MAT_SORT_HEADER_COLUMN_DEF', 8), core[\"Qb\" /* ɵɵdirectiveInject */](a11y[\"h\" /* FocusMonitor */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    MatSortHeader.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n            }\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"aria-sort\", ctx._getAriaSortAttribute());\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-sort-header-disabled\", ctx._isDisabled());\n            }\n        }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], attrs: sort_c0, ngContentSelectors: sort_c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */]();\n                core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"nc\" /* ɵɵprojection */](2);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n                core[\"Eb\" /* ɵɵattribute */](\"tabindex\", ctx._isDisabled() ? null : 0);\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx._renderArrow());\n            }\n        }, directives: [common[\"m\" /* NgIf */]], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n                matSortAnimations.indicator,\n                matSortAnimations.leftPointer,\n                matSortAnimations.rightPointer,\n                matSortAnimations.arrowOpacity,\n                matSortAnimations.arrowPosition,\n                matSortAnimations.allowChildren,\n            ] }, changeDetection: 0 });\n    return MatSortHeader;\n})();\nlet sort_MatSortModule = /*@__PURE__*/ (() => {\n    class MatSortModule {\n    }\n    MatSortModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatSortModule });\n    MatSortModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[common[\"c\" /* CommonModule */], fesm2015_core[\"j\" /* MatCommonModule */]]] });\n    return MatSortModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](sort_MatSortModule, { declarations: function () { return [sort_MatSort, sort_MatSortHeader]; }, imports: function () { return [common[\"c\" /* CommonModule */], fesm2015_core[\"j\" /* MatCommonModule */]]; }, exports: function () { return [sort_MatSort, sort_MatSortHeader]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=sort.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/divider.js\nvar divider = __webpack_require__(\"BSbQ\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/icon.js\nvar icon = __webpack_require__(\"Tj54\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/button.js\nvar fesm2015_button = __webpack_require__(\"Dxy4\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"s7LF\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/fesm2015/animations.js + 1 modules\nvar fesm2015_animations = __webpack_require__(\"omvX\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/observers.js\nvar observers = __webpack_require__(\"9b/N\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/checkbox.js\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\n\n\n\n\nconst checkbox_c0 = [\"input\"];\nconst checkbox_c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = /*@__PURE__*/ MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */],\n    useExisting: /*@__PURE__*/ Object(core[\"W\" /* forwardRef */])(() => checkbox_MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"A\" /* mixinTabIndex */])(/*@__PURE__*/ Object(fesm2015_core[\"v\" /* mixinColor */])(/*@__PURE__*/ Object(fesm2015_core[\"w\" /* mixinDisableRipple */])(/*@__PURE__*/ Object(fesm2015_core[\"x\" /* mixinDisabled */])(MatCheckboxBase))));\nlet checkbox_MatCheckbox = /*@__PURE__*/ (() => {\n    class MatCheckbox extends _MatCheckboxMixinBase {\n        constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n            super(elementRef);\n            this._changeDetectorRef = _changeDetectorRef;\n            this._focusMonitor = _focusMonitor;\n            this._ngZone = _ngZone;\n            this._animationMode = _animationMode;\n            this._options = _options;\n            /**\n             * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n             * take precedence so this may be omitted.\n             */\n            this.ariaLabel = '';\n            /**\n             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n             */\n            this.ariaLabelledby = null;\n            this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n            this.id = this._uniqueId;\n            /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n            this.labelPosition = 'after';\n            /** Name value will be applied to the input element if present */\n            this.name = null;\n            /** Event emitted when the checkbox's `checked` value changes. */\n            this.change = new core[\"o\" /* EventEmitter */]();\n            /** Event emitted when the checkbox's `indeterminate` value changes. */\n            this.indeterminateChange = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n             * @docs-private\n             */\n            this._onTouched = () => { };\n            this._currentAnimationClass = '';\n            this._currentCheckState = 0 /* Init */;\n            this._controlValueAccessorChangeFn = () => { };\n            this._checked = false;\n            this._disabled = false;\n            this._indeterminate = false;\n            this._options = this._options || defaults;\n            this.color = this.defaultColor = this._options.color || defaults.color;\n            this.tabIndex = parseInt(tabIndex) || 0;\n        }\n        /** Returns the unique id for the visual hidden input. */\n        get inputId() { return `${this.id || this._uniqueId}-input`; }\n        /** Whether the checkbox is required. */\n        get required() { return this._required; }\n        set required(value) { this._required = Object(coercion[\"c\" /* coerceBooleanProperty */])(value); }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n                if (!focusOrigin) {\n                    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                    // Angular does not expect events to be raised during change detection, so any state change\n                    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                    // telling the form control it has been touched until the next tick.\n                    Promise.resolve().then(() => {\n                        this._onTouched();\n                        this._changeDetectorRef.markForCheck();\n                    });\n                }\n            });\n            this._syncIndeterminate(this._indeterminate);\n        }\n        // TODO: Delete next major revision.\n        ngAfterViewChecked() { }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /**\n         * Whether the checkbox is checked.\n         */\n        get checked() { return this._checked; }\n        set checked(value) {\n            if (value != this.checked) {\n                this._checked = value;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is disabled. This fully overrides the implementation provided by\n         * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n         */\n        get disabled() { return this._disabled; }\n        set disabled(value) {\n            const newValue = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (newValue !== this.disabled) {\n                this._disabled = newValue;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         */\n        get indeterminate() { return this._indeterminate; }\n        set indeterminate(value) {\n            const changed = value != this._indeterminate;\n            this._indeterminate = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(3 /* Indeterminate */);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n            this._syncIndeterminate(this._indeterminate);\n        }\n        _isRippleDisabled() {\n            return this.disableRipple || this.disabled;\n        }\n        /** Method being called whenever the label text changes. */\n        _onLabelTextChange() {\n            // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n            // component will be only marked for check, but no actual change detection runs automatically.\n            // Instead of going back into the zone in order to trigger a change detection which causes\n            // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n            // an explicit change detection for the checkbox view and its children.\n            this._changeDetectorRef.detectChanges();\n        }\n        // Implemented as part of ControlValueAccessor.\n        writeValue(value) {\n            this.checked = !!value;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnChange(fn) {\n            this._controlValueAccessorChangeFn = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n        }\n        _getAriaChecked() {\n            if (this.checked) {\n                return 'true';\n            }\n            return this.indeterminate ? 'mixed' : 'false';\n        }\n        _transitionCheckState(newState) {\n            let oldState = this._currentCheckState;\n            let element = this._elementRef.nativeElement;\n            if (oldState === newState) {\n                return;\n            }\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.remove(this._currentAnimationClass);\n            }\n            this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n            this._currentCheckState = newState;\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.add(this._currentAnimationClass);\n                // Remove the animation class to avoid animation when the checkbox is moved between containers\n                const animationClass = this._currentAnimationClass;\n                this._ngZone.runOutsideAngular(() => {\n                    setTimeout(() => {\n                        element.classList.remove(animationClass);\n                    }, 1000);\n                });\n            }\n        }\n        _emitChangeEvent() {\n            const event = new MatCheckboxChange();\n            event.source = this;\n            event.checked = this.checked;\n            this._controlValueAccessorChangeFn(this.checked);\n            this.change.emit(event);\n        }\n        /** Toggles the `checked` state of the checkbox. */\n        toggle() {\n            this.checked = !this.checked;\n        }\n        /**\n         * Event handler for checkbox input element.\n         * Toggles checked state if element is not disabled.\n         * Do not toggle on (change) event since IE doesn't fire change event when\n         *   indeterminate checkbox is clicked.\n         * @param event\n         */\n        _onInputClick(event) {\n            var _a;\n            const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n            // We have to stop propagation for click events on the visual hidden input element.\n            // By default, when a user clicks on a label element, a generated click event will be\n            // dispatched on the associated input element. Since we are using a label element as our\n            // root container, the click event on the `checkbox` will be executed twice.\n            // The real click event will bubble up, and the generated click event also tries to bubble up.\n            // This will lead to multiple click events.\n            // Preventing bubbling for the second event will solve that issue.\n            event.stopPropagation();\n            // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n            if (!this.disabled && clickAction !== 'noop') {\n                // When user manually click on the checkbox, `indeterminate` is set to false.\n                if (this.indeterminate && clickAction !== 'check') {\n                    Promise.resolve().then(() => {\n                        this._indeterminate = false;\n                        this.indeterminateChange.emit(this._indeterminate);\n                    });\n                }\n                this.toggle();\n                this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                // Emit our custom change event if the native input emitted one.\n                // It is important to only emit it, if the native input triggered one, because\n                // we don't want to trigger a change event, when the `checked` variable changes for example.\n                this._emitChangeEvent();\n            }\n            else if (!this.disabled && clickAction === 'noop') {\n                // Reset native input when clicked with noop. The native checkbox becomes checked after\n                // click, reset it to be align with `checked` value of `mat-checkbox`.\n                this._inputElement.nativeElement.checked = this.checked;\n                this._inputElement.nativeElement.indeterminate = this.indeterminate;\n            }\n        }\n        /** Focuses the checkbox. */\n        focus(origin, options) {\n            if (origin) {\n                this._focusMonitor.focusVia(this._inputElement, origin, options);\n            }\n            else {\n                this._inputElement.nativeElement.focus(options);\n            }\n        }\n        _onInteractionEvent(event) {\n            // We always have to stop propagation on the change event.\n            // Otherwise the change event, from the input element, will bubble up and\n            // emit its event object to the `change` output.\n            event.stopPropagation();\n        }\n        _getAnimationClassForCheckStateTransition(oldState, newState) {\n            // Don't transition if animations are disabled.\n            if (this._animationMode === 'NoopAnimations') {\n                return '';\n            }\n            let animSuffix = '';\n            switch (oldState) {\n                case 0 /* Init */:\n                    // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                    // [checked] bound to it.\n                    if (newState === 1 /* Checked */) {\n                        animSuffix = 'unchecked-checked';\n                    }\n                    else if (newState == 3 /* Indeterminate */) {\n                        animSuffix = 'unchecked-indeterminate';\n                    }\n                    else {\n                        return '';\n                    }\n                    break;\n                case 2 /* Unchecked */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'unchecked-checked' : 'unchecked-indeterminate';\n                    break;\n                case 1 /* Checked */:\n                    animSuffix = newState === 2 /* Unchecked */ ?\n                        'checked-unchecked' : 'checked-indeterminate';\n                    break;\n                case 3 /* Indeterminate */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'indeterminate-checked' : 'indeterminate-unchecked';\n                    break;\n            }\n            return `mat-checkbox-anim-${animSuffix}`;\n        }\n        /**\n         * Syncs the indeterminate value with the checkbox DOM node.\n         *\n         * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n         * property is supported on an element boils down to `if (propName in element)`. Domino's\n         * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n         * server-side rendering.\n         */\n        _syncIndeterminate(value) {\n            const nativeCheckbox = this._inputElement;\n            if (nativeCheckbox) {\n                nativeCheckbox.nativeElement.indeterminate = value;\n            }\n        }\n    }\n    MatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](a11y[\"h\" /* FocusMonitor */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"B\" /* NgZone */]), core[\"bc\" /* ɵɵinjectAttribute */]('tabindex'), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_animations[\"a\" /* ANIMATION_MODULE_TYPE */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\n    MatCheckbox.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](checkbox_c0, 1);\n                core[\"Lc\" /* ɵɵviewQuery */](fesm2015_core[\"q\" /* MatRipple */], 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._inputElement = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.ripple = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Zb\" /* ɵɵhostProperty */](\"id\", ctx.id);\n                core[\"Eb\" /* ɵɵattribute */](\"tabindex\", null);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            }\n        }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */]();\n                core[\"Wb\" /* ɵɵelementStart */](0, \"label\", 0, 1);\n                core[\"Wb\" /* ɵɵelementStart */](2, \"span\", 2);\n                core[\"Wb\" /* ɵɵelementStart */](3, \"input\", 3, 4);\n                core[\"ec\" /* ɵɵlistener */](\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](5, \"span\", 5);\n                core[\"Rb\" /* ɵɵelement */](6, \"span\", 6);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelement */](7, \"span\", 7);\n                core[\"Wb\" /* ɵɵelementStart */](8, \"span\", 8);\n                core[\"hc\" /* ɵɵnamespaceSVG */]();\n                core[\"Wb\" /* ɵɵelementStart */](9, \"svg\", 9);\n                core[\"Rb\" /* ɵɵelement */](10, \"path\", 10);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"gc\" /* ɵɵnamespaceHTML */]();\n                core[\"Rb\" /* ɵɵelement */](11, \"span\", 11);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](12, \"span\", 12, 13);\n                core[\"ec\" /* ɵɵlistener */](\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n                core[\"Wb\" /* ɵɵelementStart */](14, \"span\", 14);\n                core[\"Ic\" /* ɵɵtext */](15, \"\\u00A0\");\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"nc\" /* ɵɵprojection */](16);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                const _r0 = core[\"vc\" /* ɵɵreference */](1);\n                const _r2 = core[\"vc\" /* ɵɵreference */](13);\n                core[\"Eb\" /* ɵɵattribute */](\"for\", ctx.inputId);\n                core[\"Db\" /* ɵɵadvance */](2);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n                core[\"Eb\" /* ɵɵattribute */](\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n                core[\"Db\" /* ɵɵadvance */](2);\n                core[\"pc\" /* ɵɵproperty */](\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", core[\"rc\" /* ɵɵpureFunction0 */](19, checkbox_c1));\n            }\n        }, directives: [fesm2015_core[\"q\" /* MatRipple */], observers[\"a\" /* CdkObserveContent */]], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatCheckbox;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */],\n    useExisting: /*@__PURE__*/ Object(core[\"W\" /* forwardRef */])(() => checkbox_MatCheckboxRequiredValidator),\n    multi: true\n};\nlet checkbox_MatCheckboxRequiredValidator = /*@__PURE__*/ (() => {\n    class MatCheckboxRequiredValidator extends fesm2015_forms[\"a\" /* CheckboxRequiredValidator */] {\n    }\n    MatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\n    MatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([MAT_CHECKBOX_REQUIRED_VALIDATOR]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatCheckboxRequiredValidator;\n})();\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](checkbox_MatCheckboxRequiredValidator);\nlet checkbox_MatCheckboxRequiredValidatorModule = /*@__PURE__*/ (() => {\n    class _MatCheckboxRequiredValidatorModule {\n    }\n    _MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: _MatCheckboxRequiredValidatorModule });\n    _MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n    return _MatCheckboxRequiredValidatorModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](checkbox_MatCheckboxRequiredValidatorModule, { declarations: [checkbox_MatCheckboxRequiredValidator], exports: [checkbox_MatCheckboxRequiredValidator] }); })();\nlet checkbox_MatCheckboxModule = /*@__PURE__*/ (() => {\n    class MatCheckboxModule {\n    }\n    MatCheckboxModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatCheckboxModule });\n    MatCheckboxModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n                fesm2015_core[\"r\" /* MatRippleModule */], fesm2015_core[\"j\" /* MatCommonModule */], observers[\"c\" /* ObserversModule */],\n                checkbox_MatCheckboxRequiredValidatorModule\n            ], fesm2015_core[\"j\" /* MatCommonModule */], checkbox_MatCheckboxRequiredValidatorModule] });\n    return MatCheckboxModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](checkbox_MatCheckboxModule, { declarations: function () { return [checkbox_MatCheckbox]; }, imports: function () { return [fesm2015_core[\"r\" /* MatRippleModule */], fesm2015_core[\"j\" /* MatCommonModule */], observers[\"c\" /* ObserversModule */], checkbox_MatCheckboxRequiredValidatorModule]; }, exports: function () { return [checkbox_MatCheckbox, fesm2015_core[\"j\" /* MatCommonModule */], checkbox_MatCheckboxRequiredValidatorModule]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=checkbox.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/badge.js\nvar badge = __webpack_require__(\"8Qe2\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/progress-bar.js\nvar progress_bar = __webpack_require__(\"BTe0\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/progress-spinner.js\nvar progress_spinner = __webpack_require__(\"pu8Q\");\n\n// EXTERNAL MODULE: ./gtag/src/index.ts + 1 modules\nvar src = __webpack_require__(\"fi6C\");\n\n// EXTERNAL MODULE: ./elements/src/lib/dialog/index.ts + 1 modules\nvar dialog = __webpack_require__(\"XNpK\");\n\n// EXTERNAL MODULE: ./readme/src/index.ts + 2 modules\nvar readme_src = __webpack_require__(\"C1VQ\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/catchError.js\nvar catchError = __webpack_require__(\"JIr8\");\n\n// CONCATENATED MODULE: ./download/src/lib/same-origin.ts\n\n/** Same Origin regular expression */\nconst SAMEORIGIN = new core[\"s\" /* InjectionToken */](\"wizdm.sameorigin.regex\", { factory: () => {\n        var _a;\n        // Test the given URL to start with \"data:\" or \"blob:\" or the current hostname\n        return new RegExp(`^data:|^blob:|^http(?:s)?:\\/\\/${((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.host) || ''}`);\n    } });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/fesm2015/http.js\nvar http = __webpack_require__(\"IheW\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/fesm2015/platform-browser.js\nvar platform_browser = __webpack_require__(\"cUpR\");\n\n// CONCATENATED MODULE: ./download/src/lib/download.directive.ts\n\n\n\n\n\n\n\n\n\nlet download_directive_DownloadDirective = /*@__PURE__*/ (() => {\n    class DownloadDirective {\n        constructor(sameOrigin, http, ref, sanitizer) {\n            this.sameOrigin = sameOrigin;\n            this.http = http;\n            this.ref = ref;\n            this.sanitizer = sanitizer;\n            /** True if something went wrong attempting to download the resource */\n            this.error = false;\n            /** True when the request is in process */\n            this.busy = false;\n        }\n        // Intercepts the href\n        set source(href) {\n            // Revokes the previous URL object, if any\n            if (this.blob) {\n                URL.revokeObjectURL(this.blob);\n                this.blob = undefined;\n            }\n            // Resets possible errors\n            this.error = false;\n            // Updates the href\n            this.href = href;\n        }\n        // Sanitizes the href to accept both urls and blobs\n        get safeHref() {\n            return this.sanitizer.bypassSecurityTrustUrl(this.href);\n        }\n        // Listens to the click events\n        onClick() {\n            // Do nothing on empty href\n            if (!this.href || this.busy) {\n                return false;\n            }\n            // Proceed with the download on files from the same origin\n            if (this.error || this.sameOrigin.test(this.href)) {\n                return true;\n            }\n            // Unsubscribes previous subscription, if any\n            if (this.sub) {\n                this.sub.unsubscribe();\n            }\n            // Starts processing\n            this.busy = true;\n            // Gets the source file as a blob\n            this.sub = this.http.get(this.href, { responseType: \"blob\" }).pipe(\n            // Creates the URL object ready for download\n            Object(map[\"a\" /* map */])(blob => this.blob = URL.createObjectURL(blob)), \n            // Catches possible errors such as CORS not allowing the file download\n            Object(catchError[\"a\" /* catchError */])(error => {\n                // Reports the error preventing the download\n                console.error(\"Unable to download the source file\", error);\n                // Tracks the error for the next round to complete anyhow\n                this.error = true;\n                // Reverts to the original href for the browser to open the file instead of downloading it\n                return Object(of[\"a\" /* of */])(this.href);\n            })).subscribe(url => {\n                // Updates the href with the blob url on success\n                this.href = url;\n                // Ends processing\n                this.busy = false;\n                // Triggers another click event making sure the [href] get updated\n                setTimeout(() => this.ref.nativeElement.click());\n            });\n            // Prevents default\n            return false;\n        }\n        ngOnDestroy() {\n            // Revokes the URL object\n            if (this.blob) {\n                URL.revokeObjectURL(this.blob);\n            }\n            // Unsubscribes the encoder\n            if (this.sub) {\n                this.sub.unsubscribe();\n            }\n        }\n    }\n    DownloadDirective.ɵfac = function DownloadDirective_Factory(t) { return new (t || DownloadDirective)(core[\"Qb\" /* ɵɵdirectiveInject */](SAMEORIGIN), core[\"Qb\" /* ɵɵdirectiveInject */](http[\"b\" /* HttpClient */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](platform_browser[\"b\" /* DomSanitizer */])); };\n    DownloadDirective.ɵdir = core[\"Lb\" /* ɵɵdefineDirective */]({ type: DownloadDirective, selectors: [[\"a\", \"download\", \"\"]], hostVars: 2, hostBindings: function DownloadDirective_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"click\", function DownloadDirective_click_HostBindingHandler() { return ctx.onClick(); });\n            }\n            if (rf & 2) {\n                core[\"Zb\" /* ɵɵhostProperty */](\"href\", ctx.safeHref, core[\"Ac\" /* ɵɵsanitizeUrl */]);\n                core[\"Eb\" /* ɵɵattribute */](\"download\", ctx.download);\n            }\n        }, inputs: { download: \"download\", source: [\"href\", \"source\"] }, exportAs: [\"wmDownload\"] });\n    return DownloadDirective;\n})();\n\n// CONCATENATED MODULE: ./download/src/lib/download.module.ts\n\n\nlet download_module_DownloadModule = /*@__PURE__*/ (() => {\n    class DownloadModule {\n    }\n    DownloadModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: DownloadModule });\n    DownloadModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function DownloadModule_Factory(t) { return new (t || DownloadModule)(); }, imports: [[http[\"c\" /* HttpClientModule */]]] });\n    return DownloadModule;\n})();\n\n// CONCATENATED MODULE: ./download/src/index.ts\n\n\n\n// EXTERNAL MODULE: ./elements/src/lib/icon/index.ts + 1 modules\nvar lib_icon = __webpack_require__(\"txmD\");\n\n// CONCATENATED MODULE: ./elements/src/lib/image/image.component.ts\n\n\nfunction ImageComponent_ng_content_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"nc\" /* ɵɵprojection */](0, 0, [\"*ngIf\", \"!source\"]);\n    }\n}\nfunction ImageComponent_ng_content_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"nc\" /* ɵɵprojection */](0, 1, [\"*ngIf\", \"!!source && !load && !error\"]);\n    }\n}\nfunction ImageComponent_ng_content_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"nc\" /* ɵɵprojection */](0, 2, [\"*ngIf\", \"error\"]);\n    }\n}\nconst image_component_c0 = [[[\"\", \"imagePlaceholder\", \"\"]], [[\"\", \"imageLoading\", \"\"]], [[\"\", \"imageError\", \"\"]]];\nconst image_component_c1 = [\"[imagePlaceholder]\", \"[imageLoading]\", \"[imageError]\"];\n/** Simple img wrapper component for easy loading/error handling */\nlet image_component_ImageComponent = /*@__PURE__*/ (() => {\n    class ImageComponent {\n        /** The source url */\n        set src(src) {\n            this.load = this.error = false;\n            this.source = src;\n        }\n    }\n    ImageComponent.ɵfac = function ImageComponent_Factory(t) { return new (t || ImageComponent)(); };\n    ImageComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: ImageComponent, selectors: [[\"wm-image\"]], hostAttrs: [1, \"wm-image\"], inputs: { src: \"src\", alt: \"alt\" }, ngContentSelectors: image_component_c1, decls: 4, vars: 7, consts: [[3, \"src\", \"alt\", \"load\", \"error\"], [4, \"ngIf\"]], template: function ImageComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](image_component_c0);\n                core[\"Wb\" /* ɵɵelementStart */](0, \"img\", 0);\n                core[\"ec\" /* ɵɵlistener */](\"load\", function ImageComponent_Template_img_load_0_listener() { return ctx.load = true; })(\"error\", function ImageComponent_Template_img_error_0_listener() { return ctx.error = true; });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](1, ImageComponent_ng_content_1_Template, 1, 0, \"ng-content\", 1);\n                core[\"Gc\" /* ɵɵtemplate */](2, ImageComponent_ng_content_2_Template, 1, 0, \"ng-content\", 1);\n                core[\"Gc\" /* ɵɵtemplate */](3, ImageComponent_ng_content_3_Template, 1, 0, \"ng-content\", 1);\n            }\n            if (rf & 2) {\n                core[\"Dc\" /* ɵɵstyleProp */](\"display\", !!ctx.source && ctx.load ? undefined : \"none\");\n                core[\"pc\" /* ɵɵproperty */](\"src\", ctx.source, core[\"Ac\" /* ɵɵsanitizeUrl */])(\"alt\", ctx.alt);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", !ctx.source);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", !!ctx.source && !ctx.load && !ctx.error);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx.error);\n            }\n        }, directives: [common[\"m\" /* NgIf */]], styles: [\".wm-image{overflow:hidden}.wm-image img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}\"], encapsulation: 2 });\n    return ImageComponent;\n})();\n\n// CONCATENATED MODULE: ./elements/src/lib/image/image.module.ts\n\n\nlet image_module_ImageModule = /*@__PURE__*/ (() => {\n    class ImageModule {\n    }\n    ImageModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: ImageModule });\n    ImageModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function ImageModule_Factory(t) { return new (t || ImageModule)(); }, imports: [[common[\"c\" /* CommonModule */]]] });\n    return ImageModule;\n})();\n\n// CONCATENATED MODULE: ./elements/src/lib/image/index.ts\n\n\n\n// EXTERNAL MODULE: ./elements/src/lib/button/index.ts + 1 modules\nvar lib_button = __webpack_require__(\"uaks\");\n\n// EXTERNAL MODULE: ./content/src/index.ts + 1 modules\nvar content_src = __webpack_require__(\"g7MM\");\n\n// EXTERNAL MODULE: ./pipes/src/lib/moment/index.ts + 1 modules\nvar moment = __webpack_require__(\"pvxE\");\n\n// CONCATENATED MODULE: ./pipes/src/lib/file-size/file-size.pipe.ts\n\nconst FILE_SIZE_UNITS_LONG = [\n    'Bytes',\n    'Kilobytes',\n    'Megabytes',\n    'Gigabytes',\n    'Pettabytes',\n    'Exabytes',\n    'Zettabytes',\n    'Yottabytes'\n];\nconst FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nlet file_size_pipe_FileSizePipe = /*@__PURE__*/ (() => {\n    class FileSizePipe {\n        transform(sizeInBytes, longForm) {\n            if (sizeInBytes === null || sizeInBytes === undefined) {\n                return '';\n            }\n            const units = !!longForm ? FILE_SIZE_UNITS_LONG : FILE_SIZE_UNITS;\n            // Computes the power of 1024\n            let power = Math.min(Math.floor(Math.log(sizeInBytes) / Math.log(1024)), units.length - 1);\n            // Computes the size keeping two decimals\n            const size = sizeInBytes / Math.pow(1024, power);\n            const formattedSize = Math.round(size * 100) / 100;\n            const unit = units[power];\n            return size ? `${formattedSize} ${unit}` : '0';\n        }\n    }\n    FileSizePipe.ɵfac = function FileSizePipe_Factory(t) { return new (t || FileSizePipe)(); };\n    FileSizePipe.ɵpipe = core[\"Pb\" /* ɵɵdefinePipe */]({ name: \"fileSize\", type: FileSizePipe, pure: true });\n    return FileSizePipe;\n})();\n\n// CONCATENATED MODULE: ./pipes/src/lib/file-size/file-size.module.ts\n\nlet file_size_module_FileSizePipeModule = /*@__PURE__*/ (() => {\n    class FileSizePipeModule {\n    }\n    FileSizePipeModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: FileSizePipeModule });\n    FileSizePipeModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function FileSizePipeModule_Factory(t) { return new (t || FileSizePipeModule)(); }, imports: [[]] });\n    return FileSizePipeModule;\n})();\n\n// CONCATENATED MODULE: ./pipes/src/lib/file-size/index.ts\n\n\n\n// EXTERNAL MODULE: ./wizdm/src/app/navigator/actionbar/index.ts + 1 modules\nvar actionbar = __webpack_require__(\"kNiW\");\n\n// EXTERNAL MODULE: ./connect/src/lib/storage/extras/index.ts + 3 modules\nvar extras = __webpack_require__(\"I9WU\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/forkJoin.js\nvar forkJoin = __webpack_require__(\"cp0P\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js\nvar switchMap = __webpack_require__(\"eIep\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/tap.js + 1 modules\nvar tap = __webpack_require__(\"vkgz\");\n\n// EXTERNAL MODULE: ./connect/src/lib/storage/index.ts + 5 modules\nvar storage = __webpack_require__(\"tFpD\");\n\n// EXTERNAL MODULE: ./connect/src/lib/auth/index.ts\nvar lib_auth = __webpack_require__(\"R6uK\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/uploads/upload.animations.ts\n\nconst $timing = '225ms cubic-bezier(0.4, 0.0, 0.2, 1)';\nconst $animations = [\n    Object(animations[\"o\" /* trigger */])('expand', [\n        Object(animations[\"n\" /* transition */])(':enter', [Object(animations[\"m\" /* style */])({ height: '0px', minHeight: '0' }), Object(animations[\"e\" /* animate */])($timing)]),\n        Object(animations[\"n\" /* transition */])(':leave', Object(animations[\"e\" /* animate */])($timing, Object(animations[\"m\" /* style */])({ height: '0px', minHeight: '0' })))\n    ])\n];\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/core.js\nvar esm2015_core = __webpack_require__(\"/q54\");\n\n// EXTERNAL MODULE: ./content/src/lib/streamer/content.directive.ts\nvar content_directive = __webpack_require__(\"Qfjl\");\n\n// EXTERNAL MODULE: ./gtag/src/lib/gtag.directive.ts\nvar gtag_directive = __webpack_require__(\"FkMH\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/navigator/actionbar/actionbar.directive.ts\nvar actionbar_directive = __webpack_require__(\"mx0f\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex.js\nvar flex = __webpack_require__(\"VDRc\");\n\n// EXTERNAL MODULE: ./elements/src/lib/dialog/dialog.component.ts\nvar dialog_component = __webpack_require__(\"7/R1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/dialog.js\nvar fesm2015_dialog = __webpack_require__(\"iELJ\");\n\n// EXTERNAL MODULE: ./readme/src/lib/readme.component.ts\nvar readme_component = __webpack_require__(\"n8oj\");\n\n// EXTERNAL MODULE: ./elements/src/lib/button/button-media-changer.directive.ts\nvar button_media_changer_directive = __webpack_require__(\"U3RD\");\n\n// EXTERNAL MODULE: ./elements/src/lib/button/button-changer.directive.ts\nvar button_changer_directive = __webpack_require__(\"6920\");\n\n// EXTERNAL MODULE: ./elements/src/lib/icon/icon.component.ts\nvar icon_component = __webpack_require__(\"h0Qx\");\n\n// EXTERNAL MODULE: ./pipes/src/lib/moment/moment.pipe.ts\nvar moment_pipe = __webpack_require__(\"cpjW\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/uploads/uploads.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction UploadsComponent_ng_container_0_ng_template_1_mat_progress_spinner_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"mat-progress-spinner\", 39);\n    }\n}\nfunction UploadsComponent_ng_container_0_ng_template_1_wm_icon_19_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"wm-icon\", 40);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"icon\", (msgs_r1.actions == null ? null : msgs_r1.actions.delete == null ? null : msgs_r1.actions.delete.icon) || \"delete\");\n    }\n}\nfunction UploadsComponent_ng_container_0_ng_template_1_ng_template_20_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ic\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.actions == null ? null : msgs_r1.actions.delete == null ? null : msgs_r1.actions.delete.caption) || \"Delete files\");\n    }\n}\nfunction UploadsComponent_ng_container_0_ng_template_1_wm_icon_40_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"wm-icon\", 40);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"icon\", (msgs_r1.actions == null ? null : msgs_r1.actions.upload == null ? null : msgs_r1.actions.upload.icon) || \"backup\");\n    }\n}\nfunction UploadsComponent_ng_container_0_ng_template_1_ng_template_41_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ic\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.actions == null ? null : msgs_r1.actions.upload == null ? null : msgs_r1.actions.upload.caption) || \"Upload Files\");\n    }\n}\nfunction UploadsComponent_ng_container_0_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r35 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Gc\" /* ɵɵtemplate */](0, UploadsComponent_ng_container_0_ng_template_1_mat_progress_spinner_0_Template, 1, 0, \"mat-progress-spinner\", 22);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"wm-dialog\", 23, 24);\n        core[\"ec\" /* ɵɵlistener */](\"closedChange\", function UploadsComponent_ng_container_0_ng_template_1_Template_wm_dialog_closedChange_1_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r35); const ctx_r34 = core[\"ic\" /* ɵɵnextContext */](2); return $event && ctx_r34.deleteFiles(); });\n        core[\"Wb\" /* ɵɵelementStart */](3, \"h2\", 25);\n        core[\"Wb\" /* ɵɵelementStart */](4, \"b\");\n        core[\"Ic\" /* ɵɵtext */](5);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](6, \"mat-dialog-content\", 26);\n        core[\"Ic\" /* ɵɵtext */](7, \" You're about to \");\n        core[\"Wb\" /* ɵɵelementStart */](8, \"b\");\n        core[\"Ic\" /* ɵɵtext */](9, \"delete\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Ic\" /* ɵɵtext */](10, \" the selected files.\");\n        core[\"Rb\" /* ɵɵelement */](11, \"br\");\n        core[\"Ic\" /* ɵɵtext */](12, \"Are you sure? \");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](13, \"mat-dialog-actions\", 27);\n        core[\"Wb\" /* ɵɵelementStart */](14, \"button\", 28);\n        core[\"Ic\" /* ɵɵtext */](15);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](16, \"button\", 29);\n        core[\"Ic\" /* ɵɵtext */](17);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](18, \"button\", 30);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_ng_template_1_Template_button_click_18_listener() { core[\"yc\" /* ɵɵrestoreView */](_r35); const _r21 = core[\"vc\" /* ɵɵreference */](2); return _r21.open(); });\n        core[\"Gc\" /* ɵɵtemplate */](19, UploadsComponent_ng_container_0_ng_template_1_wm_icon_19_Template, 1, 1, \"wm-icon\", 31);\n        core[\"Gc\" /* ɵɵtemplate */](20, UploadsComponent_ng_container_0_ng_template_1_ng_template_20_Template, 1, 1, \"ng-template\", null, 32, core[\"Hc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](22, \"input\", 33, 34);\n        core[\"ec\" /* ɵɵlistener */](\"change\", function UploadsComponent_ng_container_0_ng_template_1_Template_input_change_22_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r35); const ctx_r37 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r37.uploadFiles($event.target.files); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](24, \"wm-dialog\", 35, 36);\n        core[\"ec\" /* ɵɵlistener */](\"closedChange\", function UploadsComponent_ng_container_0_ng_template_1_Template_wm_dialog_closedChange_24_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r35); const ctx_r38 = core[\"ic\" /* ɵɵnextContext */](2); return $event && ctx_r38.uploadFiles(ctx_r38.overwriteFiles, true); });\n        core[\"Wb\" /* ɵɵelementStart */](26, \"h2\", 25);\n        core[\"Wb\" /* ɵɵelementStart */](27, \"b\");\n        core[\"Ic\" /* ɵɵtext */](28);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](29, \"mat-dialog-content\", 26);\n        core[\"Ic\" /* ɵɵtext */](30, \" Some of the files \");\n        core[\"Wb\" /* ɵɵelementStart */](31, \"i\");\n        core[\"Ic\" /* ɵɵtext */](32, \"already exist\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Ic\" /* ɵɵtext */](33, \" and will be overridden. \");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](34, \"mat-dialog-actions\", 27);\n        core[\"Wb\" /* ɵɵelementStart */](35, \"button\", 28);\n        core[\"Ic\" /* ɵɵtext */](36);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](37, \"button\", 29);\n        core[\"Ic\" /* ɵɵtext */](38);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](39, \"button\", 37);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_ng_template_1_Template_button_click_39_listener() { core[\"yc\" /* ɵɵrestoreView */](_r35); const _r25 = core[\"vc\" /* ɵɵreference */](23); _r25.value = \"\"; return _r25.click(); });\n        core[\"Gc\" /* ɵɵtemplate */](40, UploadsComponent_ng_container_0_ng_template_1_wm_icon_40_Template, 1, 1, \"wm-icon\", 31);\n        core[\"Gc\" /* ɵɵtemplate */](41, UploadsComponent_ng_container_0_ng_template_1_ng_template_41_Template, 1, 1, \"ng-template\", null, 38, core[\"Hc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const mobile_r19 = ctx.isMobile;\n        const _r23 = core[\"vc\" /* ɵɵreference */](21);\n        const _r28 = core[\"vc\" /* ɵɵreference */](42);\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r2 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r2.busy);\n        core[\"Db\" /* ɵɵadvance */](5);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmDelete == null ? null : msgs_r1.confirmDelete.title) || \"Deleting file(s)\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"wm-readme\", msgs_r1.confirmDelete == null ? null : msgs_r1.confirmDelete.message);\n        core[\"Db\" /* ɵɵadvance */](8);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", false);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmDelete == null ? null : msgs_r1.confirmDelete.cancel) || \"Abort\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", true);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmDelete == null ? null : msgs_r1.confirmDelete.ok) || \"Proceed\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"color\", (msgs_r1.actions == null ? null : msgs_r1.actions.delete == null ? null : msgs_r1.actions.delete.color) || \"warn\")(\"disabled\", ctx_r2.busy || ctx_r2.isNoneSelected());\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", mobile_r19)(\"ngIfElse\", _r23);\n        core[\"Db\" /* ɵɵadvance */](5);\n        core[\"pc\" /* ɵɵproperty */](\"opened\", ctx_r2.overwriteFiles);\n        core[\"Db\" /* ɵɵadvance */](4);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmOverwrite == null ? null : msgs_r1.confirmOverwrite.title) || \"Existing file(s)\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"wm-readme\", msgs_r1.confirmOverwrite == null ? null : msgs_r1.confirmOverwrite.message);\n        core[\"Db\" /* ɵɵadvance */](6);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", false);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmOverwrite == null ? null : msgs_r1.confirmOverwrite.cancel) || \"Abort\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", true);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.confirmOverwrite == null ? null : msgs_r1.confirmOverwrite.ok) || \"Proceed\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"color\", (msgs_r1.actions == null ? null : msgs_r1.actions.upload == null ? null : msgs_r1.actions.upload.color) || \"primary\")(\"type\", mobile_r19 ? \"icon\" : \"stroked\")(\"disabled\", ctx_r2.busy);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", mobile_r19)(\"ngIfElse\", _r28);\n    }\n}\nfunction UploadsComponent_ng_container_0_th_7_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r42 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 41);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"mat-checkbox\", 42);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_th_7_Template_mat_checkbox_click_1_listener() { core[\"yc\" /* ɵɵrestoreView */](_r42); const ctx_r41 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r41.toggleSelection(); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"checked\", ctx_r3.isAllSelected())(\"indeterminate\", ctx_r3.isPartlySelected())(\"disabled\", ctx_r3.busy);\n    }\n}\nfunction UploadsComponent_ng_container_0_td_8_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r46 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 43);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_td_8_Template_td_click_0_listener($event) { return $event.stopPropagation(); });\n        core[\"Wb\" /* ɵɵelementStart */](1, \"mat-checkbox\", 44);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_td_8_Template_mat_checkbox_click_1_listener() { core[\"yc\" /* ɵɵrestoreView */](_r46); const record_r43 = ctx.$implicit; const ctx_r45 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r45.toggleSelection(record_r43); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r43 = ctx.$implicit;\n        const ctx_r4 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"checked\", ctx_r4.isSelected(record_r43))(\"disabled\", record_r43.file.uploading);\n    }\n}\nfunction UploadsComponent_ng_container_0_th_10_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 45);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.columns == null ? null : msgs_r1.columns.name) || \"Name\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_11_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 46);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"span\", 47);\n        core[\"jc\" /* ɵɵpipe */](2, \"olderThan\");\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r48 = ctx.$implicit;\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"matBadge\", msgs_r1.newBadge || \"new\")(\"matBadgeHidden\", !core[\"lc\" /* ɵɵpipeBind2 */](2, 3, record_r48.data.updated, \"PT3M\"));\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](record_r48.data.name);\n    }\n}\nfunction UploadsComponent_ng_container_0_th_13_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 48);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.columns == null ? null : msgs_r1.columns.size) || \"Size\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_14_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 49);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"jc\" /* ɵɵpipe */](2, \"fileSize\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r51 = ctx.$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](core[\"kc\" /* ɵɵpipeBind1 */](2, 1, record_r51.data.size) || \"-\");\n    }\n}\nfunction UploadsComponent_ng_container_0_th_16_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 48);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.columns == null ? null : msgs_r1.columns.type) || \"Type\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_17_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 49);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r53 = ctx.$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](record_r53.data.contentType);\n    }\n}\nfunction UploadsComponent_ng_container_0_th_19_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 48);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.columns == null ? null : msgs_r1.columns.updated) || \"Last modified\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_20_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r62 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"span\", 52);\n        core[\"Rb\" /* ɵɵelement */](1, \"mat-progress-bar\", 53);\n        core[\"Wb\" /* ɵɵelementStart */](2, \"button\", 54);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_td_20_span_1_Template_button_click_2_listener() { core[\"yc\" /* ɵɵrestoreView */](_r62); const record_r55 = core[\"ic\" /* ɵɵnextContext */]().$implicit; return record_r55.file.cancel(); });\n        core[\"Wb\" /* ɵɵelementStart */](3, \"mat-icon\", 55);\n        core[\"Ic\" /* ɵɵtext */](4, \"clear\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const progress_r59 = ctx.ngIf;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"value\", progress_r59)(\"mode\", progress_r59 < 100 ? \"determinate\" : \"indeterminate\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"disabled\", progress_r59 >= 100);\n    }\n}\nfunction UploadsComponent_ng_container_0_td_20_ng_template_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ic\" /* ɵɵtext */](0);\n        core[\"jc\" /* ɵɵpipe */](1, \"moment\");\n    }\n    if (rf & 2) {\n        const record_r55 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Jc\" /* ɵɵtextInterpolate */](core[\"lc\" /* ɵɵpipeBind2 */](1, 1, record_r55.data.updated, \"ll\") || \"-\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_20_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 49);\n        core[\"Gc\" /* ɵɵtemplate */](1, UploadsComponent_ng_container_0_td_20_span_1_Template, 5, 3, \"span\", 50);\n        core[\"jc\" /* ɵɵpipe */](2, \"async\");\n        core[\"Gc\" /* ɵɵtemplate */](3, UploadsComponent_ng_container_0_td_20_ng_template_3_Template, 2, 4, \"ng-template\", null, 51, core[\"Hc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r55 = ctx.$implicit;\n        const _r57 = core[\"vc\" /* ɵɵreference */](4);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", core[\"kc\" /* ɵɵpipeBind1 */](2, 2, record_r55.file.progress$))(\"ngIfElse\", _r57);\n    }\n}\nfunction UploadsComponent_ng_container_0_th_22_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 56);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.columns == null ? null : msgs_r1.columns.download) || \"Download\");\n    }\n}\nfunction UploadsComponent_ng_container_0_td_23_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 57);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_td_23_Template_td_click_0_listener($event) { return $event.stopPropagation(); });\n        core[\"Wb\" /* ɵɵelementStart */](1, \"a\", 58, 59);\n        core[\"Wb\" /* ɵɵelementStart */](3, \"mat-icon\", 55);\n        core[\"Ic\" /* ɵɵtext */](4, \"get_app\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r65 = ctx.$implicit;\n        const _r66 = core[\"vc\" /* ɵɵreference */](2);\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"href\", record_r65.data.url, core[\"Ac\" /* ɵɵsanitizeUrl */])(\"download\", record_r65.data.name)(\"disabled\", !record_r65.data.url || _r66.busy)(\"title\", (msgs_r1.downloadTitle || \"Download\") + \" \" + record_r65.data.name);\n    }\n}\nfunction UploadsComponent_ng_container_0_td_25_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 61);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"wm-image\", 62);\n        core[\"Rb\" /* ɵɵelement */](2, \"mat-progress-spinner\", 63);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r69 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"@expand\", undefined);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"src\", record_r69.data.url);\n    }\n}\nfunction UploadsComponent_ng_container_0_td_25_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 46);\n        core[\"Gc\" /* ɵɵtemplate */](1, UploadsComponent_ng_container_0_td_25_div_1_Template, 3, 2, \"div\", 60);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const record_r69 = ctx.$implicit;\n        const ctx_r15 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"Eb\" /* ɵɵattribute */](\"colspan\", ctx_r15.displayedColumns.length);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", record_r69 === ctx_r15.previewRecord);\n    }\n}\nfunction UploadsComponent_ng_container_0_tr_26_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"tr\", 64);\n    }\n}\nfunction UploadsComponent_ng_container_0_tr_27_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r74 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"tr\", 65);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function UploadsComponent_ng_container_0_tr_27_Template_tr_click_0_listener() { core[\"yc\" /* ɵɵrestoreView */](_r74); const row_r72 = ctx.$implicit; const ctx_r73 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r73.togglePreview(row_r72); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction UploadsComponent_ng_container_0_tr_28_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"tr\", 66);\n    }\n}\nconst uploads_component_c0 = function () { return [\"preview\"]; };\nfunction UploadsComponent_ng_container_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r77 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](0, 1);\n        core[\"Gc\" /* ɵɵtemplate */](1, UploadsComponent_ng_container_0_ng_template_1_Template, 43, 23, \"ng-template\", 2);\n        core[\"Wb\" /* ɵɵelementStart */](2, \"h2\");\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](4, \"mat-divider\");\n        core[\"Wb\" /* ɵɵelementStart */](5, \"table\", 3);\n        core[\"ec\" /* ɵɵlistener */](\"matSortChange\", function UploadsComponent_ng_container_0_Template_table_matSortChange_5_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r77); const ctx_r76 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r76.sortBy$.next($event); });\n        core[\"Ub\" /* ɵɵelementContainerStart */](6, 4);\n        core[\"Gc\" /* ɵɵtemplate */](7, UploadsComponent_ng_container_0_th_7_Template, 2, 3, \"th\", 5);\n        core[\"Gc\" /* ɵɵtemplate */](8, UploadsComponent_ng_container_0_td_8_Template, 2, 2, \"td\", 6);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](9, 7);\n        core[\"Gc\" /* ɵɵtemplate */](10, UploadsComponent_ng_container_0_th_10_Template, 2, 1, \"th\", 8);\n        core[\"Gc\" /* ɵɵtemplate */](11, UploadsComponent_ng_container_0_td_11_Template, 4, 6, \"td\", 9);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](12, 10);\n        core[\"Gc\" /* ɵɵtemplate */](13, UploadsComponent_ng_container_0_th_13_Template, 2, 1, \"th\", 11);\n        core[\"Gc\" /* ɵɵtemplate */](14, UploadsComponent_ng_container_0_td_14_Template, 3, 3, \"td\", 12);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](15, 13);\n        core[\"Gc\" /* ɵɵtemplate */](16, UploadsComponent_ng_container_0_th_16_Template, 2, 1, \"th\", 11);\n        core[\"Gc\" /* ɵɵtemplate */](17, UploadsComponent_ng_container_0_td_17_Template, 2, 1, \"td\", 12);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](18, 14);\n        core[\"Gc\" /* ɵɵtemplate */](19, UploadsComponent_ng_container_0_th_19_Template, 2, 1, \"th\", 11);\n        core[\"Gc\" /* ɵɵtemplate */](20, UploadsComponent_ng_container_0_td_20_Template, 5, 4, \"td\", 12);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](21, 15);\n        core[\"Gc\" /* ɵɵtemplate */](22, UploadsComponent_ng_container_0_th_22_Template, 2, 1, \"th\", 16);\n        core[\"Gc\" /* ɵɵtemplate */](23, UploadsComponent_ng_container_0_td_23_Template, 5, 4, \"td\", 17);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](24, 18);\n        core[\"Gc\" /* ɵɵtemplate */](25, UploadsComponent_ng_container_0_td_25_Template, 2, 2, \"td\", 9);\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](26, UploadsComponent_ng_container_0_tr_26_Template, 1, 0, \"tr\", 19);\n        core[\"Gc\" /* ɵɵtemplate */](27, UploadsComponent_ng_container_0_tr_27_Template, 1, 0, \"tr\", 20);\n        core[\"Gc\" /* ɵɵtemplate */](28, UploadsComponent_ng_container_0_tr_28_Template, 1, 0, \"tr\", 21);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.title || \"Uploads\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"dataSource\", ctx_r0)(\"matSortActive\", ctx_r0.sortBy$.value.active)(\"matSortDirection\", ctx_r0.sortBy$.value.direction)(\"matSortDisabled\", !!ctx_r0.previewRecord);\n        core[\"Db\" /* ɵɵadvance */](21);\n        core[\"pc\" /* ɵɵproperty */](\"matHeaderRowDef\", ctx_r0.displayedColumns);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"matRowDefColumns\", ctx_r0.displayedColumns);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"matRowDefColumns\", core[\"rc\" /* ɵɵpureFunction0 */](8, uploads_component_c0));\n    }\n}\nlet uploads_component_UploadsComponent = /*@__PURE__*/ (() => {\n    class UploadsComponent extends extras[\"b\" /* StorageFolder */] {\n        constructor(store, auth, media) {\n            super(store, auth.userId);\n            this.media = media;\n            /** Sorting subject */\n            this.sortBy$ = new BehaviorSubject[\"a\" /* BehaviorSubject */]({ active: 'name', direction: 'asc' });\n            /** Selection */\n            this.selection = new collections[\"c\" /* SelectionModel */](true, []);\n            /** Copy of all records */\n            this.allRecords = [];\n            /** Record to preview */\n            this.previewRecord = null;\n            /** True when the page is uploading files */\n            this.uploading = false;\n            /** True when the page is deleting files */\n            this.deleting = false;\n            /** True when the page is loading */\n            this.loading = true;\n        }\n        /** True when the page is busy loading or deleting */\n        get busy() { return this.loading || this.uploading || this.deleting; }\n        /** True on small screen devices */\n        get mobile() { return this.media.isActive('xs'); }\n        /** List of columns to display  */\n        get displayedColumns() {\n            // Limited columns on small display\n            return this.mobile ? ['select', 'name', 'download']\n                // Full columns on large display\n                : ['select', 'name', 'size', 'type', 'updated', 'download'];\n        }\n        connect(viewer) {\n            //viewer.viewChange.subscribe( list => console.log(list) );\n            // Lists the files from the StorageFolder\n            return this.files$.pipe(\n            // Combines the StorageFile[] into UploadRecord[]\n            Object(switchMap[\"a\" /* switchMap */])(files => files.length > 0 ? Object(combineLatest[\"a\" /* combineLatest */])(files.map(file => \n            // Maps the file summary together with the file instance into records\n            file.summary$.pipe(Object(map[\"a\" /* map */])(data => ({ file, data }))))\n            // Skips on an empty arrays\n            ) : Object(of[\"a\" /* of */])([])), \n            // Clears the selection whenever the records change\n            Object(tap[\"a\" /* tap */])(() => { this.selection.clear(); this.previewRecord = null; }), \n            // Sorts the records by the given column\n            Object(switchMap[\"a\" /* switchMap */])(records => this.sortBy$.pipe(Object(map[\"a\" /* map */])(sortBy => {\n                // Gets the sorting direction first\n                const dir = sortBy.direction == 'asc' ? 1 : -1;\n                // Sorts the array\n                return records.sort((a, b) => {\n                    // Geta A value pushing it last when undefined (uploading?)\n                    const valueA = a.data[sortBy.active];\n                    if (!valueA) {\n                        return 1;\n                    }\n                    // Geta B value pushing it last when undefined (uploading?)\n                    const valueB = b.data[sortBy.active];\n                    if (!valueB) {\n                        return -1;\n                    }\n                    // Compares A vs B\n                    return (valueA > valueB) ? dir : ((valueA < valueB) ? -dir : 0);\n                });\n            }))), \n            // Keeps track on the full list of records\n            Object(tap[\"a\" /* tap */])(files => { this.allRecords = files; this.loading = false; }));\n        }\n        disconnect(collectionViewer) {\n            this.allRecords = [];\n        }\n        /** Splits a FileList into an array of all files plus an array of alreadt existing files */\n        listFiles(list) {\n            let allFiles = [], existingFiles = [];\n            for (let i = 0; i < list.length; i++) {\n                const item = list.item(i);\n                if (this.allRecords.some(rec => rec.data.name === item.name)) {\n                    existingFiles.push(item);\n                }\n                allFiles.push(item);\n            }\n            return { allFiles, existingFiles };\n        }\n        /** Uloads the given list of files */\n        uploadFiles(list, overwrite = false) {\n            if (list.length <= 0) {\n                return;\n            }\n            // Splits the file list in all files and already existing files\n            const { allFiles, existingFiles } = this.listFiles(list);\n            // Whenever some of the files already exists, ask the user for confirmation\n            if (existingFiles.length > 0 && !overwrite) {\n                this.overwriteFiles = list;\n                return;\n            }\n            // Tracks the uploading progress\n            this.uploading = true;\n            // Starts uploading the given files and waits for all to complete. Catch errors since it is likely a user cancellation\n            Object(forkJoin[\"a\" /* forkJoin */])(allFiles.map(file => this.upload(file, { contentType: file.type }).pipe(Object(catchError[\"a\" /* catchError */])(() => Object(of[\"a\" /* of */])(null))))).toPromise().then(uploads => {\n                // Checks for overrides or cancellations to re-list the files\n                if (overwrite || uploads.some(upload => upload === null)) {\n                    this.ls(\".\");\n                    this.loading = true;\n                }\n                this.uploading = false;\n            });\n        }\n        /** Deletes the selected files */\n        deleteFiles() {\n            // Skips when no files are selected\n            if (this.isNoneSelected()) {\n                return;\n            }\n            // Traks the deletion process\n            this.deleting = true;\n            // Deletes all the selected files waiting for all to complete\n            Promise.all(this.selection.selected.map(rec => rec.file.delete())).then(() => {\n                // Re-lists the files\n                this.ls(\".\");\n                this.loading = true;\n                // Resets the flags\n                this.deleting = false;\n            });\n        }\n        /** Toggles the given selection. Reverts toggling the full list whenever record is omitted */\n        toggleSelection(record) {\n            if (record) {\n                this.selection.toggle(record);\n            }\n            else {\n                if (this.isNoneSelected()) {\n                    this.allRecords.forEach(record => this.selection.select(record));\n                }\n                else {\n                    this.selection.clear();\n                }\n            }\n        }\n        /** Returns true if the given record is selected */\n        isSelected(record) {\n            return this.selection.isSelected(record);\n        }\n        /** Returns true when all files are selected */\n        isAllSelected() {\n            return (this.allRecords.length > 0) && (this.allRecords.length === this.selection.selected.length);\n        }\n        /** Returns true when some of the files are selected */\n        isPartlySelected() {\n            return (this.selection.selected.length > 0) && !this.isAllSelected();\n        }\n        /** Returns true when no files are selected */\n        isNoneSelected() {\n            return this.allRecords.length === 0 || this.selection.selected.length <= 0;\n        }\n        /** Toggles the record preview */\n        togglePreview(record) {\n            var _a, _b;\n            // Previews only image files\n            this.previewRecord = this.previewRecord === record ? null : (((_b = (_a = record.data) === null || _a === void 0 ? void 0 : _a.contentType) === null || _b === void 0 ? void 0 : _b.startsWith('image')) ? record : null);\n        }\n    }\n    UploadsComponent.ɵfac = function UploadsComponent_Factory(t) { return new (t || UploadsComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](storage[\"b\" /* StorageService */]), core[\"Qb\" /* ɵɵdirectiveInject */](lib_auth[\"c\" /* AuthService */]), core[\"Qb\" /* ɵɵdirectiveInject */](esm2015_core[\"g\" /* MediaObserver */])); };\n    UploadsComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: UploadsComponent, selectors: [[\"wm-uploads\"]], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 1, consts: [[\"gtag\", \"uploads\", 4, \"wmContent\", \"wmContentSelect\"], [\"gtag\", \"uploads\"], [\"wmActionbar\", \"\"], [\"mat-table\", \"\", \"multiTemplateDataRows\", \"\", \"matSort\", \"\", \"fxFill\", \"\", 3, \"dataSource\", \"matSortActive\", \"matSortDirection\", \"matSortDisabled\", \"matSortChange\"], [\"matColumnDef\", \"select\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"click\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"size\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"class\", \"center\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"center\", 4, \"matCellDef\"], [\"matColumnDef\", \"type\"], [\"matColumnDef\", \"updated\"], [\"matColumnDef\", \"download\"], [\"mat-header-cell\", \"\", \"class\", \"center\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"center\", 3, \"click\", 4, \"matCellDef\"], [\"matColumnDef\", \"preview\"], [\"mat-header-row\", \"\", \"class\", \"background-color\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", \"class\", \"background-color background-active\", 3, \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-row\", \"\", \"class\", \"background-color\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"color\", \"prinary\", \"mode\", \"indeterminate\", \"diameter\", \"20\", 4, \"ngIf\"], [3, \"closedChange\"], [\"confirmDelete\", \"\"], [\"mat-dialog-title\", \"\"], [3, \"wm-readme\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"color\", \"primary\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"mat-dialog-close\"], [\"mat-stroked-button\", \"\", \"type.lt-sm\", \"icon\", 3, \"color\", \"disabled\", \"click\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"deleteTemplate\", \"\"], [\"type\", \"file\", \"accept\", \"image/*\", \"multiple\", \"\", 2, \"display\", \"none\", 3, \"change\"], [\"openfile\", \"\"], [3, \"opened\", \"closedChange\"], [\"confirmOverwrite\", \"\"], [\"mat-button\", \"\", 3, \"color\", \"type\", \"disabled\", \"click\"], [\"uploadTemplate\", \"\"], [\"color\", \"prinary\", \"mode\", \"indeterminate\", \"diameter\", \"20\"], [3, \"icon\"], [\"mat-header-cell\", \"\"], [3, \"checked\", \"indeterminate\", \"disabled\", \"click\"], [\"mat-cell\", \"\", 3, \"click\"], [3, \"checked\", \"disabled\", \"click\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"matBadgeSize\", \"small\", \"matBadgeOverlap\", \"false\", \"matBadgeColor\", \"warn\", 3, \"matBadge\", \"matBadgeHidden\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 1, \"center\"], [\"mat-cell\", \"\", 1, \"center\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 4, \"ngIf\", \"ngIfElse\"], [\"updatedTemplate\", \"\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\"], [3, \"value\", \"mode\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"click\"], [\"inline\", \"\"], [\"mat-header-cell\", \"\", 1, \"center\"], [\"mat-cell\", \"\", 1, \"center\", 3, \"click\"], [\"mat-icon-button\", \"\", \"target\", \"_blank\", 3, \"href\", \"download\", \"disabled\", \"title\"], [\"dwld\", \"wmDownload\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", \"class\", \"preview\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"preview\"], [3, \"src\"], [\"imageLoading\", \"\", \"color\", \"prinary\", \"mode\", \"indeterminate\"], [\"mat-header-row\", \"\", 1, \"background-color\"], [\"mat-row\", \"\", 1, \"background-color\", \"background-active\", 3, \"click\"], [\"mat-row\", \"\", 1, \"background-color\"]], template: function UploadsComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, UploadsComponent_ng_container_0_Template, 29, 9, \"ng-container\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"settings-uploads\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], gtag_directive[\"a\" /* GtagDirective */], actionbar_directive[\"a\" /* ActionbarDirective */], divider[\"a\" /* MatDivider */], table_MatTable, sort_MatSort, flex[\"g\" /* FlexFillDirective */], table_MatColumnDef, table_MatHeaderCellDef, table_MatCellDef, table_MatHeaderRowDef, table_MatRowDef, common[\"m\" /* NgIf */], dialog_component[\"a\" /* DialogComponent */], fesm2015_dialog[\"h\" /* MatDialogTitle */], fesm2015_dialog[\"e\" /* MatDialogContent */], readme_component[\"a\" /* ReadmeComponent */], fesm2015_dialog[\"c\" /* MatDialogActions */], fesm2015_button[\"b\" /* MatButton */], fesm2015_dialog[\"d\" /* MatDialogClose */], button_media_changer_directive[\"a\" /* ButtonMediaChanger */], button_changer_directive[\"a\" /* ButtonTypeChanger */], progress_spinner[\"a\" /* MatProgressSpinner */], icon_component[\"a\" /* IconComponent */], table_MatHeaderCell, checkbox_MatCheckbox, table_MatCell, sort_MatSortHeader, badge[\"a\" /* MatBadge */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"d\" /* DefaultLayoutAlignDirective */], progress_bar[\"a\" /* MatProgressBar */], icon[\"a\" /* MatIcon */], fesm2015_button[\"a\" /* MatAnchor */], download_directive_DownloadDirective, image_component_ImageComponent, table_MatHeaderRow, table_MatRow], pipes: [moment_pipe[\"d\" /* OlderThanPipe */], file_size_pipe_FileSizePipe, common[\"b\" /* AsyncPipe */], moment_pipe[\"c\" /* MomentPipe */]], styles: [\"[_nghost-%COMP%]{display:flex;position:relative;flex-flow:column;justify-content:center}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{margin-bottom:16px}[_nghost-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(2n){height:0}[_nghost-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd)   td[_ngcontent-%COMP%]{border-bottom-width:0}[_nghost-%COMP%]   .preview[_ngcontent-%COMP%]{overflow:hidden;height:240px;margin:16px 0}[_nghost-%COMP%]   .preview[_ngcontent-%COMP%]   .wm-image[_ngcontent-%COMP%]{max-height:240px;max-width:100%}\"], data: { animation: $animations } });\n    return UploadsComponent;\n})();\n\n// EXTERNAL MODULE: ./content/src/lib/router/content-router.module.ts\nvar content_router_module = __webpack_require__(\"J3Me\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/uploads/uploads.module.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//import { CanLeaveModule, CanLeaveGuard } from 'app/navigator/guards/can-leave';\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        content: 'settings-uploads',\n        component: uploads_component_UploadsComponent,\n    }\n];\nlet uploads_module_UploadsModule = /*@__PURE__*/ (() => {\n    class UploadsModule {\n    }\n    UploadsModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: UploadsModule });\n    UploadsModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function UploadsModule_Factory(t) { return new (t || UploadsModule)(); }, providers: [\n            // Disables the standard check-box behavior for the table to customize it\n            { provide: MAT_CHECKBOX_DEFAULT_OPTIONS, useValue: { clickAction: 'noop' } }\n        ], imports: [[\n                common[\"c\" /* CommonModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                table_MatTableModule,\n                sort_MatSortModule,\n                divider[\"b\" /* MatDividerModule */],\n                icon[\"b\" /* MatIconModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                checkbox_MatCheckboxModule,\n                badge[\"b\" /* MatBadgeModule */],\n                progress_bar[\"b\" /* MatProgressBarModule */],\n                progress_spinner[\"b\" /* MatProgressSpinnerModule */],\n                src[\"a\" /* GtagModule */],\n                dialog[\"b\" /* DialogModule */],\n                readme_src[\"a\" /* ReadmeModule */],\n                lib_icon[\"a\" /* IconModule */],\n                image_module_ImageModule,\n                lib_button[\"a\" /* ButtonChangerModule */],\n                //CanLeaveModule,\n                actionbar[\"a\" /* ActionbarModule */],\n                file_size_module_FileSizePipeModule,\n                moment[\"a\" /* MomentPipesModule */],\n                download_module_DownloadModule,\n                content_src[\"e\" /* ContentRouterModule */].forChild(routes)\n            ]] });\n    return UploadsModule;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}
{"version":3,"sources":["webpack:///elements/src/lib/highlight/highlight.module.ts","webpack:///wizdm/src/app/pages/explore/people/people.module.ts","webpack:///wizdm/src/app/pages/explore/people/people.component.ts","webpack:///wizdm/src/app/pages/explore/people/people.component.html","webpack:///elements/src/lib/highlight/highlight.component.ts","webpack:///elements/src/lib/highlight/highlight.component.html","webpack:///elements/src/lib/highlight/index.ts"],"names":["HighlightModule","routes","path","content","component","PeopleModule","forChild","search$","PeopleComponent","db","scroll","name","_loading$","loading$","pipe","length","Array","fill","more$","bottom","value","next","paged$","term$","toLowerCase","replace","term","highlight","RegExp","items$","index","item","id","HighlightComponent","tokens","changes","pattern","rx","source","compile","splice","push","lastIndex","start","match","exec","text","substring"],"mappings":"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","file":"people-people-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightComponent } from './highlight.component';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ HighlightComponent ],\n  exports: [ HighlightComponent ]\n})\nexport class HighlightModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { GtagModule } from '@wizdm/gtag';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { AvatarModule } from '@wizdm/elements/avatar';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { HighlightModule } from '@wizdm/elements/highlight';\nimport { ActionbarModule } from 'app/navigator/actionbar';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { PeopleComponent } from './people.component';\n\nconst routes: RoutesWithContent = [{\n\n  path: '',\n  content: 'explore-people',\n  component: PeopleComponent\n\n}];\n\n@NgModule({\n  declarations: [ PeopleComponent ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    A11yModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    GtagModule,\n    ReadmeModule,\n    IconModule,\n    AvatarModule,\n    ButtonChangerModule,\n    HighlightModule,\n    //ActionbarModule,\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class PeopleModule { }\n","import { tap, map, filter, switchMap, distinctUntilChanged, startWith, shareReplay } from 'rxjs/operators';\nimport { where, orderBy, limit, snap, page, data } from '@wizdm/connect/database/collection/operators';\nimport { DatabaseCollection } from '@wizdm/connect/database/collection';\nimport { DatabaseService } from '@wizdm/connect/database';\nimport { ScrollObservable } from 'app/utils/scrolling';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { UserData } from 'app/utils/user';\nimport { autocomplete } from '@wizdm/rxjs';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'wm-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.scss']\n})\nexport class PeopleComponent extends DatabaseCollection<UserData> {\n\n  /** Name to search for */\n  public name: string = '';\n\n  /** RegExp to highlight the search results */\n  public highlight: RegExp;\n\n  /** Searching observables */\n  readonly search$ = new BehaviorSubject<string>('');\n  readonly items$: Observable<UserData[]>;\n\n  private _loading$ = new BehaviorSubject<number>(0);\n  readonly loading$: Observable<number[]>;\n\n  // Tracks the result list by user id\n  public trackById(index: number, item: UserData) { return item.id; }\n\n  constructor(db: DatabaseService, scroll: ScrollObservable) {\n\n    super(db, 'users');\n\n    // Loading observable returning the array of skeleton items to display during loading\n    this.loading$ = this._loading$.pipe( map( length => Array(length).fill(0) ) );\n\n    // Paging observalbe to load the next page while scrolling\n    const more$ = scroll.pipe( \n      // Triggers the next page when approaching the bottom\n      map( scroll => scroll.bottom < 250 ),\n      // Filters for truthfull changes\n      startWith(true), distinctUntilChanged(), filter( value => value ),\n      // Shows the loading items\n      tap( () => this._loading$.next(20) ),\n      // Asks for the next 20 contacts\n      map( () => 20 )\n    );\n\n    // All items paged result observable. \n    const paged$ = this.pipe( \n      // Pages 20 items at a time\n      orderBy('fullName'), page(more$), data(), \n      // Hides the loading items when done\n      tap( () => this._loading$.next(0) ),\n      // Buffers the results to avoid reloading after a search\n      shareReplay(1)\n    );\n\n    // Searching term observable\n    const term$ = this.search$.pipe(\n      // Computes the search term\n      map( name => name && name.toLowerCase().replace(/^\\s+|\\s+$/g,'') ),\n      // Debounces the term for 500ms\n      autocomplete(500),\n      // Filters for real changes\n      distinctUntilChanged(),\n      // Updates the RegExp to highlight the results\n      tap( term => this.highlight = new RegExp(`\\\\b${term||'\\\\B'}`, 'ig') ),\n      // Shows some loading item\n      tap( term => this._loading$.next(term.length === 1 ? 10 : 0 ) )\n    );\n\n    // Searched items result obserable\n    const search$ = (term: string) => this.pipe( \n      // Queries for up to 20 items containing the term \n      orderBy('fullName'), where('searchIndex', 'array-contains', term), limit(10), snap(), data(),\n      // Hides the loading items when done\n      tap(() => this._loading$.next(0) )\n    );\n\n    // Overall items combined\n    this.items$ = term$.pipe( switchMap( term => term ? search$(term) : paged$ ) );\n  }\n}\n","\n<!-- Localized content -->\n<ng-container *wmContent=\"let msgs select 'explore-people'\" gtag=\"people\">\n\n  <!-- User's search form -->\n  <form fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"16px\" autocomplete=\"off\" cdkTrapFocus cdkTrapFocusAutoCapture>\n\n    <mat-form-field>\n\n      <mat-label>{{ msgs.search?.label || 'Search' }}</mat-label>\n      \n      <wm-icon matPrefix [icon]=\"msgs.search?.icon || 'search'\"></wm-icon>\n      \n      <input matInput name=\"name\" [ngModel]=\"name\" (ngModelChange)=\"search$.next(name = $event)\" cdkFocusInitial #formName=\"ngModel\">\n\n      <mat-hint>{{ msgs.search?.hint || 'Type the name to search for' }}</mat-hint>\n  \n    </mat-form-field>\n\n  </form>\n\n  <!-- Search result list -->\n  <mat-action-list>\n\n    <mat-list-item *ngFor=\"let item of items$ | async; trackBy: trackById\" [routerLink]=\"['/', '@' + item.userName]\">\n\n      <wm-avatar matListAvatar [src]=\"item.photo\" color=\"primary\"></wm-avatar>\n\n      <h3 matLine [wm-highlight]=\"item.fullName || item.name\" [pattern]=\"highlight\" color=\"accent\"></h3>\n      \n      <p matLine>{{ item.bio || item.motto }}</p>\n\n    </mat-list-item>\n\n    <!-- Loading skeleton items -->\n    <mat-list-item *ngFor=\"let item of loading$ | async\">\n  \n      <wm-avatar matListAvatar class=\"skeleton-loading\"></wm-avatar>\n      \n      <h3 matLine class=\"skeleton-loading text\"><span></span></h3>\n      \n      <p matLine class=\"skeleton-loading text\"><span></span></p>\n  \n    </mat-list-item>\n    \n  </mat-action-list>\n  \n</ng-container>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core'\n\n@Component({\n  selector: '[wm-highlight]',\n  templateUrl: './highlight.component.html',\n  host: { 'class': 'wm-highlight' }\n})\nexport class HighlightComponent implements OnChanges {\n\n  readonly tokens: (string|{ highlight: boolean, content: string })[] = [];\n  private rx: RegExp;\n\n  @Input() pattern: string|RegExp;\n\n  @Input('wm-highlight') source: string;\n\n  @Input() color: ThemePalette;\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if(!!changes.pattern) {\n\n      this.rx = null;\n\n      if(this.pattern instanceof RegExp) { \n        this.rx = this.pattern; \n      }\n\n      if(!!this.pattern && typeof(this.pattern) === 'string') { \n        // Builds a default regex to match the input string pattern\n        // at every word boundary case insensitive\n        this.rx = new RegExp(`\\\\b${this.pattern||'\\\\B'}`, 'ig'); \n      }\n    }\n\n    if(!!changes.source || !!changes.pattern) {\n     \n     this.compile(this.source, this.rx);\n    }\n  } \n \n  private compile(source: string, rx: RegExp) {\n\n    // Resets the segments array\n    this.tokens.splice(0);\n\n    // Skips null or emptiìy sources\n    if(!source) { return; }\n\n    if(!rx) { this.tokens.push(source); return; }\n\n    rx.lastIndex = 0;\n\n    let start = 0; let match;\n    while(match = rx.exec(source)) {\n\n      // Prevents the zero-length match infinite loop for all browsers\n      if(match.index == rx.lastIndex) { rx.lastIndex++ };\n\n      // Pushes the text preceeding a match \n      if(match.index > start) {\n        const text = source.substring(start, match.index); \n        this.tokens.push( text );   \n      }\n\n      const content = match[0];\n      this.tokens.push({ highlight: true, content });\n      \n      // Moves to the next text segment\n      start = match.index + match[0].length;\n    }\n\n    // Appends the final text chunk \n    if(rx.lastIndex < source.length) {\n      const text = source.substring(start, source.length);\n      this.tokens.push( text );\n    }\n  }\n}","<ng-content *ngIf=\"tokens.length === 0\"></ng-content>\n\n<ng-container *ngFor=\"let token of tokens\">\n\n  <span [attr.color]=\"color\" *ngIf=\"token.highlight; else plainText\">{{ token.content }}</span>\n\n  <ng-template #plainText>{{ token }}</ng-template>\n\n</ng-container>","export * from './highlight.module';"]}
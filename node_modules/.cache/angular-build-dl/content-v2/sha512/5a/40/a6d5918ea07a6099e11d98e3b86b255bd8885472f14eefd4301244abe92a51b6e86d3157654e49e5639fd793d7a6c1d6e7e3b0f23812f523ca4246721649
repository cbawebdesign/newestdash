{"version":3,"sources":["./wizdm/src/app/pages/admin/profile-fixer/profile-fixer.component.ts","./wizdm/src/app/pages/admin/profile-fixer/profile-fixer.component.html","./wizdm/src/app/pages/admin/profile-fixer/profile-fixer.module.ts"],"names":[],"mappings":"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","file":"profile-fixer-profile-fixer-module-es2015.js","sourcesContent":["import { Observable, Subject, forkJoin, of, from, defer, concat, empty } from 'rxjs';\nimport { DatabaseService } from '@wizdm/connect/database';\nimport { DatabaseBatch } from '@wizdm/connect/database/document';\nimport { StorageService, StorageRef } from '@wizdm/connect/storage';\nimport { FunctionsClient } from '@wizdm/connect/functions/client';\nimport { UserProfile, UserData } from 'app/utils/user';\nimport { map, scan, tap, switchMap } from 'rxjs/operators';\nimport { animationFrameScheduler } from 'rxjs';\nimport { UserRecord } from '../admin-types';\nimport { Component } from '@angular/core';\nimport { append } from '@wizdm/rxjs';\n\n/** Users Analysis Report */\nexport interface UserReport {\n\n  // Input data\n  users: UserRecord[];\n  profiles: UserData[];\n  folders: StorageRef[];\n\n  // Users vs profiles comparison\n  missing?: UserRecord[];\n  orphans?: UserData[];\n\n  // Profile inconsistencies\n  userNameMissing: UserData[];\n  fullNameMissing: UserData[];\n  searchIndexMissing: UserData[];\n  \n  // Status report\n  currentId?: string;\n  currentIndex?: number;\n  errorsCount?: number;\n  done?: boolean;\n}\n\n@Component({\n  selector: 'wm-profile-fixer',\n  templateUrl: './profile-fixer.component.html',\n  styleUrls: ['./profile-fixer.component.scss']\n})\nexport class ProfileFixerComponent {\n\n  readonly report$: Observable<UserReport>;\n  readonly run$ = new Subject<void>();\n  \n  /** WriteBatch collecting all the fixes to be applied over the database */\n  public batch: DatabaseBatch;\n\n  /** The DatabaseService */\n  private get db(): DatabaseService { return this.users.db; }\n\n  constructor(private client: FunctionsClient, private users: UserProfile, private st: StorageService ) { \n\n    // Builds the report observable to emit each step of the analysis\n    this.report$ = this.run$.pipe( \n\n      // Starts by resetting the WriteBatch, if any.\n      tap( () => { this.batch = null; }),\n      \n      // Concatenates two tasks\n      switchMap( () => concat( \n        \n        // First task simply emits an empty report to display the 'Fetchind data' message while loading data from the server\n        of({} as UserReport), \n        \n        // Second task starts by loading all the data from the server\n        forkJoin( this.listAllUsers(), this.listAllProfiles(), this.listAllFolders() ).pipe( \n\n          // Collects the results to initialize the repoprt with the input data\n          map( ([users, profiles, folders]) => ({ \n\n            users, profiles, folders, missing: [], orphans: [], currentId: '', errorsCount: 0 \n\n          } as UserReport) ),\n\n          // Runs every UserRecord by the animationScheduler\n          switchMap( report => from(report.users, animationFrameScheduler).pipe(\n\n            // Analyze each record building up the resulting report\n            scan( (report, user, index) => {\n\n              // Keeps track of the pregress\n              report.currentId = user.uid;\n              report.currentIndex = index;\n\n              // Gets the profile supposidely matching the UserRecord. Note that both UserRecord[] and \n              // UserData[] arrays are purposely sorted in ascending uid order server side\n              const profile = report.profiles[index - report.missing.length + report.orphans.length];\n              \n              // Matches the UserRecord with the profile:\n              // 1. Accounts for missing profiles (the user exists without a profile)\n              if(!profile || profile.id > user.uid) { \n      \n                report.missing.push( user ); \n                report.errorsCount++;\n              }\n              // 2. Accounts for orphan profiles (the profile exists without a user)\n              else if(profile.id < user.uid) { \n          \n                report.orphans.push( profile ); \n                report.errorsCount++;\n              }\n\n              // Verifies the user has a storage folder\n              const folderIndex = report.folders.findIndex( folder => folder.name === user.uid);\n              if(folderIndex >= 0) { report.folders.splice(folderIndex, 1); }\n\n              // Analyzes the profile for inconsistencies\n              this.analyzeProfile(profile, report);\n\n              // Emits the current report\n              return report;\n\n            }, report),\n\n            // Once every UserRecord as being analyzed, lets check for orphan profiles\n            append( report => {\n\n              // Computes the starting position accounting for missing and already discovered orphan profiles\n              const start = report.users.length - report.missing.length + report.orphans.length;\n\n              // Completes if there's nothing left to do\n              if(start >= report.profiles.length) { return empty(); }\n\n              // Runs every profile left otherwise\n              return from( report.profiles.slice(start), animationFrameScheduler).pipe(\n\n                // Analyze each orhpan profile\n                scan( (report, profile) => {\n\n                  // Keeps track of the progress\n                  report.currentId = profile.id;\n                  report.currentIndex++;\n\n                  // Collects the orphans \n                  report.orphans.push( profile );\n                  report.errorsCount++;\n\n                  // Emits the report\n                  return report;\n\n                }, report)\n              );\n            }, report),\n\n            // Done\n            append( report => of({ ...report, done: true }))\n          ))\n        )\n      ))\n    );\n  }\n\n  /** List all users returning them in ascending order sorted by uid */\n  private listAllUsers(): Observable<UserRecord[]> {\n\n    return this.client.get<UserRecord[]>('users');\n  }\n\n  /** List all user's profile ordered by id */\n  private listAllProfiles(): Observable<UserData[]> {\n\n    return defer( () => this.users.get( qf => qf.orderBy(this.db.sentinelId) ));\n  }\n\n  /** Deletes a storage folder from the default bucket */\n  private deleteFolder(prefix: string): Observable<void> {\n\n    return this.client.delete<void>(`folders/${prefix}`);\n  }\n\n  /** List all storage folders */\n  private listAllFolders(): Observable<StorageRef[]> {\n\n    return this.st.reference('/').listAll().pipe( map( result => result.prefixes ) );\n  }\n\n  /** Analyzes a profile serching for inconsistencies */\n  private analyzeProfile(profile: UserData, report: UserReport) {\n\n    // Skips when no profile is given\n    if(!profile) { return report; }\n\n    // Checks for user names. Required for user profile navigation\n    if(!profile.userName) { \n        \n      report.userNameMissing = (report['userNameMissing'] || []).concat(profile); \n      report.errorsCount++;\n    }\n\n    // Checks for full names. Required for user sorting\n    if(!profile.fullName) { \n        \n      report.fullNameMissing = (report['fullNameMissing'] || []).concat(profile); \n      report.errorsCount++;\n    } \n\n    // Checks for search indexes. Required for user searching\n    if(!profile.searchIndex) { \n      \n      report.searchIndexMissing = (report['searchIndexMissing'] || []).concat(profile); \n      report.errorsCount++;\n    }\n    else {\n\n      // Computes a new search index to compare the profile with \n      const { searchIndex } = this.users.formatData({ lastName: '', ...profile });\n\n      // Compare the search indexes for equality\n      if(searchIndex.length !== profile.searchIndex.length || searchIndex.some( (value, index) => value !== profile.searchIndex[index])) {\n\n        report.searchIndexMissing = (report['searchIndexMissing'] || []).concat(profile); \n        report.errorsCount++;\n      }\n    }\n\n    return report;\n  }\n\n  /** Creates a new profile from the user record (BatchWrite) */\n  public createMissingProfile(user: UserRecord, report: UserReport) {\n\n    const index = report.missing.findIndex( missing => missing === user);\n    if(index >= 0) { \n\n      const batch = this.batch || ( this.batch = this.db.batch() );\n\n      batch.set(this.users.ref.doc(user.uid), this.users.userData(user as any));\n\n      report.missing.splice(index, 1); \n      report.errorsCount--;\n    }\n  }\n\n  /** Deletes the orphan profile (WriteBatch) */\n  public deleteOrphanProfile(profile: UserData, report: UserReport) {\n\n    const index = report.orphans.findIndex(orphan => orphan === profile);\n    if(index >= 0) { \n\n      const batch = this.batch || ( this.batch = this.db.batch() );\n\n      batch.delete(this.users.ref.doc(profile.id));\n\n      report.orphans.splice(index, 1);\n      report.errorsCount--;\n    }\n  }\n\n  /** Deletes the orphan folder immediately */\n  public deleteOrphanFolder(folder: StorageRef, report: UserReport) {\n\n    const index = report.folders.findIndex(orphan => orphan === folder);\n    if(index >= 0) { \n\n      this.deleteFolder(folder.name).subscribe( () => {\n\n        report.folders.splice(index, 1);\n        report.errorsCount--;\n\n      });\n    }\n  }\n\n  /** Guesse a user nick-name (WriteBatch) */\n  public guessMissingUserNames(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    const guesses: string[] = [];\n\n    Promise.all( profiles.map( profile => {\n\n      const { fullName } = this.users.formatData({ lastName: '', ...profile });\n\n      return this.users.guessUserName(fullName).then( userName => {\n\n        while(guesses.find( guess => guess === userName )) { userName = userName.concat('z'); }\n\n        console.log(\"Guessing\", userName);\n\n        batch.update(this.users.ref.doc(profile.id), { userName });\n\n        guesses.push(userName);\n\n        report.errorsCount--;\n      });\n\n    })).then( () => delete report.userNameMissing );\n  }\n\n  /** Guesses a user's fullName (WriteBatch) */\n  public guessMissingFullNames(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    profiles.forEach( profile => {\n\n      const { fullName } = this.users.formatData({ lastName: '', ...profile });\n\n      batch.update(this.users.ref.doc(profile.id), { fullName });\n      \n      report.errorsCount--;\n\n    });\n\n    delete report.userNameMissing;\n  }\n\n  /** Coputes the search index (WriteBatch) */\n  public computeMissingSearchIndex(profiles: UserData[], report: UserReport) {\n\n    if(!profiles) { return; }\n\n    const batch = this.batch || ( this.batch = this.db.batch() );\n\n    profiles.forEach( profile => {\n\n      const { searchIndex } = this.users.formatData({ lastName: '', ...profile });\n\n      batch.update(this.users.ref.doc(profile.id), { searchIndex });\n\n      report.errorsCount--;\n\n    });\n\n    delete report.searchIndexMissing;\n  }\n\n  /**  */\n  public fixAllAnomalies(report: UserReport) {\n\n    report.missing?.forEach( user => this.createMissingProfile(user, report) );\n\n    report.orphans?.forEach( profile => this.deleteOrphanProfile(profile, report) );\n\n    this.guessMissingUserNames(report.userNameMissing, report);\n\n    this.computeMissingSearchIndex(report.searchIndexMissing, report);\n  }\n\n  public applyAllFixes(report: UserReport) {\n\n    if(!report) { return; }\n\n    forkJoin( \n      \n      from( this.batch ? this.batch.commit() : empty() ),\n\n      from( report.folders || [] ).pipe( switchMap( folder => this.deleteFolder(folder.name) ) )  \n      \n    ).toPromise().then( () => this.batch = null );\n  }\n}\n","<!-- Localized content -->\n<ng-container *wmContent=\"let msgs select 'admin-fixer'\">\n\n  <!-- Run report button -->\n  <button mat-stroked-button color=\"primary\" (click)=\"run$.next()\">\n\n    <wm-icon [icon]=\"msgs.actions?.run?.icon || 'assignment'\"></wm-icon>\n\n    <span>{{ msgs.actions?.run?.caption || 'Analyze users' }}</span>\n\n  </button>\n\n  <!-- Report body -->\n  <section *ngIf=\"report$ | async as report\">\n\n    <!-- Apply all fixes button projected to the top toolbar -->\n    <ng-container *ngIf=\"batch || report.folders?.length\">\n\n      <ng-template wmActionbar let-mobile=\"isMobile\">\n        \n        <button mat-flat-button type.lt-sm=\"icon\" color=\"primary\" [disabled]=\"!report.done\" (click)=\"applyAllFixes(report)\">\n\n          <wm-icon *ngIf=\"mobile; else applyFixes\" [icon]=\"msgs.actions?.apply?.icon || 'save'\"></wm-icon>\n          \n          <ng-template #applyFixes>{{ msgs.actions?.apply?.caption || 'Apply fixes' }}</ng-template>\n\n        </button>\n\n      </ng-template>\n\n    </ng-container>\n\n    <!-- Report running progress -->\n    <mat-progress-bar color=\"primary\" \n                      [mode]=\"report.users ? 'determinate' : 'query'\" \n                      [value]=\"100 * ((report.currentIndex || 0) + 1) / (report.users?.length || 1)\">\n    </mat-progress-bar>\n\n    <!-- Data querying message -->\n    <ng-template #fetchingUsers><p>Fetching user data...</p></ng-template>\n\n    <!-- Report analysis -->\n    <ng-container *ngIf=\"report.users; else fetchingUsers\">\n\n      <p>Analysing uid {{ report.currentId }}</p>\n\n      <!-- Done, no anomalies -->\n      <ng-template #allFine><p>No anomalies found</p></ng-template>\n\n      <!-- Anomalies found -->\n      <ng-container *ngIf=\"report.errorsCount > 0; else allFine\">\n\n        <p>{{ report.errorsCount }} anomalies detected:</p>\n\n        <!-- List of anomalies -->\n        <ul>\n\n          <!-- Listing missing profiles (user exists without a profile) -->\n          <li *ngFor=\"let missing of report.missing\" fxLayoutGap=\"8px\">\n\n            <span>User <b>{{ missing.uid }}</b> do not have a profile document</span>\n            \n            <button mat-button color=\"accent\" [disabled]=\"!report.done\" (click)=\"createMissingProfile(missing, report)\">Create profile</button>\n          \n          </li>\n\n          <!-- Listing orphan profiles (profile exists without a user) -->\n          <li *ngFor=\"let orphan of report.orphans\" fxLayoutGap=\"8px\">\n\n            <span>Document <b>{{ orphan.id }}</b> do not have a matching user</span>\n\n            <button mat-button color=\"warn\" [disabled]=\"!report.done\" (click)=\"deleteOrphanProfile(orphan, report)\">Delete profile</button>\n          \n          </li>\n\n          <!-- Listing remainng folders (when done) -->\n          <ng-container *ngIf=\"report.done\">\n\n            <li *ngFor=\"let folder of report.folders\" fxLayoutGap=\"8px\">\n\n              <span>Folder <b>{{ folder.name }}</b> do not have a matching user</span>\n\n              <button mat-button color=\"warn\" (click)=\"deleteOrphanFolder(folder, report)\">Delete folder</button>\n            \n            </li>\n\n          </ng-container>\n\n          <!-- Reporting userName missing count -->\n          <li *ngIf=\"report.userNameMissing as missing\" fxLayoutGap=\"8px\">\n\n            <span>{{ missing.length }} user(s) miss a unique user name</span>\n\n            <button mat-button color=\"accent\" (click)=\"guessMissingUserNames(missing, report)\">Guess user names</button>\n\n          </li>\n\n          <!-- Reporting fullName missing count -->\n          <li *ngIf=\"report.fullNameMissing as missing\" fxLayoutGap=\"8px\">\n\n            <span>{{ missing.length }} user(s) miss the fullName field</span>\n\n            <button mat-button color=\"accent\" (click)=\"guessMissingFullNames(missing, report)\">Guess full names</button>\n\n          </li>\n\n          <!-- Reporting searchIndex missing count or mismatch -->\n          <li *ngIf=\"report.searchIndexMissing as indexes\" fxLayoutGap=\"8px\">\n\n            <span>{{ indexes.length }} user(s) aren't searchable or the search index mismatches the user's name</span>\n\n            <button mat-button color=\"accent\" (click)=\"computeMissingSearchIndex(indexes, report)\">Fix search indexes</button>\n\n          </li>\n        \n        </ul>\n\n        <!-- Fix all button at the bottom of the report -->\n        <button mat-stroked-button color=\"warn\" [disabled]=\"!report.done\" (click)=\"fixAllAnomalies(report)\">\n\n          <span>{{ msgs.actions?.fix?.caption || 'Fix all anomalies' }}</span>\n        \n        </button>\n\n      </ng-container><!-- Anomalies list -->\n\n    </ng-container><!-- Anomalies report -->\n\n  </section><!-- Report body -->\n\n  <!-- CanLeave Popup Dialog (based on MatDialog) -->\n  <wm-dialog [dontLeave]=\"batch\">\n\n    <h2 mat-dialog-title><b>{{ msgs.canLeave?.title || 'Unsaved fixes' }}</b></h2>\n  \n    <mat-dialog-content [wm-readme]=\"msgs.canLeave?.message\">\n      <span>You're about to leave the page without saving the applied fixes.<br>Please confirm.</span>\n    </mat-dialog-content>\n  \n    <mat-dialog-actions align=\"end\">\n      <button mat-button color=\"primary\" [mat-dialog-close]=\"false\" cdkFocusInitial>{{ msgs.canLeave?.cancel || 'Stay' }}</button>\n      <button mat-button color=\"warn\" [mat-dialog-close]=\"true\">{{ msgs.canLeave?.ok || 'Leave anyhow' }}</button>\n    </mat-dialog-actions>\n  \n  </wm-dialog>\n\n</ng-container><!-- Localized content -->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { IconModule } from '@wizdm/elements/icon';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { DialogModule } from '@wizdm/elements/dialog';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { CanLeaveModule, CanLeaveGuard } from 'app/utils/can-leave';\nimport { ActionbarModule } from 'app/navigator/actionbar';\nimport { ProfileFixerComponent } from './profile-fixer.component';\n\nconst routes: RoutesWithContent = [{\n\n  path: '',\n  content: 'admin-fixer',\n  component: ProfileFixerComponent,\n  canDeactivate: [ CanLeaveGuard ]\n\n}];\n\n@NgModule({\n  declarations: [ ProfileFixerComponent ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    IconModule,\n    ReadmeModule,\n    DialogModule,\n    ButtonChangerModule,\n    ActionbarModule,\n    CanLeaveModule,\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class ProfileFixerModule { }\n"],"sourceRoot":"webpack:///"}
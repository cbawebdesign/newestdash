{"version":3,"sources":["./elements/src/lib/illustration/illustration.component.ts","./elements/src/lib/illustration/illustration.component.html","./elements/src/lib/illustration/index.ts","./elements/src/lib/illustration/illustration.animations.ts","./elements/src/lib/illustration/illustration.module.ts","./wizdm/src/app/pages/landing/widgets/banner/banner.component.ts","./wizdm/src/app/pages/landing/widgets/banner/banner.component.html"],"names":[],"mappings":"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","file":"widgets-banner-banner-component-es2015.js","sourcesContent":["import { Component, Input, Output, EventEmitter, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { ThemePalette } from '@angular/material/core'\nimport { $animations } from './illustration.animations';\nimport { map, tap, catchError, switchMap } from 'rxjs/operators';\nimport { Observable, BehaviorSubject, of, combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'wm-illustration',\n  templateUrl: './illustration.component.html',\n  styleUrls: ['./illustration.component.scss'],\n  host: { 'class': 'wm-illustration' },\n  encapsulation: ViewEncapsulation.None,\n  animations: $animations\n  \n})\nexport class IllustrationComponent {\n\n  public svg$: Observable<SafeHtml>;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer, private location: Location) { \n\n     // Builds the svg observable\n    this.svg$ = combineLatest(\n      // Resolves the svg content from the pushed source\n      this.source$.pipe( \n        // Gets the svg file\n        switchMap( src => this.http.get(src, { responseType: 'text'} ) ),\n        // Emits the error event on loading error\n        catchError( e => ( this.error.emit(e), of('') ) )\n      ),\n      // Combines with the pushed baseHref\n      this.baseHref$\n\n    ).pipe(\n      // Applies the baseHref to url() properties on request \n      map(([svg, base]) => this.parseUrls(svg, base) ),\n       // Sanitizes the result to bybass Angular security filters\n      map( svg => this.sanitizer.bypassSecurityTrustHtml(svg) ),\n      // Emits the load event when done\n      tap( () => this.load.emit() )\n    );\n  }\n\n  // Parses the url('#someLink') properties to prepend the baseHref when specified.\n  // This is likely needed when using svg gradients/filters, and so on, since angular \n  // app most likely defines <base href=\"...\"> tag in index.html breaking relative url()\n  // resolution for SVGs in Firefox and Safari (works fine in Chrome, btw) \n  private parseUrls(svg: string, base: string): string {\n\n    return !!base ? svg.replace(/url\\([ '\"]*(#.+)[ '\"]*\\)/g, (match, hash) => \n      match.replace(hash, this.location.normalize(base) + hash)\n    ) : svg;\n  }\n\n  /** Source path of of the SVG to load */\n  @Input() set src(src: string) { this.source$.next(src); }\n  private source$ = new BehaviorSubject<string>('');\n\n  /** Optional baseHref to prepend url('#someLink') tags with*/\n  @Input() set baseHref(base: string) { this.baseHref$.next(base); }\n  private baseHref$ = new BehaviorSubject<string>('');\n\n  @HostBinding('attr.color')\n  @Input() color: ThemePalette;\n\n  @HostBinding('@.disabled')\n  @Input() disableAnimations = false;\n\n  @Output() load = new EventEmitter<void>();\n  @Output() error = new EventEmitter<Error>();\n}","\n<div class=\"wrapper\" *ngIf=\"svg$ | async as svg; else loading\" [innerHTML]=\"svg\" @fadeIn></div>\n<ng-template #loading>\n  <ng-content></ng-content>\n</ng-template> \n  ","export * from './illustration.component';\nexport * from './illustration.module';","import { trigger, state, animate, style, transition, query, stagger, group, animateChild } from '@angular/animations';\n\nconst $timing = '200ms ease-out';\n\nexport const $animations = [\n\n  trigger('fadeIn', [\n    //state('off', style('*') ),\n    transition(':enter', [\n      style({ opacity: 0 }),\n      animate($timing, style('*'))\n    ])\n  ])\n];","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IllustrationComponent } from './illustration.component';\n\n@NgModule({\n  declarations: [ IllustrationComponent ],\n  imports: [ CommonModule, HttpClientModule ],\n  exports: [ IllustrationComponent ]\n})\nexport class IllustrationModule { }\n","import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RedirectModule } from '@wizdm/redirect';\nimport { AnimateModule } from '@wizdm/animate';\n//import { IconModule } from '@wizdm/elements/icon';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { ButtonChangerModule } from '@wizdm/elements/button';\nimport { IllustrationModule } from '@wizdm/elements/illustration';\nimport { WidgetDirective } from '../base-widget.directive';\nimport { Component, NgModule } from '@angular/core';\nimport { BannerConfig } from './banner.config';\n\n@Component({\n  selector: 'wm-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss'],\n  host: { '[style.min-height.px]': \"config.minHeight || undefined\" }\n})\nexport class BannerComponent extends WidgetDirective<BannerConfig> {}\n\n@NgModule({\n  declarations: [ BannerComponent ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    RedirectModule,\n    AnimateModule,\n    ReadmeModule,\n    ButtonChangerModule,\n    IllustrationModule\n  ]\n})\nexport class BannerModule { }\n","\n<!-- Animated Info panel on one side -->\n<div *ngIf=\"config.textbox as textbox\" \n  fxLayout=\"column\" fxLayoutAlign=\"center center\" \n  [fxFlex.gt-sm]=\"config.illustration ? 50 : 100\" \n  [fxFlexOrder]=\"textbox.order || 1\" \n  [wmAnimate]=\"textbox.animation?.name || 'none'\" \n  [aos]=\"textbox.animation?.aos || 0.5\"\n  [once]=\"textbox.animation?.once || false\">\n\n  <h1 class=\"mat-display-1\"><b>{{ textbox.title || 'Title goes here' }}</b></h1>\n  \n  <p [wm-readme]=\"textbox.pitch\">\n    The elevator pitch goes here. If you're reading this something went wrong while loading the widget.\n  </p>\n\n  <ng-container *ngIf=\"textbox.action as action\">\n  \n    <button mat-button [type]=\"action.type || 'raised'\" \n                       [color]=\"action.color || 'accent'\" \n                       [routerLink]=\"action.link\">{{ action.caption || 'Get started' }}\n    </button>\n    \n    <p [wm-readme]=\"action.hint\" class=\"mat-small\"></p>\n\n</ng-container>\n\n</div>\n\n<!-- Displays the resting Buddha on the right on big screens -->\n<wm-illustration *ngIf=\"config.illustration as illustration\"\n  fxHide.lt-sm fxFlex=\"50\" \n  [fxFlexOrder]=\"illustration.order || 2\"\n  [src]=\"illustration.source\" \n  [color]=\"illustration.color || 'primary'\">\n</wm-illustration>\n\n"],"sourceRoot":"webpack:///"}
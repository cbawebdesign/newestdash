{"version":3,"sources":["./wizdm/src/app/pages/settings/account/account.component.ts","./wizdm/src/app/pages/settings/account/account.component.html","./wizdm/src/app/pages/settings/account/account.module.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService, User } from '@wizdm/connect/auth';\n\n@Component({\n  selector: 'wm-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent {\n\n  private providerId: string;\n\n  constructor(readonly auth: AuthService) { \n\n    // Gets the authentication provider\n    auth.getProviderId().then( provider => this.providerId = provider );\n  }\n\n  /** The user object */\n  get user(): User { return this.auth.user || {} as User; }\n\n  /** The array of providers */\n  get providers(): string[] { return (this.user.providerData || []).map( data => data.providerId ); }\n\n  /** True whenever the provider we logged-in with requires a password */\n  get usePassword(): boolean { return this.providerId === 'password'; }\n}\n","<!-- Localized content -->\n<ng-container *wmContent=\"let msgs select 'settings-account'\" gtag=\"account\">\n\n  <!-- User's Account -->\n  <h2>{{ msgs.title || 'Account' }}</h2>\n  \n  <mat-divider fxFill></mat-divider>\n  \n  <!-- account creation -->\n  <p [wm-readme]=\"msgs.description | interpolate: { 'created': user.metadata?.creationTime | moment:'ll' }\">\n    <span>Your account has been created on <b>{{ user.metadata?.creationTime | moment: 'll' }}</b>.</span>\n  </p>\n\n  <!-- Account's provider(s) -->\n  <p>{{ msgs.providers || 'Providers' }}: <span *ngFor=\"let provider of providers; let last = last\">\n    <i>\"{{ provider }}\"</i>\n    <ng-container *ngIf=\"!last\"> - </ng-container>\n  </span></p>\n\n  <!-- Email/Password provider related actions -->\n  <ng-container *ngIf=\"usePassword\">\n\n    <!-- Email Verify -->  \n    <h3>{{ msgs.verify?.title || 'Verify Email' }}</h3>\n    \n    <mat-divider fxFill></mat-divider>\n    \n    <p [wm-readme]=\"user.emailVerified ? msgs.verify?.verified : msgs.verify?.unverified\">\n      <span>Your email {{ user.emailVerified ? 'has been verified already' : 'has not been verified yet '}}.</span>\n    </p>\n    \n    <button mat-stroked-button color=\"primary\" fxFlexAlign.gt-xs=\"start\" [disabled]=\"user.emailVerified\" wmRedirect=\"login?mode=sendEmailVerification\">\n      {{ msgs.verify?.action }}\n    </button>\n    \n    <!-- Email / Password change -->\n    <h3>{{ msgs.credentials?.title || 'Change email / password' }}</h3>\n    \n    <mat-divider fxFill></mat-divider>\n    \n    <p [wm-readme]=\"msgs.credentials?.description\">\n      <span>Here you can change the credentials used for signin-in.</span>\n    </p>\n    \n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutGap=\"16px\"> \n    \n      <button mat-stroked-button color=\"primary\" wmRedirect=\"login?mode=changeEmail\">\n        {{ msgs.credentials?.actions?.email || 'Change your email' }}\n      </button>\n\n      <button mat-stroked-button color=\"primary\" wmRedirect=\"login?mode=changePassword\">\n        {{ msgs.credentials?.actions?.password || 'Change your password' }}\n      </button>\n\n    </div>\n\n  </ng-container>\n\n  <!-- Delete Account -->\n  <h3>{{ msgs.delete?.title || 'Delete account' }}</h3>\n  \n  <mat-divider fxFill></mat-divider>\n  \n  <p [wm-readme]=\"msgs.delete?.description\">\n    <span>By proceeding you'll <b>permanently</b> delete all your data!</span>\n  </p>\n\n  <button mat-stroked-button color=\"warn\" fxFlexAlign.gt-xs=\"start\" wmRedirect=\"login?mode=delete\">\n    {{ msgs.delete?.action || 'Delete your account' }}\n  </button>\n\n</ng-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { GtagModule } from '@wizdm/gtag';\nimport { ReadmeModule } from '@wizdm/readme';\nimport { RedirectModule } from '@wizdm/redirect';\nimport { ContentRouterModule, RoutesWithContent } from '@wizdm/content';\nimport { MomentPipesModule } from '@wizdm/pipes/moment';\n//import { CanLeaveModule, CanLeaveGuard } from 'app/navigator/guards/can-leave';\nimport { AccountComponent } from './account.component';\n\nconst routes: RoutesWithContent = [\n  {\n    path: '',\n    content: 'settings-account',\n    component: AccountComponent,\n    //canDeactivate: [ CanLeaveGuard ]\n  }\n];\n\n@NgModule({\n  declarations: [ AccountComponent ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatDividerModule,\n    MatButtonModule,\n    GtagModule,\n    ReadmeModule,\n    RedirectModule,\n    MomentPipesModule,\n    //CanLeaveModule,\n    ContentRouterModule.forChild(routes)\n  ]\n})\nexport class AccountModule { }\n"],"sourceRoot":"webpack:///"}
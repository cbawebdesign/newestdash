{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{vzDr:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"ProfileModule\",function(){return profile_module_ProfileModule});var common=__webpack_require__(\"SVse\"),flex_layout=__webpack_require__(\"u9T3\"),divider=__webpack_require__(\"BSbQ\"),fesm2015_button=__webpack_require__(\"Dxy4\"),src=__webpack_require__(\"fi6C\"),dialog=__webpack_require__(\"XNpK\"),readme_src=__webpack_require__(\"C1VQ\"),icon=__webpack_require__(\"txmD\"),lib_button=__webpack_require__(\"uaks\"),content_src=__webpack_require__(\"g7MM\"),can_leave=__webpack_require__(\"h4JL\"),actionbar=__webpack_require__(\"kNiW\"),progress_bar=__webpack_require__(\"BTe0\"),avatar=__webpack_require__(\"Entk\"),core=__webpack_require__(\"8Y7J\");let profile_photo_module_ProfilePhotoModule=(()=>{class ProfilePhotoModule{}return ProfilePhotoModule.ɵmod=core.Ob({type:ProfilePhotoModule}),ProfilePhotoModule.ɵinj=core.Nb({factory:function(t){return new(t||ProfilePhotoModule)},imports:[[common.c,flex_layout.a,fesm2015_button.c,progress_bar.b,content_src.c,readme_src.a,avatar.a,icon.a]]}),ProfilePhotoModule})();var fesm2015_forms=__webpack_require__(\"s7LF\"),form_field=__webpack_require__(\"Q2Ze\"),input=__webpack_require__(\"e6WT\"),overlay=__webpack_require__(\"1O3W\"),fesm2015_core=__webpack_require__(\"UhP/\"),scrolling=__webpack_require__(\"7KAL\"),a11y=__webpack_require__(\"YEUz\"),coercion=__webpack_require__(\"8LU1\"),collections=__webpack_require__(\"CtHx\"),keycodes=__webpack_require__(\"Ht+U\"),Subject=__webpack_require__(\"XNiG\"),defer=__webpack_require__(\"NXyV\"),merge=__webpack_require__(\"VRyK\"),startWith=__webpack_require__(\"JX91\"),switchMap=__webpack_require__(\"eIep\"),take=__webpack_require__(\"IzEk\"),filter=__webpack_require__(\"pLZG\"),map=__webpack_require__(\"lJxs\"),distinctUntilChanged=__webpack_require__(\"/uUt\"),takeUntil=__webpack_require__(\"1G5W\"),animations=__webpack_require__(\"GS7A\"),bidi=__webpack_require__(\"9gLZ\");const _c0=[\"trigger\"],_c1=[\"panel\"];function MatSelect_span_4_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"span\",8),core.Ic(1),core.Vb()),2&rf){const ctx_r2=core.ic();core.Db(1),core.Jc(ctx_r2.placeholder)}}function MatSelect_span_5_span_1_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"span\",12),core.Ic(1),core.Vb()),2&rf){const ctx_r5=core.ic(2);core.Db(1),core.Jc(ctx_r5.triggerValue)}}function MatSelect_span_5_ng_content_2_Template(rf,ctx){1&rf&&core.nc(0,0,[\"*ngSwitchCase\",\"true\"])}function MatSelect_span_5_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"span\",9),core.Gc(1,MatSelect_span_5_span_1_Template,2,1,\"span\",10),core.Gc(2,MatSelect_span_5_ng_content_2_Template,1,0,\"ng-content\",11),core.Vb()),2&rf){const ctx_r3=core.ic();core.pc(\"ngSwitch\",!!ctx_r3.customTrigger),core.Db(2),core.pc(\"ngSwitchCase\",!0)}}function MatSelect_ng_template_8_Template(rf,ctx){if(1&rf){const _r9=core.Xb();core.Wb(0,\"div\",13),core.Wb(1,\"div\",14,15),core.ec(\"@transformPanel.done\",function($event){return core.yc(_r9),core.ic()._panelDoneAnimatingStream.next($event.toState)})(\"keydown\",function($event){return core.yc(_r9),core.ic()._handleKeydown($event)}),core.nc(3,1),core.Vb(),core.Vb()}if(2&rf){const ctx_r4=core.ic();core.pc(\"@transformPanelWrap\",void 0),core.Db(1),core.Hb(\"mat-select-panel \",ctx_r4._getPanelTheme(),\"\"),core.Dc(\"transform-origin\",ctx_r4._transformOrigin)(\"font-size\",ctx_r4._triggerFontSize,\"px\"),core.pc(\"ngClass\",ctx_r4.panelClass)(\"@transformPanel\",ctx_r4.multiple?\"showing-multiple\":\"showing\"),core.Eb(\"id\",ctx_r4.id+\"-panel\")(\"aria-multiselectable\",ctx_r4.multiple)(\"aria-label\",ctx_r4.ariaLabel||null)(\"aria-labelledby\",ctx_r4._getPanelAriaLabelledby())}}const _c2=[[[\"mat-select-trigger\"]],\"*\"],_c3=[\"mat-select-trigger\",\"*\"],matSelectAnimations={transformPanelWrap:Object(animations.o)(\"transformPanelWrap\",[Object(animations.n)(\"* => void\",Object(animations.i)(\"@transformPanel\",[Object(animations.f)()],{optional:!0}))]),transformPanel:Object(animations.o)(\"transformPanel\",[Object(animations.l)(\"void\",Object(animations.m)({transform:\"scaleY(0.8)\",minWidth:\"100%\",opacity:0})),Object(animations.l)(\"showing\",Object(animations.m)({opacity:1,minWidth:\"calc(100% + 32px)\",transform:\"scaleY(1)\"})),Object(animations.l)(\"showing-multiple\",Object(animations.m)({opacity:1,minWidth:\"calc(100% + 64px)\",transform:\"scaleY(1)\"})),Object(animations.n)(\"void => *\",Object(animations.e)(\"120ms cubic-bezier(0, 0, 0.2, 1)\")),Object(animations.n)(\"* => void\",Object(animations.e)(\"100ms 25ms linear\",Object(animations.m)({opacity:0})))])};let nextUniqueId=0;const MAT_SELECT_SCROLL_STRATEGY=new core.s(\"mat-select-scroll-strategy\"),MAT_SELECT_CONFIG=new core.s(\"MAT_SELECT_CONFIG\"),MAT_SELECT_SCROLL_STRATEGY_PROVIDER={provide:MAT_SELECT_SCROLL_STRATEGY,deps:[overlay.c],useFactory:function(overlay){return()=>overlay.scrollStrategies.reposition()}};class MatSelectChange{constructor(source,value){this.source=source,this.value=value}}class MatSelectBase{constructor(_elementRef,_defaultErrorStateMatcher,_parentForm,_parentFormGroup,ngControl){this._elementRef=_elementRef,this._defaultErrorStateMatcher=_defaultErrorStateMatcher,this._parentForm=_parentForm,this._parentFormGroup=_parentFormGroup,this.ngControl=ngControl}}const _MatSelectMixinBase=Object(fesm2015_core.w)(Object(fesm2015_core.A)(Object(fesm2015_core.x)(Object(fesm2015_core.y)(MatSelectBase)))),MAT_SELECT_TRIGGER=new core.s(\"MatSelectTrigger\");let select_MatSelectBase=(()=>{class _MatSelectBase extends _MatSelectMixinBase{constructor(_viewportRuler,_changeDetectorRef,_ngZone,_defaultErrorStateMatcher,elementRef,_dir,_parentForm,_parentFormGroup,_parentFormField,ngControl,tabIndex,scrollStrategyFactory,_liveAnnouncer,_defaultOptions){var _a,_b,_c;super(elementRef,_defaultErrorStateMatcher,_parentForm,_parentFormGroup,ngControl),this._viewportRuler=_viewportRuler,this._changeDetectorRef=_changeDetectorRef,this._ngZone=_ngZone,this._dir=_dir,this._parentFormField=_parentFormField,this.ngControl=ngControl,this._liveAnnouncer=_liveAnnouncer,this._defaultOptions=_defaultOptions,this._panelOpen=!1,this._compareWith=(o1,o2)=>o1===o2,this._uid=\"mat-select-\"+nextUniqueId++,this._triggerAriaLabelledBy=null,this._destroy=new Subject.a,this._onChange=()=>{},this._onTouched=()=>{},this._valueId=\"mat-select-value-\"+nextUniqueId++,this._panelDoneAnimatingStream=new Subject.a,this._overlayPanelClass=(null===(_a=this._defaultOptions)||void 0===_a?void 0:_a.overlayPanelClass)||\"\",this._focused=!1,this.controlType=\"mat-select\",this._required=!1,this._multiple=!1,this._disableOptionCentering=null!==(_c=null===(_b=this._defaultOptions)||void 0===_b?void 0:_b.disableOptionCentering)&&void 0!==_c&&_c,this.ariaLabel=\"\",this.optionSelectionChanges=Object(defer.a)(()=>{const options=this.options;return options?options.changes.pipe(Object(startWith.a)(options),Object(switchMap.a)(()=>Object(merge.a)(...options.map(option=>option.onSelectionChange)))):this._ngZone.onStable.pipe(Object(take.a)(1),Object(switchMap.a)(()=>this.optionSelectionChanges))}),this.openedChange=new core.o,this._openedStream=this.openedChange.pipe(Object(filter.a)(o=>o),Object(map.a)(()=>{})),this._closedStream=this.openedChange.pipe(Object(filter.a)(o=>!o),Object(map.a)(()=>{})),this.selectionChange=new core.o,this.valueChange=new core.o,this.ngControl&&(this.ngControl.valueAccessor=this),null!=(null==_defaultOptions?void 0:_defaultOptions.typeaheadDebounceInterval)&&(this._typeaheadDebounceInterval=_defaultOptions.typeaheadDebounceInterval),this._scrollStrategyFactory=scrollStrategyFactory,this._scrollStrategy=this._scrollStrategyFactory(),this.tabIndex=parseInt(tabIndex)||0,this.id=this.id}get focused(){return this._focused||this._panelOpen}get placeholder(){return this._placeholder}set placeholder(value){this._placeholder=value,this.stateChanges.next()}get required(){return this._required}set required(value){this._required=Object(coercion.c)(value),this.stateChanges.next()}get multiple(){return this._multiple}set multiple(value){this._multiple=Object(coercion.c)(value)}get disableOptionCentering(){return this._disableOptionCentering}set disableOptionCentering(value){this._disableOptionCentering=Object(coercion.c)(value)}get compareWith(){return this._compareWith}set compareWith(fn){this._compareWith=fn,this._selectionModel&&this._initializeSelection()}get value(){return this._value}set value(newValue){newValue!==this._value&&(this.options&&this._setSelectionByValue(newValue),this._value=newValue)}get typeaheadDebounceInterval(){return this._typeaheadDebounceInterval}set typeaheadDebounceInterval(value){this._typeaheadDebounceInterval=Object(coercion.f)(value)}get id(){return this._id}set id(value){this._id=value||this._uid,this.stateChanges.next()}ngOnInit(){this._selectionModel=new collections.c(this.multiple),this.stateChanges.next(),this._panelDoneAnimatingStream.pipe(Object(distinctUntilChanged.a)(),Object(takeUntil.a)(this._destroy)).subscribe(()=>this._panelDoneAnimating(this.panelOpen))}ngAfterContentInit(){this._initKeyManager(),this._selectionModel.changed.pipe(Object(takeUntil.a)(this._destroy)).subscribe(event=>{event.added.forEach(option=>option.select()),event.removed.forEach(option=>option.deselect())}),this.options.changes.pipe(Object(startWith.a)(null),Object(takeUntil.a)(this._destroy)).subscribe(()=>{this._resetOptions(),this._initializeSelection()})}ngDoCheck(){const newAriaLabelledby=this._getTriggerAriaLabelledby();if(newAriaLabelledby!==this._triggerAriaLabelledBy){const element=this._elementRef.nativeElement;this._triggerAriaLabelledBy=newAriaLabelledby,newAriaLabelledby?element.setAttribute(\"aria-labelledby\",newAriaLabelledby):element.removeAttribute(\"aria-labelledby\")}this.ngControl&&this.updateErrorState()}ngOnChanges(changes){changes.disabled&&this.stateChanges.next(),changes.typeaheadDebounceInterval&&this._keyManager&&this._keyManager.withTypeAhead(this._typeaheadDebounceInterval)}ngOnDestroy(){this._destroy.next(),this._destroy.complete(),this.stateChanges.complete()}toggle(){this.panelOpen?this.close():this.open()}open(){this._canOpen()&&(this._panelOpen=!0,this._keyManager.withHorizontalOrientation(null),this._highlightCorrectOption(),this._changeDetectorRef.markForCheck())}close(){this._panelOpen&&(this._panelOpen=!1,this._keyManager.withHorizontalOrientation(this._isRtl()?\"rtl\":\"ltr\"),this._changeDetectorRef.markForCheck(),this._onTouched())}writeValue(value){this.value=value}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this._changeDetectorRef.markForCheck(),this.stateChanges.next()}get panelOpen(){return this._panelOpen}get selected(){return this.multiple?this._selectionModel.selected:this._selectionModel.selected[0]}get triggerValue(){if(this.empty)return\"\";if(this._multiple){const selectedOptions=this._selectionModel.selected.map(option=>option.viewValue);return this._isRtl()&&selectedOptions.reverse(),selectedOptions.join(\", \")}return this._selectionModel.selected[0].viewValue}_isRtl(){return!!this._dir&&\"rtl\"===this._dir.value}_handleKeydown(event){this.disabled||(this.panelOpen?this._handleOpenKeydown(event):this._handleClosedKeydown(event))}_handleClosedKeydown(event){const keyCode=event.keyCode,isArrowKey=keyCode===keycodes.c||keyCode===keycodes.o||keyCode===keycodes.h||keyCode===keycodes.l,isOpenKey=keyCode===keycodes.e||keyCode===keycodes.m,manager=this._keyManager;if(!manager.isTyping()&&isOpenKey&&!Object(keycodes.r)(event)||(this.multiple||event.altKey)&&isArrowKey)event.preventDefault(),this.open();else if(!this.multiple){const previouslySelectedOption=this.selected;manager.onKeydown(event);const selectedOption=this.selected;selectedOption&&previouslySelectedOption!==selectedOption&&this._liveAnnouncer.announce(selectedOption.viewValue,1e4)}}_handleOpenKeydown(event){const manager=this._keyManager,keyCode=event.keyCode,isArrowKey=keyCode===keycodes.c||keyCode===keycodes.o,isTyping=manager.isTyping();if(isArrowKey&&event.altKey)event.preventDefault(),this.close();else if(isTyping||keyCode!==keycodes.e&&keyCode!==keycodes.m||!manager.activeItem||Object(keycodes.r)(event))if(!isTyping&&this._multiple&&keyCode===keycodes.a&&event.ctrlKey){event.preventDefault();const hasDeselectedOptions=this.options.some(opt=>!opt.disabled&&!opt.selected);this.options.forEach(option=>{option.disabled||(hasDeselectedOptions?option.select():option.deselect())})}else{const previouslyFocusedIndex=manager.activeItemIndex;manager.onKeydown(event),this._multiple&&isArrowKey&&event.shiftKey&&manager.activeItem&&manager.activeItemIndex!==previouslyFocusedIndex&&manager.activeItem._selectViaInteraction()}else event.preventDefault(),manager.activeItem._selectViaInteraction()}_onFocus(){this.disabled||(this._focused=!0,this.stateChanges.next())}_onBlur(){this._focused=!1,this.disabled||this.panelOpen||(this._onTouched(),this._changeDetectorRef.markForCheck(),this.stateChanges.next())}_onAttached(){this.overlayDir.positionChange.pipe(Object(take.a)(1)).subscribe(()=>{this._changeDetectorRef.detectChanges(),this._positioningSettled()})}_getPanelTheme(){return this._parentFormField?`mat-${this._parentFormField.color}`:\"\"}get empty(){return!this._selectionModel||this._selectionModel.isEmpty()}_initializeSelection(){Promise.resolve().then(()=>{this._setSelectionByValue(this.ngControl?this.ngControl.value:this._value),this.stateChanges.next()})}_setSelectionByValue(value){if(this._selectionModel.selected.forEach(option=>option.setInactiveStyles()),this._selectionModel.clear(),this.multiple&&value)Array.isArray(value),value.forEach(currentValue=>this._selectValue(currentValue)),this._sortValues();else{const correspondingOption=this._selectValue(value);correspondingOption?this._keyManager.updateActiveItem(correspondingOption):this.panelOpen||this._keyManager.updateActiveItem(-1)}this._changeDetectorRef.markForCheck()}_selectValue(value){const correspondingOption=this.options.find(option=>{try{return null!=option.value&&this._compareWith(option.value,value)}catch(error){return!1}});return correspondingOption&&this._selectionModel.select(correspondingOption),correspondingOption}_initKeyManager(){this._keyManager=new a11y.b(this.options).withTypeAhead(this._typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl()?\"rtl\":\"ltr\").withHomeAndEnd().withAllowedModifierKeys([\"shiftKey\"]),this._keyManager.tabOut.pipe(Object(takeUntil.a)(this._destroy)).subscribe(()=>{this.panelOpen&&(!this.multiple&&this._keyManager.activeItem&&this._keyManager.activeItem._selectViaInteraction(),this.focus(),this.close())}),this._keyManager.change.pipe(Object(takeUntil.a)(this._destroy)).subscribe(()=>{this._panelOpen&&this.panel?this._scrollOptionIntoView(this._keyManager.activeItemIndex||0):this._panelOpen||this.multiple||!this._keyManager.activeItem||this._keyManager.activeItem._selectViaInteraction()})}_resetOptions(){const changedOrDestroyed=Object(merge.a)(this.options.changes,this._destroy);this.optionSelectionChanges.pipe(Object(takeUntil.a)(changedOrDestroyed)).subscribe(event=>{this._onSelect(event.source,event.isUserInput),event.isUserInput&&!this.multiple&&this._panelOpen&&(this.close(),this.focus())}),Object(merge.a)(...this.options.map(option=>option._stateChanges)).pipe(Object(takeUntil.a)(changedOrDestroyed)).subscribe(()=>{this._changeDetectorRef.markForCheck(),this.stateChanges.next()})}_onSelect(option,isUserInput){const wasSelected=this._selectionModel.isSelected(option);null!=option.value||this._multiple?(wasSelected!==option.selected&&(option.selected?this._selectionModel.select(option):this._selectionModel.deselect(option)),isUserInput&&this._keyManager.setActiveItem(option),this.multiple&&(this._sortValues(),isUserInput&&this.focus())):(option.deselect(),this._selectionModel.clear(),null!=this.value&&this._propagateChanges(option.value)),wasSelected!==this._selectionModel.isSelected(option)&&this._propagateChanges(),this.stateChanges.next()}_sortValues(){if(this.multiple){const options=this.options.toArray();this._selectionModel.sort((a,b)=>this.sortComparator?this.sortComparator(a,b,options):options.indexOf(a)-options.indexOf(b)),this.stateChanges.next()}}_propagateChanges(fallbackValue){let valueToEmit=null;valueToEmit=this.multiple?this.selected.map(option=>option.value):this.selected?this.selected.value:fallbackValue,this._value=valueToEmit,this.valueChange.emit(valueToEmit),this._onChange(valueToEmit),this.selectionChange.emit(this._getChangeEvent(valueToEmit)),this._changeDetectorRef.markForCheck()}_highlightCorrectOption(){this._keyManager&&(this.empty?this._keyManager.setFirstItemActive():this._keyManager.setActiveItem(this._selectionModel.selected[0]))}_canOpen(){var _a;return!this._panelOpen&&!this.disabled&&(null===(_a=this.options)||void 0===_a?void 0:_a.length)>0}focus(options){this._elementRef.nativeElement.focus(options)}_getPanelAriaLabelledby(){if(this.ariaLabel)return null;const labelId=this._getLabelId();return this.ariaLabelledby?labelId+\" \"+this.ariaLabelledby:labelId}_getAriaActiveDescendant(){return this.panelOpen&&this._keyManager&&this._keyManager.activeItem?this._keyManager.activeItem.id:null}_getLabelId(){var _a;return(null===(_a=this._parentFormField)||void 0===_a?void 0:_a.getLabelId())||\"\"}_getTriggerAriaLabelledby(){if(this.ariaLabel)return null;let value=this._getLabelId()+\" \"+this._valueId;return this.ariaLabelledby&&(value+=\" \"+this.ariaLabelledby),value}_panelDoneAnimating(isOpen){this.openedChange.emit(isOpen)}setDescribedByIds(ids){this._ariaDescribedby=ids.join(\" \")}onContainerClick(){this.focus(),this.open()}get shouldLabelFloat(){return this._panelOpen||!this.empty}}return _MatSelectBase.ɵfac=function(t){return new(t||_MatSelectBase)(core.Qb(scrolling.h),core.Qb(core.h),core.Qb(core.B),core.Qb(fesm2015_core.d),core.Qb(core.l),core.Qb(bidi.b,8),core.Qb(fesm2015_forms.o,8),core.Qb(fesm2015_forms.h,8),core.Qb(form_field.a,8),core.Qb(fesm2015_forms.l,10),core.bc(\"tabindex\"),core.Qb(MAT_SELECT_SCROLL_STRATEGY),core.Qb(a11y.k),core.Qb(MAT_SELECT_CONFIG,8))},_MatSelectBase.ɵdir=core.Lb({type:_MatSelectBase,viewQuery:function(rf,ctx){if(1&rf&&(core.Lc(_c0,1),core.Lc(_c1,1),core.Lc(overlay.a,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx.trigger=_t.first),core.uc(_t=core.fc())&&(ctx.panel=_t.first),core.uc(_t=core.fc())&&(ctx.overlayDir=_t.first)}},inputs:{ariaLabel:[\"aria-label\",\"ariaLabel\"],id:\"id\",placeholder:\"placeholder\",required:\"required\",multiple:\"multiple\",disableOptionCentering:\"disableOptionCentering\",compareWith:\"compareWith\",value:\"value\",typeaheadDebounceInterval:\"typeaheadDebounceInterval\",panelClass:\"panelClass\",ariaLabelledby:[\"aria-labelledby\",\"ariaLabelledby\"],errorStateMatcher:\"errorStateMatcher\",sortComparator:\"sortComparator\"},outputs:{openedChange:\"openedChange\",_openedStream:\"opened\",_closedStream:\"closed\",selectionChange:\"selectionChange\",valueChange:\"valueChange\"},features:[core.Ab,core.Bb]}),_MatSelectBase})(),select_MatSelect=(()=>{class MatSelect extends select_MatSelectBase{constructor(){super(...arguments),this._scrollTop=0,this._triggerFontSize=0,this._transformOrigin=\"top\",this._offsetY=0,this._positions=[{originX:\"start\",originY:\"top\",overlayX:\"start\",overlayY:\"top\"},{originX:\"start\",originY:\"bottom\",overlayX:\"start\",overlayY:\"bottom\"}]}_calculateOverlayScroll(selectedIndex,scrollBuffer,maxScroll){const itemHeight=this._getItemHeight();return Math.min(Math.max(0,itemHeight*selectedIndex-scrollBuffer+itemHeight/2),maxScroll)}ngOnInit(){super.ngOnInit(),this._viewportRuler.change().pipe(Object(takeUntil.a)(this._destroy)).subscribe(()=>{this.panelOpen&&(this._triggerRect=this.trigger.nativeElement.getBoundingClientRect(),this._changeDetectorRef.markForCheck())})}open(){super._canOpen()&&(super.open(),this._triggerRect=this.trigger.nativeElement.getBoundingClientRect(),this._triggerFontSize=parseInt(getComputedStyle(this.trigger.nativeElement).fontSize||\"0\"),this._calculateOverlayPosition(),this._ngZone.onStable.pipe(Object(take.a)(1)).subscribe(()=>{this._triggerFontSize&&this.overlayDir.overlayRef&&this.overlayDir.overlayRef.overlayElement&&(this.overlayDir.overlayRef.overlayElement.style.fontSize=`${this._triggerFontSize}px`)}))}_scrollOptionIntoView(index){const labelCount=Object(fesm2015_core.t)(index,this.options,this.optionGroups),itemHeight=this._getItemHeight();this.panel.nativeElement.scrollTop=Object(fesm2015_core.u)((index+labelCount)*itemHeight,itemHeight,this.panel.nativeElement.scrollTop,256)}_positioningSettled(){this._calculateOverlayOffsetX(),this.panel.nativeElement.scrollTop=this._scrollTop}_panelDoneAnimating(isOpen){this.panelOpen?this._scrollTop=0:(this.overlayDir.offsetX=0,this._changeDetectorRef.markForCheck()),super._panelDoneAnimating(isOpen)}_getChangeEvent(value){return new MatSelectChange(this,value)}_calculateOverlayOffsetX(){const overlayRect=this.overlayDir.overlayRef.overlayElement.getBoundingClientRect(),viewportSize=this._viewportRuler.getViewportSize(),isRtl=this._isRtl(),paddingWidth=this.multiple?56:32;let offsetX;if(this.multiple)offsetX=40;else if(this.disableOptionCentering)offsetX=16;else{let selected=this._selectionModel.selected[0]||this.options.first;offsetX=selected&&selected.group?32:16}isRtl||(offsetX*=-1);const leftOverflow=0-(overlayRect.left+offsetX-(isRtl?paddingWidth:0)),rightOverflow=overlayRect.right+offsetX-viewportSize.width+(isRtl?0:paddingWidth);leftOverflow>0?offsetX+=leftOverflow+8:rightOverflow>0&&(offsetX-=rightOverflow+8),this.overlayDir.offsetX=Math.round(offsetX),this.overlayDir.overlayRef.updatePosition()}_calculateOverlayOffsetY(selectedIndex,scrollBuffer,maxScroll){const itemHeight=this._getItemHeight(),optionHeightAdjustment=(itemHeight-this._triggerRect.height)/2,maxOptionsDisplayed=Math.floor(256/itemHeight);let optionOffsetFromPanelTop;return this.disableOptionCentering?0:(optionOffsetFromPanelTop=0===this._scrollTop?selectedIndex*itemHeight:this._scrollTop===maxScroll?(selectedIndex-(this._getItemCount()-maxOptionsDisplayed))*itemHeight+(itemHeight-(this._getItemCount()*itemHeight-256)%itemHeight):scrollBuffer-itemHeight/2,Math.round(-1*optionOffsetFromPanelTop-optionHeightAdjustment))}_checkOverlayWithinViewport(maxScroll){const itemHeight=this._getItemHeight(),viewportSize=this._viewportRuler.getViewportSize(),topSpaceAvailable=this._triggerRect.top-8,bottomSpaceAvailable=viewportSize.height-this._triggerRect.bottom-8,panelHeightTop=Math.abs(this._offsetY),panelHeightBottom=Math.min(this._getItemCount()*itemHeight,256)-panelHeightTop-this._triggerRect.height;panelHeightBottom>bottomSpaceAvailable?this._adjustPanelUp(panelHeightBottom,bottomSpaceAvailable):panelHeightTop>topSpaceAvailable?this._adjustPanelDown(panelHeightTop,topSpaceAvailable,maxScroll):this._transformOrigin=this._getOriginBasedOnOption()}_adjustPanelUp(panelHeightBottom,bottomSpaceAvailable){const distanceBelowViewport=Math.round(panelHeightBottom-bottomSpaceAvailable);this._scrollTop-=distanceBelowViewport,this._offsetY-=distanceBelowViewport,this._transformOrigin=this._getOriginBasedOnOption(),this._scrollTop<=0&&(this._scrollTop=0,this._offsetY=0,this._transformOrigin=\"50% bottom 0px\")}_adjustPanelDown(panelHeightTop,topSpaceAvailable,maxScroll){const distanceAboveViewport=Math.round(panelHeightTop-topSpaceAvailable);if(this._scrollTop+=distanceAboveViewport,this._offsetY+=distanceAboveViewport,this._transformOrigin=this._getOriginBasedOnOption(),this._scrollTop>=maxScroll)return this._scrollTop=maxScroll,this._offsetY=0,void(this._transformOrigin=\"50% top 0px\")}_calculateOverlayPosition(){const itemHeight=this._getItemHeight(),items=this._getItemCount(),panelHeight=Math.min(items*itemHeight,256),maxScroll=items*itemHeight-panelHeight;let selectedOptionOffset;selectedOptionOffset=this.empty?0:Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]),0),selectedOptionOffset+=Object(fesm2015_core.t)(selectedOptionOffset,this.options,this.optionGroups);const scrollBuffer=panelHeight/2;this._scrollTop=this._calculateOverlayScroll(selectedOptionOffset,scrollBuffer,maxScroll),this._offsetY=this._calculateOverlayOffsetY(selectedOptionOffset,scrollBuffer,maxScroll),this._checkOverlayWithinViewport(maxScroll)}_getOriginBasedOnOption(){const itemHeight=this._getItemHeight(),optionHeightAdjustment=(itemHeight-this._triggerRect.height)/2;return`50% ${Math.abs(this._offsetY)-optionHeightAdjustment+itemHeight/2}px 0px`}_getItemHeight(){return 3*this._triggerFontSize}_getItemCount(){return this.options.length+this.optionGroups.length}}return MatSelect.ɵfac=function(t){return ɵMatSelect_BaseFactory(t||MatSelect)},MatSelect.ɵcmp=core.Kb({type:MatSelect,selectors:[[\"mat-select\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Jb(dirIndex,MAT_SELECT_TRIGGER,1),core.Jb(dirIndex,fesm2015_core.m,1),core.Jb(dirIndex,fesm2015_core.g,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx.customTrigger=_t.first),core.uc(_t=core.fc())&&(ctx.options=_t),core.uc(_t=core.fc())&&(ctx.optionGroups=_t)}},hostAttrs:[\"role\",\"combobox\",\"aria-autocomplete\",\"none\",\"aria-haspopup\",\"true\",1,\"mat-select\"],hostVars:20,hostBindings:function(rf,ctx){1&rf&&core.ec(\"keydown\",function($event){return ctx._handleKeydown($event)})(\"focus\",function(){return ctx._onFocus()})(\"blur\",function(){return ctx._onBlur()}),2&rf&&(core.Eb(\"id\",ctx.id)(\"tabindex\",ctx.tabIndex)(\"aria-controls\",ctx.panelOpen?ctx.id+\"-panel\":null)(\"aria-expanded\",ctx.panelOpen)(\"aria-label\",ctx.ariaLabel||null)(\"aria-required\",ctx.required.toString())(\"aria-disabled\",ctx.disabled.toString())(\"aria-invalid\",ctx.errorState)(\"aria-describedby\",ctx._ariaDescribedby||null)(\"aria-activedescendant\",ctx._getAriaActiveDescendant()),core.Ib(\"mat-select-disabled\",ctx.disabled)(\"mat-select-invalid\",ctx.errorState)(\"mat-select-required\",ctx.required)(\"mat-select-empty\",ctx.empty)(\"mat-select-multiple\",ctx.multiple))},inputs:{disabled:\"disabled\",disableRipple:\"disableRipple\",tabIndex:\"tabIndex\"},exportAs:[\"matSelect\"],features:[core.Cb([{provide:form_field.d,useExisting:MatSelect},{provide:fesm2015_core.h,useExisting:MatSelect}]),core.Ab],ngContentSelectors:_c3,decls:9,vars:12,consts:[[\"cdk-overlay-origin\",\"\",1,\"mat-select-trigger\",3,\"click\"],[\"origin\",\"cdkOverlayOrigin\",\"trigger\",\"\"],[1,\"mat-select-value\",3,\"ngSwitch\"],[\"class\",\"mat-select-placeholder mat-select-min-line\",4,\"ngSwitchCase\"],[\"class\",\"mat-select-value-text\",3,\"ngSwitch\",4,\"ngSwitchCase\"],[1,\"mat-select-arrow-wrapper\"],[1,\"mat-select-arrow\"],[\"cdk-connected-overlay\",\"\",\"cdkConnectedOverlayLockPosition\",\"\",\"cdkConnectedOverlayHasBackdrop\",\"\",\"cdkConnectedOverlayBackdropClass\",\"cdk-overlay-transparent-backdrop\",3,\"cdkConnectedOverlayPanelClass\",\"cdkConnectedOverlayScrollStrategy\",\"cdkConnectedOverlayOrigin\",\"cdkConnectedOverlayOpen\",\"cdkConnectedOverlayPositions\",\"cdkConnectedOverlayMinWidth\",\"cdkConnectedOverlayOffsetY\",\"backdropClick\",\"attach\",\"detach\"],[1,\"mat-select-placeholder\",\"mat-select-min-line\"],[1,\"mat-select-value-text\",3,\"ngSwitch\"],[\"class\",\"mat-select-min-line\",4,\"ngSwitchDefault\"],[4,\"ngSwitchCase\"],[1,\"mat-select-min-line\"],[1,\"mat-select-panel-wrap\"],[\"role\",\"listbox\",\"tabindex\",\"-1\",3,\"ngClass\",\"keydown\"],[\"panel\",\"\"]],template:function(rf,ctx){if(1&rf&&(core.oc(_c2),core.Wb(0,\"div\",0,1),core.ec(\"click\",function(){return ctx.toggle()}),core.Wb(3,\"div\",2),core.Gc(4,MatSelect_span_4_Template,2,1,\"span\",3),core.Gc(5,MatSelect_span_5_Template,3,2,\"span\",4),core.Vb(),core.Wb(6,\"div\",5),core.Rb(7,\"div\",6),core.Vb(),core.Vb(),core.Gc(8,MatSelect_ng_template_8_Template,4,14,\"ng-template\",7),core.ec(\"backdropClick\",function(){return ctx.close()})(\"attach\",function(){return ctx._onAttached()})(\"detach\",function(){return ctx.close()})),2&rf){const _r0=core.vc(1);core.Eb(\"aria-owns\",ctx.panelOpen?ctx.id+\"-panel\":null),core.Db(3),core.pc(\"ngSwitch\",ctx.empty),core.Eb(\"id\",ctx._valueId),core.Db(1),core.pc(\"ngSwitchCase\",!0),core.Db(1),core.pc(\"ngSwitchCase\",!1),core.Db(3),core.pc(\"cdkConnectedOverlayPanelClass\",ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\",ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\",_r0)(\"cdkConnectedOverlayOpen\",ctx.panelOpen)(\"cdkConnectedOverlayPositions\",ctx._positions)(\"cdkConnectedOverlayMinWidth\",null==ctx._triggerRect?null:ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\",ctx._offsetY)}},directives:[overlay.b,common.o,common.p,overlay.a,common.q,common.k],styles:['.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\" \";white-space:pre;width:1px}\\n'],encapsulation:2,data:{animation:[matSelectAnimations.transformPanelWrap,matSelectAnimations.transformPanel]},changeDetection:0}),MatSelect})();const ɵMatSelect_BaseFactory=core.Yb(select_MatSelect);let select_MatSelectModule=(()=>{class MatSelectModule{}return MatSelectModule.ɵmod=core.Ob({type:MatSelectModule}),MatSelectModule.ɵinj=core.Nb({factory:function(t){return new(t||MatSelectModule)},providers:[MAT_SELECT_SCROLL_STRATEGY_PROVIDER],imports:[[common.c,overlay.f,fesm2015_core.n,fesm2015_core.j],scrolling.c,form_field.e,fesm2015_core.n,fesm2015_core.j]}),MatSelectModule})();var fesm2015_portal=__webpack_require__(\"1z/I\"),fesm2015_dialog=__webpack_require__(\"iELJ\"),Subscription=__webpack_require__(\"quSY\"),of=__webpack_require__(\"LRne\");const datepicker_c0=[\"mat-calendar-body\",\"\"];function MatCalendarBody_tr_0_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"tr\",2),core.Wb(1,\"td\",3),core.Ic(2),core.Vb(),core.Vb()),2&rf){const ctx_r0=core.ic();core.Db(1),core.Dc(\"padding-top\",ctx_r0._cellPadding)(\"padding-bottom\",ctx_r0._cellPadding),core.Eb(\"colspan\",ctx_r0.numCols),core.Db(1),core.Kc(\" \",ctx_r0.label,\" \")}}function MatCalendarBody_tr_1_td_1_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"td\",7),core.Ic(1),core.Vb()),2&rf){const ctx_r4=core.ic(2);core.Dc(\"padding-top\",ctx_r4._cellPadding)(\"padding-bottom\",ctx_r4._cellPadding),core.Eb(\"colspan\",ctx_r4._firstRowOffset),core.Db(1),core.Kc(\" \",ctx_r4._firstRowOffset>=ctx_r4.labelMinRequiredCells?ctx_r4.label:\"\",\" \")}}function MatCalendarBody_tr_1_td_2_Template(rf,ctx){if(1&rf){const _r9=core.Xb();core.Wb(0,\"td\",8),core.ec(\"click\",function($event){core.yc(_r9);const item_r6=ctx.$implicit;return core.ic(2)._cellClicked(item_r6,$event)}),core.Wb(1,\"div\",9),core.Ic(2),core.Vb(),core.Rb(3,\"div\",10),core.Vb()}if(2&rf){const item_r6=ctx.$implicit,colIndex_r7=ctx.index,rowIndex_r3=core.ic().index,ctx_r5=core.ic();core.Dc(\"width\",ctx_r5._cellWidth)(\"padding-top\",ctx_r5._cellPadding)(\"padding-bottom\",ctx_r5._cellPadding),core.Ib(\"mat-calendar-body-disabled\",!item_r6.enabled)(\"mat-calendar-body-active\",ctx_r5._isActiveCell(rowIndex_r3,colIndex_r7))(\"mat-calendar-body-range-start\",ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\",ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\",ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\",ctx_r5._isComparisonBridgeStart(item_r6.compareValue,rowIndex_r3,colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\",ctx_r5._isComparisonBridgeEnd(item_r6.compareValue,rowIndex_r3,colIndex_r7))(\"mat-calendar-body-comparison-start\",ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\",ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\",ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\",ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\",ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\",ctx_r5._isInPreview(item_r6.compareValue)),core.pc(\"ngClass\",item_r6.cssClasses)(\"tabindex\",ctx_r5._isActiveCell(rowIndex_r3,colIndex_r7)?0:-1),core.Eb(\"data-mat-row\",rowIndex_r3)(\"data-mat-col\",colIndex_r7)(\"aria-label\",item_r6.ariaLabel)(\"aria-disabled\",!item_r6.enabled||null)(\"aria-selected\",ctx_r5._isSelected(item_r6.compareValue)),core.Db(1),core.Ib(\"mat-calendar-body-selected\",ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\",ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\",ctx_r5.todayValue===item_r6.compareValue),core.Db(1),core.Kc(\" \",item_r6.displayValue,\" \")}}function MatCalendarBody_tr_1_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"tr\",4),core.Gc(1,MatCalendarBody_tr_1_td_1_Template,2,6,\"td\",5),core.Gc(2,MatCalendarBody_tr_1_td_2_Template,4,46,\"td\",6),core.Vb()),2&rf){const row_r2=ctx.$implicit,rowIndex_r3=ctx.index,ctx_r1=core.ic();core.Db(1),core.pc(\"ngIf\",0===rowIndex_r3&&ctx_r1._firstRowOffset),core.Db(1),core.pc(\"ngForOf\",row_r2)}}function MatMonthView_th_3_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"th\",5),core.Ic(1),core.Vb()),2&rf){const day_r1=ctx.$implicit;core.Eb(\"aria-label\",day_r1.long),core.Db(1),core.Jc(day_r1.narrow)}}const datepicker_c1=[\"*\"];function MatCalendar_ng_template_0_Template(rf,ctx){}function MatCalendar_mat_month_view_2_Template(rf,ctx){if(1&rf){const _r5=core.Xb();core.Wb(0,\"mat-month-view\",5),core.ec(\"activeDateChange\",function($event){return core.yc(_r5),core.ic().activeDate=$event})(\"_userSelection\",function($event){return core.yc(_r5),core.ic()._dateSelected($event)}),core.Vb()}if(2&rf){const ctx_r1=core.ic();core.pc(\"activeDate\",ctx_r1.activeDate)(\"selected\",ctx_r1.selected)(\"dateFilter\",ctx_r1.dateFilter)(\"maxDate\",ctx_r1.maxDate)(\"minDate\",ctx_r1.minDate)(\"dateClass\",ctx_r1.dateClass)(\"comparisonStart\",ctx_r1.comparisonStart)(\"comparisonEnd\",ctx_r1.comparisonEnd)}}function MatCalendar_mat_year_view_3_Template(rf,ctx){if(1&rf){const _r8=core.Xb();core.Wb(0,\"mat-year-view\",6),core.ec(\"activeDateChange\",function($event){return core.yc(_r8),core.ic().activeDate=$event})(\"monthSelected\",function($event){return core.yc(_r8),core.ic()._monthSelectedInYearView($event)})(\"selectedChange\",function($event){return core.yc(_r8),core.ic()._goToDateInView($event,\"month\")}),core.Vb()}if(2&rf){const ctx_r2=core.ic();core.pc(\"activeDate\",ctx_r2.activeDate)(\"selected\",ctx_r2.selected)(\"dateFilter\",ctx_r2.dateFilter)(\"maxDate\",ctx_r2.maxDate)(\"minDate\",ctx_r2.minDate)(\"dateClass\",ctx_r2.dateClass)}}function MatCalendar_mat_multi_year_view_4_Template(rf,ctx){if(1&rf){const _r12=core.Xb();core.Wb(0,\"mat-multi-year-view\",7),core.ec(\"activeDateChange\",function($event){return core.yc(_r12),core.ic().activeDate=$event})(\"yearSelected\",function($event){return core.yc(_r12),core.ic()._yearSelectedInMultiYearView($event)})(\"selectedChange\",function($event){return core.yc(_r12),core.ic()._goToDateInView($event,\"year\")}),core.Vb()}if(2&rf){const ctx_r3=core.ic();core.pc(\"activeDate\",ctx_r3.activeDate)(\"selected\",ctx_r3.selected)(\"dateFilter\",ctx_r3.dateFilter)(\"maxDate\",ctx_r3.maxDate)(\"minDate\",ctx_r3.minDate)(\"dateClass\",ctx_r3.dateClass)}}function MatDatepickerContent_ng_template_2_Template(rf,ctx){}const datepicker_c2=[\"button\"];function MatDatepickerToggle__svg_svg_2_Template(rf,ctx){1&rf&&(core.hc(),core.Wb(0,\"svg\",3),core.Rb(1,\"path\",4),core.Vb())}const datepicker_c3=[[[\"\",\"matDatepickerToggleIcon\",\"\"]]],_c4=[\"[matDatepickerToggleIcon]\"];let datepicker_MatDatepickerIntl=(()=>{class MatDatepickerIntl{constructor(){this.changes=new Subject.a,this.calendarLabel=\"Calendar\",this.openCalendarLabel=\"Open calendar\",this.closeCalendarLabel=\"Close calendar\",this.prevMonthLabel=\"Previous month\",this.nextMonthLabel=\"Next month\",this.prevYearLabel=\"Previous year\",this.nextYearLabel=\"Next year\",this.prevMultiYearLabel=\"Previous 20 years\",this.nextMultiYearLabel=\"Next 20 years\",this.switchToMonthViewLabel=\"Choose date\",this.switchToMultiYearViewLabel=\"Choose month and year\"}formatYearRange(start,end){return`${start} – ${end}`}}return MatDatepickerIntl.ɵfac=function(t){return new(t||MatDatepickerIntl)},MatDatepickerIntl.ɵprov=Object(core.Mb)({factory:function(){return new MatDatepickerIntl},token:MatDatepickerIntl,providedIn:\"root\"}),MatDatepickerIntl})();class MatCalendarCell{constructor(value,displayValue,ariaLabel,enabled,cssClasses={},compareValue=value,rawValue){this.value=value,this.displayValue=displayValue,this.ariaLabel=ariaLabel,this.enabled=enabled,this.cssClasses=cssClasses,this.compareValue=compareValue,this.rawValue=rawValue}}let datepicker_MatCalendarBody=(()=>{class MatCalendarBody{constructor(_elementRef,_ngZone){this._elementRef=_elementRef,this._ngZone=_ngZone,this.numCols=7,this.activeCell=0,this.isRange=!1,this.cellAspectRatio=1,this.previewStart=null,this.previewEnd=null,this.selectedValueChange=new core.o,this.previewChange=new core.o,this._enterHandler=event=>{if(this._skipNextFocus&&\"focus\"===event.type)this._skipNextFocus=!1;else if(event.target&&this.isRange){const cell=this._getCellFromElement(event.target);cell&&this._ngZone.run(()=>this.previewChange.emit({value:cell.enabled?cell:null,event:event}))}},this._leaveHandler=event=>{null!==this.previewEnd&&this.isRange&&event.target&&isTableCell(event.target)&&this._ngZone.run(()=>this.previewChange.emit({value:null,event:event}))},_ngZone.runOutsideAngular(()=>{const element=_elementRef.nativeElement;element.addEventListener(\"mouseenter\",this._enterHandler,!0),element.addEventListener(\"focus\",this._enterHandler,!0),element.addEventListener(\"mouseleave\",this._leaveHandler,!0),element.addEventListener(\"blur\",this._leaveHandler,!0)})}_cellClicked(cell,event){cell.enabled&&this.selectedValueChange.emit({value:cell.value,event:event})}_isSelected(value){return this.startValue===value||this.endValue===value}ngOnChanges(changes){const columnChanges=changes.numCols,{rows:rows,numCols:numCols}=this;(changes.rows||columnChanges)&&(this._firstRowOffset=rows&&rows.length&&rows[0].length?numCols-rows[0].length:0),(changes.cellAspectRatio||columnChanges||!this._cellPadding)&&(this._cellPadding=50*this.cellAspectRatio/numCols+\"%\"),!columnChanges&&this._cellWidth||(this._cellWidth=100/numCols+\"%\")}ngOnDestroy(){const element=this._elementRef.nativeElement;element.removeEventListener(\"mouseenter\",this._enterHandler,!0),element.removeEventListener(\"focus\",this._enterHandler,!0),element.removeEventListener(\"mouseleave\",this._leaveHandler,!0),element.removeEventListener(\"blur\",this._leaveHandler,!0)}_isActiveCell(rowIndex,colIndex){let cellNumber=rowIndex*this.numCols+colIndex;return rowIndex&&(cellNumber-=this._firstRowOffset),cellNumber==this.activeCell}_focusActiveCell(movePreview=!0){this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.pipe(Object(take.a)(1)).subscribe(()=>{const activeCell=this._elementRef.nativeElement.querySelector(\".mat-calendar-body-active\");activeCell&&(movePreview||(this._skipNextFocus=!0),activeCell.focus())})})}_isRangeStart(value){return isStart(value,this.startValue,this.endValue)}_isRangeEnd(value){return isEnd(value,this.startValue,this.endValue)}_isInRange(value){return isInRange(value,this.startValue,this.endValue,this.isRange)}_isComparisonStart(value){return isStart(value,this.comparisonStart,this.comparisonEnd)}_isComparisonBridgeStart(value,rowIndex,colIndex){if(!this._isComparisonStart(value)||this._isRangeStart(value)||!this._isInRange(value))return!1;let previousCell=this.rows[rowIndex][colIndex-1];if(!previousCell){const previousRow=this.rows[rowIndex-1];previousCell=previousRow&&previousRow[previousRow.length-1]}return previousCell&&!this._isRangeEnd(previousCell.compareValue)}_isComparisonBridgeEnd(value,rowIndex,colIndex){if(!this._isComparisonEnd(value)||this._isRangeEnd(value)||!this._isInRange(value))return!1;let nextCell=this.rows[rowIndex][colIndex+1];if(!nextCell){const nextRow=this.rows[rowIndex+1];nextCell=nextRow&&nextRow[0]}return nextCell&&!this._isRangeStart(nextCell.compareValue)}_isComparisonEnd(value){return isEnd(value,this.comparisonStart,this.comparisonEnd)}_isInComparisonRange(value){return isInRange(value,this.comparisonStart,this.comparisonEnd,this.isRange)}_isComparisonIdentical(value){return this.comparisonStart===this.comparisonEnd&&value===this.comparisonStart}_isPreviewStart(value){return isStart(value,this.previewStart,this.previewEnd)}_isPreviewEnd(value){return isEnd(value,this.previewStart,this.previewEnd)}_isInPreview(value){return isInRange(value,this.previewStart,this.previewEnd,this.isRange)}_getCellFromElement(element){let cell;if(isTableCell(element)?cell=element:isTableCell(element.parentNode)&&(cell=element.parentNode),cell){const row=cell.getAttribute(\"data-mat-row\"),col=cell.getAttribute(\"data-mat-col\");if(row&&col)return this.rows[parseInt(row)][parseInt(col)]}return null}}return MatCalendarBody.ɵfac=function(t){return new(t||MatCalendarBody)(core.Qb(core.l),core.Qb(core.B))},MatCalendarBody.ɵcmp=core.Kb({type:MatCalendarBody,selectors:[[\"\",\"mat-calendar-body\",\"\"]],hostAttrs:[\"role\",\"grid\",\"aria-readonly\",\"true\",1,\"mat-calendar-body\"],inputs:{numCols:\"numCols\",activeCell:\"activeCell\",isRange:\"isRange\",cellAspectRatio:\"cellAspectRatio\",previewStart:\"previewStart\",previewEnd:\"previewEnd\",label:\"label\",rows:\"rows\",todayValue:\"todayValue\",startValue:\"startValue\",endValue:\"endValue\",labelMinRequiredCells:\"labelMinRequiredCells\",comparisonStart:\"comparisonStart\",comparisonEnd:\"comparisonEnd\"},outputs:{selectedValueChange:\"selectedValueChange\",previewChange:\"previewChange\"},exportAs:[\"matCalendarBody\"],features:[core.Bb],attrs:datepicker_c0,decls:2,vars:2,consts:[[\"aria-hidden\",\"true\",4,\"ngIf\"],[\"role\",\"row\",4,\"ngFor\",\"ngForOf\"],[\"aria-hidden\",\"true\"],[1,\"mat-calendar-body-label\"],[\"role\",\"row\"],[\"aria-hidden\",\"true\",\"class\",\"mat-calendar-body-label\",3,\"paddingTop\",\"paddingBottom\",4,\"ngIf\"],[\"role\",\"gridcell\",\"class\",\"mat-calendar-body-cell\",3,\"ngClass\",\"tabindex\",\"mat-calendar-body-disabled\",\"mat-calendar-body-active\",\"mat-calendar-body-range-start\",\"mat-calendar-body-range-end\",\"mat-calendar-body-in-range\",\"mat-calendar-body-comparison-bridge-start\",\"mat-calendar-body-comparison-bridge-end\",\"mat-calendar-body-comparison-start\",\"mat-calendar-body-comparison-end\",\"mat-calendar-body-in-comparison-range\",\"mat-calendar-body-preview-start\",\"mat-calendar-body-preview-end\",\"mat-calendar-body-in-preview\",\"width\",\"paddingTop\",\"paddingBottom\",\"click\",4,\"ngFor\",\"ngForOf\"],[\"aria-hidden\",\"true\",1,\"mat-calendar-body-label\"],[\"role\",\"gridcell\",1,\"mat-calendar-body-cell\",3,\"ngClass\",\"tabindex\",\"click\"],[1,\"mat-calendar-body-cell-content\",\"mat-focus-indicator\"],[1,\"mat-calendar-body-cell-preview\"]],template:function(rf,ctx){1&rf&&(core.Gc(0,MatCalendarBody_tr_0_Template,3,6,\"tr\",0),core.Gc(1,MatCalendarBody_tr_1_Template,3,2,\"tr\",1)),2&rf&&(core.pc(\"ngIf\",ctx._firstRowOffset<ctx.labelMinRequiredCells),core.Db(1),core.pc(\"ngForOf\",ctx.rows))},directives:[common.m,common.l,common.k],styles:['.mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\"\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n'],encapsulation:2,changeDetection:0}),MatCalendarBody})();function isTableCell(node){return\"TD\"===node.nodeName}function isStart(value,start,end){return null!==end&&start!==end&&value<end&&value===start}function isEnd(value,start,end){return null!==start&&start!==end&&value>=start&&value===end}function isInRange(value,start,end,rangeEnabled){return rangeEnabled&&null!==start&&null!==end&&start!==end&&value>=start&&value<=end}class DateRange{constructor(start,end){this.start=start,this.end=end}}let datepicker_MatDateSelectionModel=(()=>{class MatDateSelectionModel{constructor(selection,_adapter){this.selection=selection,this._adapter=_adapter,this._selectionChanged=new Subject.a,this.selectionChanged=this._selectionChanged,this.selection=selection}updateSelection(value,source){this.selection=value,this._selectionChanged.next({selection:value,source:source})}ngOnDestroy(){this._selectionChanged.complete()}_isValidDateInstance(date){return this._adapter.isDateInstance(date)&&this._adapter.isValid(date)}clone(){return null}}return MatDateSelectionModel.ɵfac=function(t){return new(t||MatDateSelectionModel)(core.Qb(void 0),core.Qb(fesm2015_core.c))},MatDateSelectionModel.ɵdir=core.Lb({type:MatDateSelectionModel}),MatDateSelectionModel})(),datepicker_MatSingleDateSelectionModel=(()=>{class MatSingleDateSelectionModel extends datepicker_MatDateSelectionModel{constructor(adapter){super(null,adapter)}add(date){super.updateSelection(date,this)}isValid(){return null!=this.selection&&this._isValidDateInstance(this.selection)}isComplete(){return null!=this.selection}clone(){const clone=new MatSingleDateSelectionModel(this._adapter);return clone.updateSelection(this.selection,this),clone}}return MatSingleDateSelectionModel.ɵfac=function(t){return new(t||MatSingleDateSelectionModel)(core.ac(fesm2015_core.c))},MatSingleDateSelectionModel.ɵprov=core.Mb({token:MatSingleDateSelectionModel,factory:MatSingleDateSelectionModel.ɵfac}),MatSingleDateSelectionModel})();const MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER={provide:datepicker_MatDateSelectionModel,deps:[[new core.C,new core.M,datepicker_MatDateSelectionModel],fesm2015_core.c],useFactory:function(parent,adapter){return parent||new datepicker_MatSingleDateSelectionModel(adapter)}},MAT_DATE_RANGE_SELECTION_STRATEGY=new core.s(\"MAT_DATE_RANGE_SELECTION_STRATEGY\");let datepicker_MatMonthView=(()=>{class MatMonthView{constructor(_changeDetectorRef,_dateFormats,_dateAdapter,_dir,_rangeStrategy){this._changeDetectorRef=_changeDetectorRef,this._dateFormats=_dateFormats,this._dateAdapter=_dateAdapter,this._dir=_dir,this._rangeStrategy=_rangeStrategy,this._rerenderSubscription=Subscription.a.EMPTY,this.selectedChange=new core.o,this._userSelection=new core.o,this.activeDateChange=new core.o,this._activeDate=this._dateAdapter.today()}get activeDate(){return this._activeDate}set activeDate(value){const oldActiveDate=this._activeDate,validDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(validDate,this.minDate,this.maxDate),this._hasSameMonthAndYear(oldActiveDate,this._activeDate)||this._init()}get selected(){return this._selected}set selected(value){this._selected=value instanceof DateRange?value:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)),this._setRanges(this._selected)}get minDate(){return this._minDate}set minDate(value){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get maxDate(){return this._maxDate}set maxDate(value){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(Object(startWith.a)(null)).subscribe(()=>this._init())}ngOnChanges(changes){const comparisonChange=changes.comparisonStart||changes.comparisonEnd;comparisonChange&&!comparisonChange.firstChange&&this._setRanges(this.selected)}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_dateSelected(event){const date=event.value,selectedYear=this._dateAdapter.getYear(this.activeDate),selectedMonth=this._dateAdapter.getMonth(this.activeDate),selectedDate=this._dateAdapter.createDate(selectedYear,selectedMonth,date);let rangeStartDate,rangeEndDate;this._selected instanceof DateRange?(rangeStartDate=this._getDateInCurrentMonth(this._selected.start),rangeEndDate=this._getDateInCurrentMonth(this._selected.end)):rangeStartDate=rangeEndDate=this._getDateInCurrentMonth(this._selected),rangeStartDate===date&&rangeEndDate===date||this.selectedChange.emit(selectedDate),this._userSelection.emit({value:selectedDate,event:event.event}),this._previewStart=this._previewEnd=null,this._changeDetectorRef.markForCheck()}_handleCalendarBodyKeydown(event){const oldActiveDate=this._activeDate,isRtl=this._isRtl();switch(event.keyCode){case keycodes.h:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,isRtl?1:-1);break;case keycodes.l:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,isRtl?-1:1);break;case keycodes.o:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,-7);break;case keycodes.c:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,7);break;case keycodes.g:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,1-this._dateAdapter.getDate(this._activeDate));break;case keycodes.d:this.activeDate=this._dateAdapter.addCalendarDays(this._activeDate,this._dateAdapter.getNumDaysInMonth(this._activeDate)-this._dateAdapter.getDate(this._activeDate));break;case keycodes.k:this.activeDate=event.altKey?this._dateAdapter.addCalendarYears(this._activeDate,-1):this._dateAdapter.addCalendarMonths(this._activeDate,-1);break;case keycodes.j:this.activeDate=event.altKey?this._dateAdapter.addCalendarYears(this._activeDate,1):this._dateAdapter.addCalendarMonths(this._activeDate,1);break;case keycodes.e:case keycodes.m:return void(this.dateFilter&&!this.dateFilter(this._activeDate)||(this._dateSelected({value:this._dateAdapter.getDate(this._activeDate),event:event}),event.preventDefault()));case keycodes.f:return void(null==this._previewEnd||Object(keycodes.r)(event)||(this._previewStart=this._previewEnd=null,this.selectedChange.emit(null),this._userSelection.emit({value:null,event:event}),event.preventDefault(),event.stopPropagation()));default:return}this._dateAdapter.compareDate(oldActiveDate,this.activeDate)&&this.activeDateChange.emit(this.activeDate),this._focusActiveCell(),event.preventDefault()}_init(){this._setRanges(this.selected),this._todayDate=this._getCellCompareValue(this._dateAdapter.today()),this._monthLabel=this._dateFormats.display.monthLabel?this._dateAdapter.format(this.activeDate,this._dateFormats.display.monthLabel):this._dateAdapter.getMonthNames(\"short\")[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();let firstOfMonth=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),this._dateAdapter.getMonth(this.activeDate),1);this._firstWeekOffset=(7+this._dateAdapter.getDayOfWeek(firstOfMonth)-this._dateAdapter.getFirstDayOfWeek())%7,this._initWeekdays(),this._createWeekCells(),this._changeDetectorRef.markForCheck()}_focusActiveCell(movePreview){this._matCalendarBody._focusActiveCell(movePreview)}_previewChanged({event:event,value:cell}){if(this._rangeStrategy){const previewRange=this._rangeStrategy.createPreview(cell?cell.rawValue:null,this.selected,event);this._previewStart=this._getCellCompareValue(previewRange.start),this._previewEnd=this._getCellCompareValue(previewRange.end),this._changeDetectorRef.detectChanges()}}_initWeekdays(){const firstDayOfWeek=this._dateAdapter.getFirstDayOfWeek(),narrowWeekdays=this._dateAdapter.getDayOfWeekNames(\"narrow\");let weekdays=this._dateAdapter.getDayOfWeekNames(\"long\").map((long,i)=>({long:long,narrow:narrowWeekdays[i]}));this._weekdays=weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0,firstDayOfWeek))}_createWeekCells(){const daysInMonth=this._dateAdapter.getNumDaysInMonth(this.activeDate),dateNames=this._dateAdapter.getDateNames();this._weeks=[[]];for(let i=0,cell=this._firstWeekOffset;i<daysInMonth;i++,cell++){7==cell&&(this._weeks.push([]),cell=0);const date=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),this._dateAdapter.getMonth(this.activeDate),i+1),enabled=this._shouldEnableDate(date),ariaLabel=this._dateAdapter.format(date,this._dateFormats.display.dateA11yLabel),cellClasses=this.dateClass?this.dateClass(date,\"month\"):void 0;this._weeks[this._weeks.length-1].push(new MatCalendarCell(i+1,dateNames[i],ariaLabel,enabled,cellClasses,this._getCellCompareValue(date),date))}}_shouldEnableDate(date){return!!date&&(!this.minDate||this._dateAdapter.compareDate(date,this.minDate)>=0)&&(!this.maxDate||this._dateAdapter.compareDate(date,this.maxDate)<=0)&&(!this.dateFilter||this.dateFilter(date))}_getDateInCurrentMonth(date){return date&&this._hasSameMonthAndYear(date,this.activeDate)?this._dateAdapter.getDate(date):null}_hasSameMonthAndYear(d1,d2){return!(!d1||!d2||this._dateAdapter.getMonth(d1)!=this._dateAdapter.getMonth(d2)||this._dateAdapter.getYear(d1)!=this._dateAdapter.getYear(d2))}_getCellCompareValue(date){if(date){const year=this._dateAdapter.getYear(date),month=this._dateAdapter.getMonth(date),day=this._dateAdapter.getDate(date);return new Date(year,month,day).getTime()}return null}_isRtl(){return this._dir&&\"rtl\"===this._dir.value}_setRanges(selectedValue){selectedValue instanceof DateRange?(this._rangeStart=this._getCellCompareValue(selectedValue.start),this._rangeEnd=this._getCellCompareValue(selectedValue.end),this._isRange=!0):(this._rangeStart=this._rangeEnd=this._getCellCompareValue(selectedValue),this._isRange=!1),this._comparisonRangeStart=this._getCellCompareValue(this.comparisonStart),this._comparisonRangeEnd=this._getCellCompareValue(this.comparisonEnd)}}return MatMonthView.ɵfac=function(t){return new(t||MatMonthView)(core.Qb(core.h),core.Qb(fesm2015_core.e,8),core.Qb(fesm2015_core.c,8),core.Qb(bidi.b,8),core.Qb(MAT_DATE_RANGE_SELECTION_STRATEGY,8))},MatMonthView.ɵcmp=core.Kb({type:MatMonthView,selectors:[[\"mat-month-view\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Lc(datepicker_MatCalendarBody,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._matCalendarBody=_t.first)}},inputs:{activeDate:\"activeDate\",selected:\"selected\",minDate:\"minDate\",maxDate:\"maxDate\",dateFilter:\"dateFilter\",dateClass:\"dateClass\",comparisonStart:\"comparisonStart\",comparisonEnd:\"comparisonEnd\"},outputs:{selectedChange:\"selectedChange\",_userSelection:\"_userSelection\",activeDateChange:\"activeDateChange\"},exportAs:[\"matMonthView\"],features:[core.Bb],decls:7,vars:13,consts:[[\"role\",\"presentation\",1,\"mat-calendar-table\"],[1,\"mat-calendar-table-header\"],[\"scope\",\"col\",4,\"ngFor\",\"ngForOf\"],[\"colspan\",\"7\",\"aria-hidden\",\"true\",1,\"mat-calendar-table-header-divider\"],[\"mat-calendar-body\",\"\",3,\"label\",\"rows\",\"todayValue\",\"startValue\",\"endValue\",\"comparisonStart\",\"comparisonEnd\",\"previewStart\",\"previewEnd\",\"isRange\",\"labelMinRequiredCells\",\"activeCell\",\"selectedValueChange\",\"previewChange\",\"keydown\"],[\"scope\",\"col\"]],template:function(rf,ctx){1&rf&&(core.Wb(0,\"table\",0),core.Wb(1,\"thead\",1),core.Wb(2,\"tr\"),core.Gc(3,MatMonthView_th_3_Template,2,2,\"th\",2),core.Vb(),core.Wb(4,\"tr\"),core.Rb(5,\"th\",3),core.Vb(),core.Vb(),core.Wb(6,\"tbody\",4),core.ec(\"selectedValueChange\",function($event){return ctx._dateSelected($event)})(\"previewChange\",function($event){return ctx._previewChanged($event)})(\"keydown\",function($event){return ctx._handleCalendarBodyKeydown($event)}),core.Vb(),core.Vb()),2&rf&&(core.Db(3),core.pc(\"ngForOf\",ctx._weekdays),core.Db(3),core.pc(\"label\",ctx._monthLabel)(\"rows\",ctx._weeks)(\"todayValue\",ctx._todayDate)(\"startValue\",ctx._rangeStart)(\"endValue\",ctx._rangeEnd)(\"comparisonStart\",ctx._comparisonRangeStart)(\"comparisonEnd\",ctx._comparisonRangeEnd)(\"previewStart\",ctx._previewStart)(\"previewEnd\",ctx._previewEnd)(\"isRange\",ctx._isRange)(\"labelMinRequiredCells\",3)(\"activeCell\",ctx._dateAdapter.getDate(ctx.activeDate)-1))},directives:[common.l,datepicker_MatCalendarBody],encapsulation:2,changeDetection:0}),MatMonthView})(),datepicker_MatMultiYearView=(()=>{class MatMultiYearView{constructor(_changeDetectorRef,_dateAdapter,_dir){this._changeDetectorRef=_changeDetectorRef,this._dateAdapter=_dateAdapter,this._dir=_dir,this._rerenderSubscription=Subscription.a.EMPTY,this.selectedChange=new core.o,this.yearSelected=new core.o,this.activeDateChange=new core.o,this._activeDate=this._dateAdapter.today()}get activeDate(){return this._activeDate}set activeDate(value){let oldActiveDate=this._activeDate;const validDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(validDate,this.minDate,this.maxDate),isSameMultiYearView(this._dateAdapter,oldActiveDate,this._activeDate,this.minDate,this.maxDate)||this._init()}get selected(){return this._selected}set selected(value){this._selected=value instanceof DateRange?value:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)),this._setSelectedYear(value)}get minDate(){return this._minDate}set minDate(value){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get maxDate(){return this._maxDate}set maxDate(value){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(Object(startWith.a)(null)).subscribe(()=>this._init())}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_init(){this._todayYear=this._dateAdapter.getYear(this._dateAdapter.today());const minYearOfPage=this._dateAdapter.getYear(this._activeDate)-getActiveOffset(this._dateAdapter,this.activeDate,this.minDate,this.maxDate);this._years=[];for(let i=0,row=[];i<24;i++)row.push(minYearOfPage+i),4==row.length&&(this._years.push(row.map(year=>this._createCellForYear(year))),row=[]);this._changeDetectorRef.markForCheck()}_yearSelected(event){const year=event.value;this.yearSelected.emit(this._dateAdapter.createDate(year,0,1));let month=this._dateAdapter.getMonth(this.activeDate),daysInMonth=this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year,month,1));this.selectedChange.emit(this._dateAdapter.createDate(year,month,Math.min(this._dateAdapter.getDate(this.activeDate),daysInMonth)))}_handleCalendarBodyKeydown(event){const oldActiveDate=this._activeDate,isRtl=this._isRtl();switch(event.keyCode){case keycodes.h:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,isRtl?1:-1);break;case keycodes.l:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,isRtl?-1:1);break;case keycodes.o:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,-4);break;case keycodes.c:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,4);break;case keycodes.g:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,-getActiveOffset(this._dateAdapter,this.activeDate,this.minDate,this.maxDate));break;case keycodes.d:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,24-getActiveOffset(this._dateAdapter,this.activeDate,this.minDate,this.maxDate)-1);break;case keycodes.k:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,event.altKey?-240:-24);break;case keycodes.j:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,event.altKey?240:24);break;case keycodes.e:case keycodes.m:this._yearSelected({value:this._dateAdapter.getYear(this._activeDate),event:event});break;default:return}this._dateAdapter.compareDate(oldActiveDate,this.activeDate)&&this.activeDateChange.emit(this.activeDate),this._focusActiveCell(),event.preventDefault()}_getActiveCell(){return getActiveOffset(this._dateAdapter,this.activeDate,this.minDate,this.maxDate)}_focusActiveCell(){this._matCalendarBody._focusActiveCell()}_createCellForYear(year){const date=this._dateAdapter.createDate(year,0,1),yearName=this._dateAdapter.getYearName(date),cellClasses=this.dateClass?this.dateClass(date,\"multi-year\"):void 0;return new MatCalendarCell(year,yearName,yearName,this._shouldEnableYear(year),cellClasses)}_shouldEnableYear(year){if(null==year||this.maxDate&&year>this._dateAdapter.getYear(this.maxDate)||this.minDate&&year<this._dateAdapter.getYear(this.minDate))return!1;if(!this.dateFilter)return!0;for(let date=this._dateAdapter.createDate(year,0,1);this._dateAdapter.getYear(date)==year;date=this._dateAdapter.addCalendarDays(date,1))if(this.dateFilter(date))return!0;return!1}_isRtl(){return this._dir&&\"rtl\"===this._dir.value}_setSelectedYear(value){if(this._selectedYear=null,value instanceof DateRange){const displayValue=value.start||value.end;displayValue&&(this._selectedYear=this._dateAdapter.getYear(displayValue))}else value&&(this._selectedYear=this._dateAdapter.getYear(value))}}return MatMultiYearView.ɵfac=function(t){return new(t||MatMultiYearView)(core.Qb(core.h),core.Qb(fesm2015_core.c,8),core.Qb(bidi.b,8))},MatMultiYearView.ɵcmp=core.Kb({type:MatMultiYearView,selectors:[[\"mat-multi-year-view\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Lc(datepicker_MatCalendarBody,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._matCalendarBody=_t.first)}},inputs:{activeDate:\"activeDate\",selected:\"selected\",minDate:\"minDate\",maxDate:\"maxDate\",dateFilter:\"dateFilter\",dateClass:\"dateClass\"},outputs:{selectedChange:\"selectedChange\",yearSelected:\"yearSelected\",activeDateChange:\"activeDateChange\"},exportAs:[\"matMultiYearView\"],decls:5,vars:7,consts:[[\"role\",\"presentation\",1,\"mat-calendar-table\"],[1,\"mat-calendar-table-header\"],[\"colspan\",\"4\",1,\"mat-calendar-table-header-divider\"],[\"mat-calendar-body\",\"\",3,\"rows\",\"todayValue\",\"startValue\",\"endValue\",\"numCols\",\"cellAspectRatio\",\"activeCell\",\"selectedValueChange\",\"keydown\"]],template:function(rf,ctx){1&rf&&(core.Wb(0,\"table\",0),core.Wb(1,\"thead\",1),core.Wb(2,\"tr\"),core.Rb(3,\"th\",2),core.Vb(),core.Vb(),core.Wb(4,\"tbody\",3),core.ec(\"selectedValueChange\",function($event){return ctx._yearSelected($event)})(\"keydown\",function($event){return ctx._handleCalendarBodyKeydown($event)}),core.Vb(),core.Vb()),2&rf&&(core.Db(4),core.pc(\"rows\",ctx._years)(\"todayValue\",ctx._todayYear)(\"startValue\",ctx._selectedYear)(\"endValue\",ctx._selectedYear)(\"numCols\",4)(\"cellAspectRatio\",4/7)(\"activeCell\",ctx._getActiveCell()))},directives:[datepicker_MatCalendarBody],encapsulation:2,changeDetection:0}),MatMultiYearView})();function isSameMultiYearView(dateAdapter,date1,date2,minDate,maxDate){const year1=dateAdapter.getYear(date1),year2=dateAdapter.getYear(date2),startingYear=getStartingYear(dateAdapter,minDate,maxDate);return Math.floor((year1-startingYear)/24)===Math.floor((year2-startingYear)/24)}function getActiveOffset(dateAdapter,activeDate,minDate,maxDate){return((dateAdapter.getYear(activeDate)-getStartingYear(dateAdapter,minDate,maxDate))%24+24)%24}function getStartingYear(dateAdapter,minDate,maxDate){let startingYear=0;return maxDate?startingYear=dateAdapter.getYear(maxDate)-24+1:minDate&&(startingYear=dateAdapter.getYear(minDate)),startingYear}let datepicker_MatYearView=(()=>{class MatYearView{constructor(_changeDetectorRef,_dateFormats,_dateAdapter,_dir){this._changeDetectorRef=_changeDetectorRef,this._dateFormats=_dateFormats,this._dateAdapter=_dateAdapter,this._dir=_dir,this._rerenderSubscription=Subscription.a.EMPTY,this.selectedChange=new core.o,this.monthSelected=new core.o,this.activeDateChange=new core.o,this._activeDate=this._dateAdapter.today()}get activeDate(){return this._activeDate}set activeDate(value){let oldActiveDate=this._activeDate;const validDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))||this._dateAdapter.today();this._activeDate=this._dateAdapter.clampDate(validDate,this.minDate,this.maxDate),this._dateAdapter.getYear(oldActiveDate)!==this._dateAdapter.getYear(this._activeDate)&&this._init()}get selected(){return this._selected}set selected(value){this._selected=value instanceof DateRange?value:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)),this._setSelectedMonth(value)}get minDate(){return this._minDate}set minDate(value){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get maxDate(){return this._maxDate}set maxDate(value){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}ngAfterContentInit(){this._rerenderSubscription=this._dateAdapter.localeChanges.pipe(Object(startWith.a)(null)).subscribe(()=>this._init())}ngOnDestroy(){this._rerenderSubscription.unsubscribe()}_monthSelected(event){const month=event.value,normalizedDate=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),month,1);this.monthSelected.emit(normalizedDate);const daysInMonth=this._dateAdapter.getNumDaysInMonth(normalizedDate);this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),month,Math.min(this._dateAdapter.getDate(this.activeDate),daysInMonth)))}_handleCalendarBodyKeydown(event){const oldActiveDate=this._activeDate,isRtl=this._isRtl();switch(event.keyCode){case keycodes.h:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,isRtl?1:-1);break;case keycodes.l:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,isRtl?-1:1);break;case keycodes.o:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,-4);break;case keycodes.c:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,4);break;case keycodes.g:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,-this._dateAdapter.getMonth(this._activeDate));break;case keycodes.d:this.activeDate=this._dateAdapter.addCalendarMonths(this._activeDate,11-this._dateAdapter.getMonth(this._activeDate));break;case keycodes.k:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,event.altKey?-10:-1);break;case keycodes.j:this.activeDate=this._dateAdapter.addCalendarYears(this._activeDate,event.altKey?10:1);break;case keycodes.e:case keycodes.m:this._monthSelected({value:this._dateAdapter.getMonth(this._activeDate),event:event});break;default:return}this._dateAdapter.compareDate(oldActiveDate,this.activeDate)&&this.activeDateChange.emit(this.activeDate),this._focusActiveCell(),event.preventDefault()}_init(){this._setSelectedMonth(this.selected),this._todayMonth=this._getMonthInCurrentYear(this._dateAdapter.today()),this._yearLabel=this._dateAdapter.getYearName(this.activeDate);let monthNames=this._dateAdapter.getMonthNames(\"short\");this._months=[[0,1,2,3],[4,5,6,7],[8,9,10,11]].map(row=>row.map(month=>this._createCellForMonth(month,monthNames[month]))),this._changeDetectorRef.markForCheck()}_focusActiveCell(){this._matCalendarBody._focusActiveCell()}_getMonthInCurrentYear(date){return date&&this._dateAdapter.getYear(date)==this._dateAdapter.getYear(this.activeDate)?this._dateAdapter.getMonth(date):null}_createCellForMonth(month,monthName){const date=this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),month,1),ariaLabel=this._dateAdapter.format(date,this._dateFormats.display.monthYearA11yLabel),cellClasses=this.dateClass?this.dateClass(date,\"year\"):void 0;return new MatCalendarCell(month,monthName.toLocaleUpperCase(),ariaLabel,this._shouldEnableMonth(month),cellClasses)}_shouldEnableMonth(month){const activeYear=this._dateAdapter.getYear(this.activeDate);if(null==month||this._isYearAndMonthAfterMaxDate(activeYear,month)||this._isYearAndMonthBeforeMinDate(activeYear,month))return!1;if(!this.dateFilter)return!0;for(let date=this._dateAdapter.createDate(activeYear,month,1);this._dateAdapter.getMonth(date)==month;date=this._dateAdapter.addCalendarDays(date,1))if(this.dateFilter(date))return!0;return!1}_isYearAndMonthAfterMaxDate(year,month){if(this.maxDate){const maxYear=this._dateAdapter.getYear(this.maxDate),maxMonth=this._dateAdapter.getMonth(this.maxDate);return year>maxYear||year===maxYear&&month>maxMonth}return!1}_isYearAndMonthBeforeMinDate(year,month){if(this.minDate){const minYear=this._dateAdapter.getYear(this.minDate),minMonth=this._dateAdapter.getMonth(this.minDate);return year<minYear||year===minYear&&month<minMonth}return!1}_isRtl(){return this._dir&&\"rtl\"===this._dir.value}_setSelectedMonth(value){this._selectedMonth=value instanceof DateRange?this._getMonthInCurrentYear(value.start)||this._getMonthInCurrentYear(value.end):this._getMonthInCurrentYear(value)}}return MatYearView.ɵfac=function(t){return new(t||MatYearView)(core.Qb(core.h),core.Qb(fesm2015_core.e,8),core.Qb(fesm2015_core.c,8),core.Qb(bidi.b,8))},MatYearView.ɵcmp=core.Kb({type:MatYearView,selectors:[[\"mat-year-view\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Lc(datepicker_MatCalendarBody,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._matCalendarBody=_t.first)}},inputs:{activeDate:\"activeDate\",selected:\"selected\",minDate:\"minDate\",maxDate:\"maxDate\",dateFilter:\"dateFilter\",dateClass:\"dateClass\"},outputs:{selectedChange:\"selectedChange\",monthSelected:\"monthSelected\",activeDateChange:\"activeDateChange\"},exportAs:[\"matYearView\"],decls:5,vars:9,consts:[[\"role\",\"presentation\",1,\"mat-calendar-table\"],[1,\"mat-calendar-table-header\"],[\"colspan\",\"4\",1,\"mat-calendar-table-header-divider\"],[\"mat-calendar-body\",\"\",3,\"label\",\"rows\",\"todayValue\",\"startValue\",\"endValue\",\"labelMinRequiredCells\",\"numCols\",\"cellAspectRatio\",\"activeCell\",\"selectedValueChange\",\"keydown\"]],template:function(rf,ctx){1&rf&&(core.Wb(0,\"table\",0),core.Wb(1,\"thead\",1),core.Wb(2,\"tr\"),core.Rb(3,\"th\",2),core.Vb(),core.Vb(),core.Wb(4,\"tbody\",3),core.ec(\"selectedValueChange\",function($event){return ctx._monthSelected($event)})(\"keydown\",function($event){return ctx._handleCalendarBodyKeydown($event)}),core.Vb(),core.Vb()),2&rf&&(core.Db(4),core.pc(\"label\",ctx._yearLabel)(\"rows\",ctx._months)(\"todayValue\",ctx._todayMonth)(\"startValue\",ctx._selectedMonth)(\"endValue\",ctx._selectedMonth)(\"labelMinRequiredCells\",2)(\"numCols\",4)(\"cellAspectRatio\",4/7)(\"activeCell\",ctx._dateAdapter.getMonth(ctx.activeDate)))},directives:[datepicker_MatCalendarBody],encapsulation:2,changeDetection:0}),MatYearView})(),uniqueId=0,datepicker_MatCalendarHeader=(()=>{class MatCalendarHeader{constructor(_intl,calendar,_dateAdapter,_dateFormats,changeDetectorRef){this._intl=_intl,this.calendar=calendar,this._dateAdapter=_dateAdapter,this._dateFormats=_dateFormats,this._buttonDescriptionId=\"mat-calendar-button-\"+uniqueId++,this.calendar.stateChanges.subscribe(()=>changeDetectorRef.markForCheck())}get periodButtonText(){if(\"month\"==this.calendar.currentView)return this._dateAdapter.format(this.calendar.activeDate,this._dateFormats.display.monthYearLabel).toLocaleUpperCase();if(\"year\"==this.calendar.currentView)return this._dateAdapter.getYearName(this.calendar.activeDate);const minYearOfPage=this._dateAdapter.getYear(this.calendar.activeDate)-getActiveOffset(this._dateAdapter,this.calendar.activeDate,this.calendar.minDate,this.calendar.maxDate),maxYearOfPage=minYearOfPage+24-1,minYearName=this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage,0,1)),maxYearName=this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage,0,1));return this._intl.formatYearRange(minYearName,maxYearName)}get periodButtonLabel(){return\"month\"==this.calendar.currentView?this._intl.switchToMultiYearViewLabel:this._intl.switchToMonthViewLabel}get prevButtonLabel(){return{month:this._intl.prevMonthLabel,year:this._intl.prevYearLabel,\"multi-year\":this._intl.prevMultiYearLabel}[this.calendar.currentView]}get nextButtonLabel(){return{month:this._intl.nextMonthLabel,year:this._intl.nextYearLabel,\"multi-year\":this._intl.nextMultiYearLabel}[this.calendar.currentView]}currentPeriodClicked(){this.calendar.currentView=\"month\"==this.calendar.currentView?\"multi-year\":\"month\"}previousClicked(){this.calendar.activeDate=\"month\"==this.calendar.currentView?this._dateAdapter.addCalendarMonths(this.calendar.activeDate,-1):this._dateAdapter.addCalendarYears(this.calendar.activeDate,\"year\"==this.calendar.currentView?-1:-24)}nextClicked(){this.calendar.activeDate=\"month\"==this.calendar.currentView?this._dateAdapter.addCalendarMonths(this.calendar.activeDate,1):this._dateAdapter.addCalendarYears(this.calendar.activeDate,\"year\"==this.calendar.currentView?1:24)}previousEnabled(){return!this.calendar.minDate||!this.calendar.minDate||!this._isSameView(this.calendar.activeDate,this.calendar.minDate)}nextEnabled(){return!this.calendar.maxDate||!this._isSameView(this.calendar.activeDate,this.calendar.maxDate)}_isSameView(date1,date2){return\"month\"==this.calendar.currentView?this._dateAdapter.getYear(date1)==this._dateAdapter.getYear(date2)&&this._dateAdapter.getMonth(date1)==this._dateAdapter.getMonth(date2):\"year\"==this.calendar.currentView?this._dateAdapter.getYear(date1)==this._dateAdapter.getYear(date2):isSameMultiYearView(this._dateAdapter,date1,date2,this.calendar.minDate,this.calendar.maxDate)}}return MatCalendarHeader.ɵfac=function(t){return new(t||MatCalendarHeader)(core.Qb(datepicker_MatDatepickerIntl),core.Qb(Object(core.W)(()=>datepicker_MatCalendar)),core.Qb(fesm2015_core.c,8),core.Qb(fesm2015_core.e,8),core.Qb(core.h))},MatCalendarHeader.ɵcmp=core.Kb({type:MatCalendarHeader,selectors:[[\"mat-calendar-header\"]],exportAs:[\"matCalendarHeader\"],ngContentSelectors:datepicker_c1,decls:10,vars:10,consts:[[1,\"mat-calendar-header\"],[1,\"mat-calendar-controls\"],[\"mat-button\",\"\",\"type\",\"button\",\"cdkAriaLive\",\"polite\",1,\"mat-calendar-period-button\",3,\"click\"],[1,\"mat-calendar-arrow\"],[1,\"mat-calendar-spacer\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-calendar-previous-button\",3,\"disabled\",\"click\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-calendar-next-button\",3,\"disabled\",\"click\"]],template:function(rf,ctx){1&rf&&(core.oc(),core.Wb(0,\"div\",0),core.Wb(1,\"div\",1),core.Wb(2,\"button\",2),core.ec(\"click\",function(){return ctx.currentPeriodClicked()}),core.Wb(3,\"span\"),core.Ic(4),core.Vb(),core.Rb(5,\"div\",3),core.Vb(),core.Rb(6,\"div\",4),core.nc(7),core.Wb(8,\"button\",5),core.ec(\"click\",function(){return ctx.previousClicked()}),core.Vb(),core.Wb(9,\"button\",6),core.ec(\"click\",function(){return ctx.nextClicked()}),core.Vb(),core.Vb(),core.Vb()),2&rf&&(core.Db(2),core.Eb(\"aria-label\",ctx.periodButtonLabel)(\"aria-describedby\",ctx._buttonDescriptionId),core.Db(1),core.Eb(\"id\",ctx._buttonDescriptionId),core.Db(1),core.Jc(ctx.periodButtonText),core.Db(1),core.Ib(\"mat-calendar-invert\",\"month\"!==ctx.calendar.currentView),core.Db(3),core.pc(\"disabled\",!ctx.previousEnabled()),core.Eb(\"aria-label\",ctx.prevButtonLabel),core.Db(1),core.pc(\"disabled\",!ctx.nextEnabled()),core.Eb(\"aria-label\",ctx.nextButtonLabel))},directives:[fesm2015_button.b,a11y.d],encapsulation:2,changeDetection:0}),MatCalendarHeader})(),datepicker_MatCalendar=(()=>{class MatCalendar{constructor(_intl,_dateAdapter,_dateFormats,_changeDetectorRef){this._dateAdapter=_dateAdapter,this._dateFormats=_dateFormats,this._changeDetectorRef=_changeDetectorRef,this._moveFocusOnNextTick=!1,this.startView=\"month\",this.selectedChange=new core.o,this.yearSelected=new core.o,this.monthSelected=new core.o,this.viewChanged=new core.o(!0),this._userSelection=new core.o,this.stateChanges=new Subject.a,this._intlChanges=_intl.changes.subscribe(()=>{_changeDetectorRef.markForCheck(),this.stateChanges.next()})}get startAt(){return this._startAt}set startAt(value){this._startAt=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get selected(){return this._selected}set selected(value){this._selected=value instanceof DateRange?value:this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get minDate(){return this._minDate}set minDate(value){this._minDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get maxDate(){return this._maxDate}set maxDate(value){this._maxDate=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get activeDate(){return this._clampedActiveDate}set activeDate(value){this._clampedActiveDate=this._dateAdapter.clampDate(value,this.minDate,this.maxDate),this.stateChanges.next(),this._changeDetectorRef.markForCheck()}get currentView(){return this._currentView}set currentView(value){const viewChangedResult=this._currentView!==value?value:null;this._currentView=value,this._moveFocusOnNextTick=!0,this._changeDetectorRef.markForCheck(),viewChangedResult&&this.viewChanged.emit(viewChangedResult)}ngAfterContentInit(){this._calendarHeaderPortal=new fesm2015_portal.d(this.headerComponent||datepicker_MatCalendarHeader),this.activeDate=this.startAt||this._dateAdapter.today(),this._currentView=this.startView}ngAfterViewChecked(){this._moveFocusOnNextTick&&(this._moveFocusOnNextTick=!1,this.focusActiveCell())}ngOnDestroy(){this._intlChanges.unsubscribe(),this.stateChanges.complete()}ngOnChanges(changes){const change=changes.minDate||changes.maxDate||changes.dateFilter;if(change&&!change.firstChange){const view=this._getCurrentViewComponent();view&&(this._changeDetectorRef.detectChanges(),view._init())}this.stateChanges.next()}focusActiveCell(){this._getCurrentViewComponent()._focusActiveCell(!1)}updateTodaysDate(){const currentView=this.currentView;let view;view=\"month\"===currentView?this.monthView:\"year\"===currentView?this.yearView:this.multiYearView,view._init()}_dateSelected(event){const date=event.value;(this.selected instanceof DateRange||date&&!this._dateAdapter.sameDate(date,this.selected))&&this.selectedChange.emit(date),this._userSelection.emit(event)}_yearSelectedInMultiYearView(normalizedYear){this.yearSelected.emit(normalizedYear)}_monthSelectedInYearView(normalizedMonth){this.monthSelected.emit(normalizedMonth)}_goToDateInView(date,view){this.activeDate=date,this.currentView=view}_getCurrentViewComponent(){return this.monthView||this.yearView||this.multiYearView}}return MatCalendar.ɵfac=function(t){return new(t||MatCalendar)(core.Qb(datepicker_MatDatepickerIntl),core.Qb(fesm2015_core.c,8),core.Qb(fesm2015_core.e,8),core.Qb(core.h))},MatCalendar.ɵcmp=core.Kb({type:MatCalendar,selectors:[[\"mat-calendar\"]],viewQuery:function(rf,ctx){if(1&rf&&(core.Lc(datepicker_MatMonthView,1),core.Lc(datepicker_MatYearView,1),core.Lc(datepicker_MatMultiYearView,1)),2&rf){let _t;core.uc(_t=core.fc())&&(ctx.monthView=_t.first),core.uc(_t=core.fc())&&(ctx.yearView=_t.first),core.uc(_t=core.fc())&&(ctx.multiYearView=_t.first)}},hostAttrs:[1,\"mat-calendar\"],inputs:{startView:\"startView\",startAt:\"startAt\",selected:\"selected\",minDate:\"minDate\",maxDate:\"maxDate\",headerComponent:\"headerComponent\",dateFilter:\"dateFilter\",dateClass:\"dateClass\",comparisonStart:\"comparisonStart\",comparisonEnd:\"comparisonEnd\"},outputs:{selectedChange:\"selectedChange\",yearSelected:\"yearSelected\",monthSelected:\"monthSelected\",viewChanged:\"viewChanged\",_userSelection:\"_userSelection\"},exportAs:[\"matCalendar\"],features:[core.Cb([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]),core.Bb],decls:5,vars:5,consts:[[3,\"cdkPortalOutlet\"],[\"cdkMonitorSubtreeFocus\",\"\",\"tabindex\",\"-1\",1,\"mat-calendar-content\",3,\"ngSwitch\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"comparisonStart\",\"comparisonEnd\",\"activeDateChange\",\"_userSelection\",4,\"ngSwitchCase\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"activeDateChange\",\"monthSelected\",\"selectedChange\",4,\"ngSwitchCase\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"activeDateChange\",\"yearSelected\",\"selectedChange\",4,\"ngSwitchCase\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"comparisonStart\",\"comparisonEnd\",\"activeDateChange\",\"_userSelection\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"activeDateChange\",\"monthSelected\",\"selectedChange\"],[3,\"activeDate\",\"selected\",\"dateFilter\",\"maxDate\",\"minDate\",\"dateClass\",\"activeDateChange\",\"yearSelected\",\"selectedChange\"]],template:function(rf,ctx){1&rf&&(core.Gc(0,MatCalendar_ng_template_0_Template,0,0,\"ng-template\",0),core.Wb(1,\"div\",1),core.Gc(2,MatCalendar_mat_month_view_2_Template,1,8,\"mat-month-view\",2),core.Gc(3,MatCalendar_mat_year_view_3_Template,1,6,\"mat-year-view\",3),core.Gc(4,MatCalendar_mat_multi_year_view_4_Template,1,6,\"mat-multi-year-view\",4),core.Vb()),2&rf&&(core.pc(\"cdkPortalOutlet\",ctx._calendarHeaderPortal),core.Db(1),core.pc(\"ngSwitch\",ctx.currentView),core.Db(1),core.pc(\"ngSwitchCase\",\"month\"),core.Db(1),core.pc(\"ngSwitchCase\",\"year\"),core.Db(1),core.pc(\"ngSwitchCase\",\"multi-year\"))},directives:[fesm2015_portal.c,a11y.e,common.o,common.p,datepicker_MatMonthView,datepicker_MatYearView,datepicker_MatMultiYearView],styles:['.mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\"\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\"\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n'],encapsulation:2,changeDetection:0}),MatCalendar})();const matDatepickerAnimations={transformPanel:Object(animations.o)(\"transformPanel\",[Object(animations.l)(\"void\",Object(animations.m)({opacity:0,transform:\"scale(1, 0.8)\"})),Object(animations.n)(\"void => enter\",Object(animations.e)(\"120ms cubic-bezier(0, 0, 0.2, 1)\",Object(animations.m)({opacity:1,transform:\"scale(1, 1)\"}))),Object(animations.n)(\"* => void\",Object(animations.e)(\"100ms linear\",Object(animations.m)({opacity:0})))]),fadeInCalendar:Object(animations.o)(\"fadeInCalendar\",[Object(animations.l)(\"void\",Object(animations.m)({opacity:0})),Object(animations.l)(\"enter\",Object(animations.m)({opacity:1})),Object(animations.n)(\"void => *\",Object(animations.e)(\"120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\"))])};let datepickerUid=0;const MAT_DATEPICKER_SCROLL_STRATEGY=new core.s(\"mat-datepicker-scroll-strategy\"),MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER={provide:MAT_DATEPICKER_SCROLL_STRATEGY,deps:[overlay.c],useFactory:function(overlay){return()=>overlay.scrollStrategies.reposition()}};class MatDatepickerContentBase{constructor(_elementRef){this._elementRef=_elementRef}}const _MatDatepickerContentMixinBase=Object(fesm2015_core.v)(MatDatepickerContentBase);let datepicker_MatDatepickerContent=(()=>{class MatDatepickerContent extends _MatDatepickerContentMixinBase{constructor(elementRef,_changeDetectorRef,_globalModel,_dateAdapter,_rangeSelectionStrategy,intl){super(elementRef),this._changeDetectorRef=_changeDetectorRef,this._globalModel=_globalModel,this._dateAdapter=_dateAdapter,this._rangeSelectionStrategy=_rangeSelectionStrategy,this._subscriptions=new Subscription.a,this._animationState=\"enter\",this._animationDone=new Subject.a,this._actionsPortal=null,this._closeButtonText=(null==intl?void 0:intl.closeCalendarLabel)||\"Close calendar\"}ngOnInit(){this._model=this._actionsPortal?this._globalModel.clone():this._globalModel}ngAfterViewInit(){this._subscriptions.add(this.datepicker.stateChanges.subscribe(()=>{this._changeDetectorRef.markForCheck()})),this._calendar.focusActiveCell()}ngOnDestroy(){this._subscriptions.unsubscribe(),this._animationDone.complete()}_handleUserSelection(event){const selection=this._model.selection,value=event.value,isRange=selection instanceof DateRange;if(isRange&&this._rangeSelectionStrategy){const newSelection=this._rangeSelectionStrategy.selectionFinished(value,selection,event.event);this._model.updateSelection(newSelection,this)}else!value||!isRange&&this._dateAdapter.sameDate(value,selection)||this._model.add(value);this._model&&!this._model.isComplete()||this._actionsPortal||this.datepicker.close()}_startExitAnimation(){this._animationState=\"void\",this._changeDetectorRef.markForCheck()}_getSelected(){return this._model.selection}_applyPendingSelection(){this._model!==this._globalModel&&this._globalModel.updateSelection(this._model.selection,this)}}return MatDatepickerContent.ɵfac=function(t){return new(t||MatDatepickerContent)(core.Qb(core.l),core.Qb(core.h),core.Qb(datepicker_MatDateSelectionModel),core.Qb(fesm2015_core.c),core.Qb(MAT_DATE_RANGE_SELECTION_STRATEGY,8),core.Qb(datepicker_MatDatepickerIntl))},MatDatepickerContent.ɵcmp=core.Kb({type:MatDatepickerContent,selectors:[[\"mat-datepicker-content\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Lc(datepicker_MatCalendar,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._calendar=_t.first)}},hostAttrs:[1,\"mat-datepicker-content\"],hostVars:3,hostBindings:function(rf,ctx){1&rf&&core.Ec(\"@transformPanel.done\",function(){return ctx._animationDone.next()}),2&rf&&(core.Fc(\"@transformPanel\",ctx._animationState),core.Ib(\"mat-datepicker-content-touch\",ctx.datepicker.touchUi))},inputs:{color:\"color\"},exportAs:[\"matDatepickerContent\"],features:[core.Ab],decls:5,vars:20,consts:[[\"cdkTrapFocus\",\"\",1,\"mat-datepicker-content-container\"],[3,\"id\",\"ngClass\",\"startAt\",\"startView\",\"minDate\",\"maxDate\",\"dateFilter\",\"headerComponent\",\"selected\",\"dateClass\",\"comparisonStart\",\"comparisonEnd\",\"yearSelected\",\"monthSelected\",\"viewChanged\",\"_userSelection\"],[3,\"cdkPortalOutlet\"],[\"type\",\"button\",\"mat-raised-button\",\"\",1,\"mat-datepicker-close-button\",3,\"color\",\"focus\",\"blur\",\"click\"]],template:function(rf,ctx){1&rf&&(core.Wb(0,\"div\",0),core.Wb(1,\"mat-calendar\",1),core.ec(\"yearSelected\",function($event){return ctx.datepicker._selectYear($event)})(\"monthSelected\",function($event){return ctx.datepicker._selectMonth($event)})(\"viewChanged\",function($event){return ctx.datepicker._viewChanged($event)})(\"_userSelection\",function($event){return ctx._handleUserSelection($event)}),core.Vb(),core.Gc(2,MatDatepickerContent_ng_template_2_Template,0,0,\"ng-template\",2),core.Wb(3,\"button\",3),core.ec(\"focus\",function(){return ctx._closeButtonFocused=!0})(\"blur\",function(){return ctx._closeButtonFocused=!1})(\"click\",function(){return ctx.datepicker.close()}),core.Ic(4),core.Vb(),core.Vb()),2&rf&&(core.Ib(\"mat-datepicker-content-container-with-actions\",ctx._actionsPortal),core.Db(1),core.pc(\"id\",ctx.datepicker.id)(\"ngClass\",ctx.datepicker.panelClass)(\"startAt\",ctx.datepicker.startAt)(\"startView\",ctx.datepicker.startView)(\"minDate\",ctx.datepicker._getMinDate())(\"maxDate\",ctx.datepicker._getMaxDate())(\"dateFilter\",ctx.datepicker._getDateFilter())(\"headerComponent\",ctx.datepicker.calendarHeaderComponent)(\"selected\",ctx._getSelected())(\"dateClass\",ctx.datepicker.dateClass)(\"comparisonStart\",ctx.comparisonStart)(\"comparisonEnd\",ctx.comparisonEnd)(\"@fadeInCalendar\",\"enter\"),core.Db(1),core.pc(\"cdkPortalOutlet\",ctx._actionsPortal),core.Db(1),core.Ib(\"cdk-visually-hidden\",!ctx._closeButtonFocused),core.pc(\"color\",ctx.color||\"primary\"),core.Db(1),core.Jc(ctx._closeButtonText))},directives:[a11y.f,datepicker_MatCalendar,common.k,fesm2015_portal.c,fesm2015_button.b],styles:[\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"],encapsulation:2,data:{animation:[matDatepickerAnimations.transformPanel,matDatepickerAnimations.fadeInCalendar]},changeDetection:0}),MatDatepickerContent})(),datepicker_MatDatepickerBase=(()=>{class MatDatepickerBase{constructor(_dialog,_overlay,_ngZone,_viewContainerRef,scrollStrategy,_dateAdapter,_dir,_document,_model){this._dialog=_dialog,this._overlay=_overlay,this._ngZone=_ngZone,this._viewContainerRef=_viewContainerRef,this._dateAdapter=_dateAdapter,this._dir=_dir,this._document=_document,this._model=_model,this._inputStateChanges=Subscription.a.EMPTY,this.startView=\"month\",this._touchUi=!1,this.xPosition=\"start\",this.yPosition=\"below\",this.yearSelected=new core.o,this.monthSelected=new core.o,this.viewChanged=new core.o(!0),this.openedStream=new core.o,this.closedStream=new core.o,this._opened=!1,this.id=\"mat-datepicker-\"+datepickerUid++,this._focusedElementBeforeOpen=null,this._backdropHarnessClass=`${this.id}-backdrop`,this.stateChanges=new Subject.a,this._scrollStrategy=scrollStrategy}get startAt(){return this._startAt||(this.datepickerInput?this.datepickerInput.getStartValue():null)}set startAt(value){this._startAt=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value))}get color(){return this._color||(this.datepickerInput?this.datepickerInput.getThemePalette():void 0)}set color(value){this._color=value}get touchUi(){return this._touchUi}set touchUi(value){this._touchUi=Object(coercion.c)(value)}get disabled(){return void 0===this._disabled&&this.datepickerInput?this.datepickerInput.disabled:!!this._disabled}set disabled(value){const newValue=Object(coercion.c)(value);newValue!==this._disabled&&(this._disabled=newValue,this.stateChanges.next(void 0))}get panelClass(){return this._panelClass}set panelClass(value){this._panelClass=Object(coercion.g)(value)}get opened(){return this._opened}set opened(value){Object(coercion.c)(value)?this.open():this.close()}_getMinDate(){return this.datepickerInput&&this.datepickerInput.min}_getMaxDate(){return this.datepickerInput&&this.datepickerInput.max}_getDateFilter(){return this.datepickerInput&&this.datepickerInput.dateFilter}ngOnChanges(changes){const positionChange=changes.xPosition||changes.yPosition;positionChange&&!positionChange.firstChange&&this._popupRef&&(this._setConnectedPositions(this._popupRef.getConfig().positionStrategy),this.opened&&this._popupRef.updatePosition()),this.stateChanges.next(void 0)}ngOnDestroy(){this._destroyPopup(),this.close(),this._inputStateChanges.unsubscribe(),this.stateChanges.complete()}select(date){this._model.add(date)}_selectYear(normalizedYear){this.yearSelected.emit(normalizedYear)}_selectMonth(normalizedMonth){this.monthSelected.emit(normalizedMonth)}_viewChanged(view){this.viewChanged.emit(view)}registerInput(input){return this._inputStateChanges.unsubscribe(),this.datepickerInput=input,this._inputStateChanges=input.stateChanges.subscribe(()=>this.stateChanges.next(void 0)),this._model}registerActions(portal){this._actionsPortal=portal}removeActions(portal){portal===this._actionsPortal&&(this._actionsPortal=null)}open(){this._opened||this.disabled||(this._document&&(this._focusedElementBeforeOpen=this._document.activeElement),this.touchUi?this._openAsDialog():this._openAsPopup(),this._opened=!0,this.openedStream.emit())}close(){if(!this._opened)return;if(this._popupComponentRef&&this._popupRef){const instance=this._popupComponentRef.instance;instance._startExitAnimation(),instance._animationDone.pipe(Object(take.a)(1)).subscribe(()=>this._destroyPopup())}this._dialogRef&&(this._dialogRef.close(),this._dialogRef=null);const completeClose=()=>{this._opened&&(this._opened=!1,this.closedStream.emit(),this._focusedElementBeforeOpen=null)};this._focusedElementBeforeOpen&&\"function\"==typeof this._focusedElementBeforeOpen.focus?(this._focusedElementBeforeOpen.focus(),setTimeout(completeClose)):completeClose()}_applyPendingSelection(){var _a,_b;const instance=(null===(_a=this._popupComponentRef)||void 0===_a?void 0:_a.instance)||(null===(_b=this._dialogRef)||void 0===_b?void 0:_b.componentInstance);null==instance||instance._applyPendingSelection()}_openAsDialog(){this._dialogRef&&this._dialogRef.close(),this._dialogRef=this._dialog.open(datepicker_MatDatepickerContent,{direction:this._dir?this._dir.value:\"ltr\",viewContainerRef:this._viewContainerRef,panelClass:\"mat-datepicker-dialog\",hasBackdrop:!0,disableClose:!1,backdropClass:[\"cdk-overlay-dark-backdrop\",this._backdropHarnessClass],width:\"\",height:\"\",minWidth:\"\",minHeight:\"\",maxWidth:\"80vw\",maxHeight:\"\",position:{},autoFocus:!1,restoreFocus:!1}),this._dialogRef.afterClosed().subscribe(()=>this.close()),this._forwardContentValues(this._dialogRef.componentInstance)}_openAsPopup(){const portal=new fesm2015_portal.d(datepicker_MatDatepickerContent,this._viewContainerRef);this._destroyPopup(),this._createPopup(),this._popupComponentRef=this._popupRef.attach(portal),this._forwardContentValues(this._popupComponentRef.instance),this._ngZone.onStable.pipe(Object(take.a)(1)).subscribe(()=>{this._popupRef.updatePosition()})}_forwardContentValues(instance){instance.datepicker=this,instance.color=this.color,instance._actionsPortal=this._actionsPortal}_createPopup(){const positionStrategy=this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn(\".mat-datepicker-content\").withFlexibleDimensions(!1).withViewportMargin(8).withLockedPosition(),overlayConfig=new overlay.d({positionStrategy:this._setConnectedPositions(positionStrategy),hasBackdrop:!0,backdropClass:[\"mat-overlay-transparent-backdrop\",this._backdropHarnessClass],direction:this._dir,scrollStrategy:this._scrollStrategy(),panelClass:\"mat-datepicker-popup\"});this._popupRef=this._overlay.create(overlayConfig),this._popupRef.overlayElement.setAttribute(\"role\",\"dialog\"),Object(merge.a)(this._popupRef.backdropClick(),this._popupRef.detachments(),this._popupRef.keydownEvents().pipe(Object(filter.a)(event=>event.keyCode===keycodes.f&&!Object(keycodes.r)(event)||this.datepickerInput&&Object(keycodes.r)(event,\"altKey\")&&event.keyCode===keycodes.o))).subscribe(event=>{event&&event.preventDefault(),this.close()})}_destroyPopup(){this._popupRef&&(this._popupRef.dispose(),this._popupRef=this._popupComponentRef=null)}_setConnectedPositions(strategy){const primaryX=\"end\"===this.xPosition?\"end\":\"start\",secondaryX=\"start\"===primaryX?\"end\":\"start\",primaryY=\"above\"===this.yPosition?\"bottom\":\"top\",secondaryY=\"top\"===primaryY?\"bottom\":\"top\";return strategy.withPositions([{originX:primaryX,originY:secondaryY,overlayX:primaryX,overlayY:primaryY},{originX:primaryX,originY:primaryY,overlayX:primaryX,overlayY:secondaryY},{originX:secondaryX,originY:secondaryY,overlayX:secondaryX,overlayY:primaryY},{originX:secondaryX,originY:primaryY,overlayX:secondaryX,overlayY:secondaryY}])}}return MatDatepickerBase.ɵfac=function(t){return new(t||MatDatepickerBase)(core.Qb(fesm2015_dialog.b),core.Qb(overlay.c),core.Qb(core.B),core.Qb(core.S),core.Qb(MAT_DATEPICKER_SCROLL_STRATEGY),core.Qb(fesm2015_core.c,8),core.Qb(bidi.b,8),core.Qb(common.d,8),core.Qb(datepicker_MatDateSelectionModel))},MatDatepickerBase.ɵdir=core.Lb({type:MatDatepickerBase,inputs:{startView:\"startView\",xPosition:\"xPosition\",yPosition:\"yPosition\",startAt:\"startAt\",color:\"color\",touchUi:\"touchUi\",disabled:\"disabled\",panelClass:\"panelClass\",opened:\"opened\",calendarHeaderComponent:\"calendarHeaderComponent\",dateClass:\"dateClass\"},outputs:{yearSelected:\"yearSelected\",monthSelected:\"monthSelected\",viewChanged:\"viewChanged\",openedStream:\"opened\",closedStream:\"closed\"},features:[core.Bb]}),MatDatepickerBase})(),datepicker_MatDatepicker=(()=>{class MatDatepicker extends datepicker_MatDatepickerBase{}return MatDatepicker.ɵfac=function(t){return ɵMatDatepicker_BaseFactory(t||MatDatepicker)},MatDatepicker.ɵcmp=core.Kb({type:MatDatepicker,selectors:[[\"mat-datepicker\"]],exportAs:[\"matDatepicker\"],features:[core.Cb([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,{provide:datepicker_MatDatepickerBase,useExisting:MatDatepicker}]),core.Ab],decls:0,vars:0,template:function(rf,ctx){},encapsulation:2,changeDetection:0}),MatDatepicker})();const ɵMatDatepicker_BaseFactory=core.Yb(datepicker_MatDatepicker);class MatDatepickerInputEvent{constructor(target,targetElement){this.target=target,this.targetElement=targetElement,this.value=this.target.value}}let datepicker_MatDatepickerInputBase=(()=>{class MatDatepickerInputBase{constructor(_elementRef,_dateAdapter,_dateFormats){this._elementRef=_elementRef,this._dateAdapter=_dateAdapter,this._dateFormats=_dateFormats,this.dateChange=new core.o,this.dateInput=new core.o,this.stateChanges=new Subject.a,this._onTouched=()=>{},this._validatorOnChange=()=>{},this._cvaOnChange=()=>{},this._valueChangesSubscription=Subscription.a.EMPTY,this._localeSubscription=Subscription.a.EMPTY,this._parseValidator=()=>this._lastValueValid?null:{matDatepickerParse:{text:this._elementRef.nativeElement.value}},this._filterValidator=control=>{const controlValue=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));return!controlValue||this._matchesFilter(controlValue)?null:{matDatepickerFilter:!0}},this._minValidator=control=>{const controlValue=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value)),min=this._getMinDate();return!min||!controlValue||this._dateAdapter.compareDate(min,controlValue)<=0?null:{matDatepickerMin:{min:min,actual:controlValue}}},this._maxValidator=control=>{const controlValue=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value)),max=this._getMaxDate();return!max||!controlValue||this._dateAdapter.compareDate(max,controlValue)>=0?null:{matDatepickerMax:{max:max,actual:controlValue}}},this._lastValueValid=!1,this._localeSubscription=_dateAdapter.localeChanges.subscribe(()=>{this._assignValueProgrammatically(this.value)})}get value(){return this._model?this._getValueFromModel(this._model.selection):this._pendingValue}set value(value){this._assignValueProgrammatically(value)}get disabled(){return!!this._disabled||this._parentDisabled()}set disabled(value){const newValue=Object(coercion.c)(value),element=this._elementRef.nativeElement;this._disabled!==newValue&&(this._disabled=newValue,this.stateChanges.next(void 0)),newValue&&this._isInitialized&&element.blur&&element.blur()}_getValidators(){return[this._parseValidator,this._minValidator,this._maxValidator,this._filterValidator]}_registerModel(model){this._model=model,this._valueChangesSubscription.unsubscribe(),this._pendingValue&&this._assignValue(this._pendingValue),this._valueChangesSubscription=this._model.selectionChanged.subscribe(event=>{if(this._shouldHandleChangeEvent(event)){const value=this._getValueFromModel(event.selection);this._lastValueValid=this._isValidValue(value),this._cvaOnChange(value),this._onTouched(),this._formatValue(value),this.dateInput.emit(new MatDatepickerInputEvent(this,this._elementRef.nativeElement)),this.dateChange.emit(new MatDatepickerInputEvent(this,this._elementRef.nativeElement))}})}ngAfterViewInit(){this._isInitialized=!0}ngOnChanges(changes){(function(changes,adapter){const keys=Object.keys(changes);for(let key of keys){const{previousValue:previousValue,currentValue:currentValue}=changes[key];if(!adapter.isDateInstance(previousValue)||!adapter.isDateInstance(currentValue))return!0;if(!adapter.sameDate(previousValue,currentValue))return!0}return!1})(changes,this._dateAdapter)&&this.stateChanges.next(void 0)}ngOnDestroy(){this._valueChangesSubscription.unsubscribe(),this._localeSubscription.unsubscribe(),this.stateChanges.complete()}registerOnValidatorChange(fn){this._validatorOnChange=fn}validate(c){return this._validator?this._validator(c):null}writeValue(value){this._assignValueProgrammatically(value)}registerOnChange(fn){this._cvaOnChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_onKeydown(event){event.altKey&&event.keyCode===keycodes.c&&!this._elementRef.nativeElement.readOnly&&(this._openPopup(),event.preventDefault())}_onInput(value){const lastValueWasValid=this._lastValueValid;let date=this._dateAdapter.parse(value,this._dateFormats.parse.dateInput);this._lastValueValid=this._isValidValue(date),date=this._dateAdapter.getValidDateOrNull(date),this._dateAdapter.sameDate(date,this.value)?(value&&!this.value&&this._cvaOnChange(date),lastValueWasValid!==this._lastValueValid&&this._validatorOnChange()):(this._assignValue(date),this._cvaOnChange(date),this.dateInput.emit(new MatDatepickerInputEvent(this,this._elementRef.nativeElement)))}_onChange(){this.dateChange.emit(new MatDatepickerInputEvent(this,this._elementRef.nativeElement))}_onBlur(){this.value&&this._formatValue(this.value),this._onTouched()}_formatValue(value){this._elementRef.nativeElement.value=value?this._dateAdapter.format(value,this._dateFormats.display.dateInput):\"\"}_assignValue(value){this._model?(this._assignValueToModel(value),this._pendingValue=null):this._pendingValue=value}_isValidValue(value){return!value||this._dateAdapter.isValid(value)}_parentDisabled(){return!1}_assignValueProgrammatically(value){value=this._dateAdapter.deserialize(value),this._lastValueValid=this._isValidValue(value),value=this._dateAdapter.getValidDateOrNull(value),this._assignValue(value),this._formatValue(value)}_matchesFilter(value){const filter=this._getDateFilter();return!filter||filter(value)}}return MatDatepickerInputBase.ɵfac=function(t){return new(t||MatDatepickerInputBase)(core.Qb(core.l),core.Qb(fesm2015_core.c,8),core.Qb(fesm2015_core.e,8))},MatDatepickerInputBase.ɵdir=core.Lb({type:MatDatepickerInputBase,inputs:{value:\"value\",disabled:\"disabled\"},outputs:{dateChange:\"dateChange\",dateInput:\"dateInput\"},features:[core.Bb]}),MatDatepickerInputBase})();const MAT_DATEPICKER_VALUE_ACCESSOR={provide:fesm2015_forms.k,useExisting:Object(core.W)(()=>datepicker_MatDatepickerInput),multi:!0},MAT_DATEPICKER_VALIDATORS={provide:fesm2015_forms.j,useExisting:Object(core.W)(()=>datepicker_MatDatepickerInput),multi:!0};let datepicker_MatDatepickerInput=(()=>{class MatDatepickerInput extends datepicker_MatDatepickerInputBase{constructor(elementRef,dateAdapter,dateFormats,_formField){super(elementRef,dateAdapter,dateFormats),this._formField=_formField,this._closedSubscription=Subscription.a.EMPTY,this._validator=fesm2015_forms.t.compose(super._getValidators())}set matDatepicker(datepicker){datepicker&&(this._datepicker=datepicker,this._closedSubscription=datepicker.closedStream.subscribe(()=>this._onTouched()),this._registerModel(datepicker.registerInput(this)))}get min(){return this._min}set min(value){const validValue=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));this._dateAdapter.sameDate(validValue,this._min)||(this._min=validValue,this._validatorOnChange())}get max(){return this._max}set max(value){const validValue=this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));this._dateAdapter.sameDate(validValue,this._max)||(this._max=validValue,this._validatorOnChange())}get dateFilter(){return this._dateFilter}set dateFilter(value){const wasMatchingValue=this._matchesFilter(this.value);this._dateFilter=value,this._matchesFilter(this.value)!==wasMatchingValue&&this._validatorOnChange()}getConnectedOverlayOrigin(){return this._formField?this._formField.getConnectedOverlayOrigin():this._elementRef}getThemePalette(){return this._formField?this._formField.color:void 0}getStartValue(){return this.value}ngOnDestroy(){super.ngOnDestroy(),this._closedSubscription.unsubscribe()}_openPopup(){this._datepicker&&this._datepicker.open()}_getValueFromModel(modelValue){return modelValue}_assignValueToModel(value){this._model&&this._model.updateSelection(value,this)}_getMinDate(){return this._min}_getMaxDate(){return this._max}_getDateFilter(){return this._dateFilter}_shouldHandleChangeEvent(event){return event.source!==this}}return MatDatepickerInput.ɵfac=function(t){return new(t||MatDatepickerInput)(core.Qb(core.l),core.Qb(fesm2015_core.c,8),core.Qb(fesm2015_core.e,8),core.Qb(form_field.a,8))},MatDatepickerInput.ɵdir=core.Lb({type:MatDatepickerInput,selectors:[[\"input\",\"matDatepicker\",\"\"]],hostAttrs:[1,\"mat-datepicker-input\"],hostVars:6,hostBindings:function(rf,ctx){1&rf&&core.ec(\"input\",function($event){return ctx._onInput($event.target.value)})(\"change\",function(){return ctx._onChange()})(\"blur\",function(){return ctx._onBlur()})(\"keydown\",function($event){return ctx._onKeydown($event)}),2&rf&&(core.Zb(\"disabled\",ctx.disabled),core.Eb(\"aria-haspopup\",ctx._datepicker?\"dialog\":null)(\"aria-owns\",(null==ctx._datepicker?null:ctx._datepicker.opened)&&ctx._datepicker.id||null)(\"min\",ctx.min?ctx._dateAdapter.toIso8601(ctx.min):null)(\"max\",ctx.max?ctx._dateAdapter.toIso8601(ctx.max):null)(\"data-mat-calendar\",ctx._datepicker?ctx._datepicker.id:null))},inputs:{matDatepicker:\"matDatepicker\",min:\"min\",max:\"max\",dateFilter:[\"matDatepickerFilter\",\"dateFilter\"]},exportAs:[\"matDatepickerInput\"],features:[core.Cb([MAT_DATEPICKER_VALUE_ACCESSOR,MAT_DATEPICKER_VALIDATORS,{provide:input.a,useExisting:MatDatepickerInput}]),core.Ab]}),MatDatepickerInput})(),datepicker_MatDatepickerToggleIcon=(()=>{class MatDatepickerToggleIcon{}return MatDatepickerToggleIcon.ɵfac=function(t){return new(t||MatDatepickerToggleIcon)},MatDatepickerToggleIcon.ɵdir=core.Lb({type:MatDatepickerToggleIcon,selectors:[[\"\",\"matDatepickerToggleIcon\",\"\"]]}),MatDatepickerToggleIcon})(),datepicker_MatDatepickerToggle=(()=>{class MatDatepickerToggle{constructor(_intl,_changeDetectorRef,defaultTabIndex){this._intl=_intl,this._changeDetectorRef=_changeDetectorRef,this._stateChanges=Subscription.a.EMPTY;const parsedTabIndex=Number(defaultTabIndex);this.tabIndex=parsedTabIndex||0===parsedTabIndex?parsedTabIndex:null}get disabled(){return void 0===this._disabled&&this.datepicker?this.datepicker.disabled:!!this._disabled}set disabled(value){this._disabled=Object(coercion.c)(value)}ngOnChanges(changes){changes.datepicker&&this._watchStateChanges()}ngOnDestroy(){this._stateChanges.unsubscribe()}ngAfterContentInit(){this._watchStateChanges()}_open(event){this.datepicker&&!this.disabled&&(this.datepicker.open(),event.stopPropagation())}_watchStateChanges(){const datepickerStateChanged=this.datepicker?this.datepicker.stateChanges:Object(of.a)(),inputStateChanged=this.datepicker&&this.datepicker.datepickerInput?this.datepicker.datepickerInput.stateChanges:Object(of.a)(),datepickerToggled=this.datepicker?Object(merge.a)(this.datepicker.openedStream,this.datepicker.closedStream):Object(of.a)();this._stateChanges.unsubscribe(),this._stateChanges=Object(merge.a)(this._intl.changes,datepickerStateChanged,inputStateChanged,datepickerToggled).subscribe(()=>this._changeDetectorRef.markForCheck())}}return MatDatepickerToggle.ɵfac=function(t){return new(t||MatDatepickerToggle)(core.Qb(datepicker_MatDatepickerIntl),core.Qb(core.h),core.bc(\"tabindex\"))},MatDatepickerToggle.ɵcmp=core.Kb({type:MatDatepickerToggle,selectors:[[\"mat-datepicker-toggle\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Jb(dirIndex,datepicker_MatDatepickerToggleIcon,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._customIcon=_t.first)}},viewQuery:function(rf,ctx){if(1&rf&&core.Lc(datepicker_c2,1),2&rf){let _t;core.uc(_t=core.fc())&&(ctx._button=_t.first)}},hostAttrs:[1,\"mat-datepicker-toggle\"],hostVars:8,hostBindings:function(rf,ctx){2&rf&&(core.Eb(\"tabindex\",null)(\"data-mat-calendar\",ctx.datepicker?ctx.datepicker.id:null),core.Ib(\"mat-datepicker-toggle-active\",ctx.datepicker&&ctx.datepicker.opened)(\"mat-accent\",ctx.datepicker&&\"accent\"===ctx.datepicker.color)(\"mat-warn\",ctx.datepicker&&\"warn\"===ctx.datepicker.color))},inputs:{tabIndex:\"tabIndex\",disabled:\"disabled\",datepicker:[\"for\",\"datepicker\"],ariaLabel:[\"aria-label\",\"ariaLabel\"],disableRipple:\"disableRipple\"},exportAs:[\"matDatepickerToggle\"],features:[core.Bb],ngContentSelectors:_c4,decls:4,vars:6,consts:[[\"mat-icon-button\",\"\",\"type\",\"button\",3,\"disabled\",\"disableRipple\",\"click\"],[\"button\",\"\"],[\"class\",\"mat-datepicker-toggle-default-icon\",\"viewBox\",\"0 0 24 24\",\"width\",\"24px\",\"height\",\"24px\",\"fill\",\"currentColor\",\"focusable\",\"false\",4,\"ngIf\"],[\"viewBox\",\"0 0 24 24\",\"width\",\"24px\",\"height\",\"24px\",\"fill\",\"currentColor\",\"focusable\",\"false\",1,\"mat-datepicker-toggle-default-icon\"],[\"d\",\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],template:function(rf,ctx){1&rf&&(core.oc(datepicker_c3),core.Wb(0,\"button\",0,1),core.ec(\"click\",function($event){return ctx._open($event)}),core.Gc(2,MatDatepickerToggle__svg_svg_2_Template,2,0,\"svg\",2),core.nc(3),core.Vb()),2&rf&&(core.pc(\"disabled\",ctx.disabled)(\"disableRipple\",ctx.disableRipple),core.Eb(\"aria-haspopup\",ctx.datepicker?\"dialog\":null)(\"aria-label\",ctx.ariaLabel||ctx._intl.openCalendarLabel)(\"tabindex\",ctx.disabled?-1:ctx.tabIndex),core.Db(2),core.pc(\"ngIf\",!ctx._customIcon))},directives:[fesm2015_button.b,common.m],styles:[\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"],encapsulation:2,changeDetection:0}),MatDatepickerToggle})(),datepicker_MatDatepickerModule=(()=>{class MatDatepickerModule{}return MatDatepickerModule.ɵmod=core.Ob({type:MatDatepickerModule}),MatDatepickerModule.ɵinj=core.Nb({factory:function(t){return new(t||MatDatepickerModule)},providers:[datepicker_MatDatepickerIntl,MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],imports:[[common.c,fesm2015_button.c,fesm2015_dialog.f,overlay.f,a11y.a,fesm2015_portal.f,fesm2015_core.j],scrolling.c]}),MatDatepickerModule})(),profile_form_module_ProfileFormModule=(()=>{class ProfileFormModule{}return ProfileFormModule.ɵmod=core.Ob({type:ProfileFormModule}),ProfileFormModule.ɵinj=core.Nb({factory:function(t){return new(t||ProfileFormModule)},imports:[[common.c,flex_layout.a,fesm2015_forms.r,form_field.e,input.c,select_MatSelectModule,datepicker_MatDatepickerModule,content_src.c,icon.a]]}),ProfileFormModule})(),prefs_form_module_PreferencesFormModule=(()=>{class PreferencesFormModule{}return PreferencesFormModule.ɵmod=core.Ob({type:PreferencesFormModule}),PreferencesFormModule.ɵinj=core.Nb({factory:function(t){return new(t||PreferencesFormModule)},imports:[[common.c,flex_layout.a,fesm2015_forms.r,form_field.e,input.c,select_MatSelectModule,datepicker_MatDatepickerModule,content_src.c,icon.a]]}),PreferencesFormModule})();var utils_user=__webpack_require__(\"lWmb\"),content_directive=__webpack_require__(\"Qfjl\"),gtag_directive=__webpack_require__(\"FkMH\"),actionbar_directive=__webpack_require__(\"mx0f\"),flex=__webpack_require__(\"VDRc\"),BehaviorSubject=__webpack_require__(\"2Vo4\"),debounceTime=__webpack_require__(\"Kj3r\"),moment=__webpack_require__(\"wd/R\"),moment_default=__webpack_require__.n(moment),icon_component=__webpack_require__(\"h0Qx\"),text_field=__webpack_require__(\"8sFK\");function ProfileFormComponent_form_0_mat_error_9_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.userName||null==msgs_r1.userName.errors?null:msgs_r1.userName.errors.required)}}function ProfileFormComponent_form_0_mat_error_10_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.userName||null==msgs_r1.userName.errors?null:msgs_r1.userName.errors.format)}}function ProfileFormComponent_form_0_mat_error_11_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.userName||null==msgs_r1.userName.errors?null:msgs_r1.userName.errors.exists)}}function ProfileFormComponent_form_0_mat_error_20_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.firstName||null==msgs_r1.firstName.errors?null:msgs_r1.firstName.errors.required)}}function ProfileFormComponent_form_0_mat_error_35_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.email||null==msgs_r1.email.errors?null:msgs_r1.email.errors.format)}}function ProfileFormComponent_form_0_mat_error_43_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-error\"),core.Ic(1),core.Vb()),2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.Jc(null==msgs_r1.phone||null==msgs_r1.phone.errors?null:msgs_r1.phone.errors.format)}}function ProfileFormComponent_form_0_mat_option_72_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-option\",19),core.Wb(1,\"span\"),core.Rb(2,\"wm-icon\",20),core.Ic(3),core.Vb(),core.Vb()),2&rf){const option_r16=ctx.$implicit;core.pc(\"value\",option_r16.value),core.Db(2),core.pc(\"icon\",option_r16.icon),core.Db(1),core.Jc(option_r16.label)}}function ProfileFormComponent_form_0_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"form\",1),core.Wb(1,\"mat-form-field\"),core.Wb(2,\"mat-label\"),core.Ic(3),core.Vb(),core.Rb(4,\"input\",2),core.Rb(5,\"wm-icon\",3),core.Wb(6,\"mat-hint\"),core.Ic(7),core.jc(8,\"lowercase\"),core.Vb(),core.Gc(9,ProfileFormComponent_form_0_mat_error_9_Template,2,1,\"mat-error\",4),core.Gc(10,ProfileFormComponent_form_0_mat_error_10_Template,2,1,\"mat-error\",4),core.Gc(11,ProfileFormComponent_form_0_mat_error_11_Template,2,1,\"mat-error\",4),core.Vb(),core.Wb(12,\"div\",5),core.Wb(13,\"mat-form-field\",6),core.Wb(14,\"mat-label\"),core.Ic(15),core.Vb(),core.Rb(16,\"input\",7),core.Rb(17,\"wm-icon\",3),core.Wb(18,\"mat-hint\"),core.Ic(19),core.Vb(),core.Gc(20,ProfileFormComponent_form_0_mat_error_20_Template,2,1,\"mat-error\",4),core.Vb(),core.Wb(21,\"mat-form-field\",6),core.Wb(22,\"mat-label\"),core.Ic(23),core.Vb(),core.Rb(24,\"input\",8),core.Rb(25,\"wm-icon\",3),core.Wb(26,\"mat-hint\"),core.Ic(27),core.Vb(),core.Vb(),core.Vb(),core.Wb(28,\"mat-form-field\"),core.Wb(29,\"mat-label\"),core.Ic(30),core.Vb(),core.Rb(31,\"input\",9),core.Rb(32,\"wm-icon\",3),core.Wb(33,\"mat-hint\"),core.Ic(34),core.Vb(),core.Gc(35,ProfileFormComponent_form_0_mat_error_35_Template,2,1,\"mat-error\",4),core.Vb(),core.Wb(36,\"mat-form-field\"),core.Wb(37,\"mat-label\"),core.Ic(38),core.Vb(),core.Rb(39,\"input\",10),core.Rb(40,\"wm-icon\",3),core.Wb(41,\"mat-hint\"),core.Ic(42),core.Vb(),core.Gc(43,ProfileFormComponent_form_0_mat_error_43_Template,2,1,\"mat-error\",4),core.Vb(),core.Wb(44,\"mat-form-field\"),core.Wb(45,\"mat-label\"),core.Ic(46),core.Vb(),core.Rb(47,\"textarea\",11),core.Rb(48,\"wm-icon\",3),core.Wb(49,\"mat-hint\"),core.Ic(50),core.Vb(),core.Vb(),core.Wb(51,\"mat-form-field\"),core.Wb(52,\"mat-label\"),core.Ic(53),core.Vb(),core.Rb(54,\"input\",12),core.Rb(55,\"wm-icon\",3),core.Wb(56,\"mat-hint\"),core.Ic(57),core.Vb(),core.Vb(),core.Wb(58,\"mat-form-field\"),core.Wb(59,\"mat-label\"),core.Ic(60),core.Vb(),core.Rb(61,\"input\",13),core.Rb(62,\"mat-datepicker-toggle\",14),core.Rb(63,\"mat-datepicker\",15,16),core.Wb(65,\"mat-hint\"),core.Ic(66),core.Vb(),core.Vb(),core.Wb(67,\"mat-form-field\"),core.Wb(68,\"mat-label\"),core.Ic(69),core.Vb(),core.Rb(70,\"wm-icon\",3),core.Wb(71,\"mat-select\",17),core.Gc(72,ProfileFormComponent_form_0_mat_option_72_Template,4,3,\"mat-option\",18),core.Vb(),core.Wb(73,\"mat-hint\"),core.Ic(74),core.Vb(),core.Vb(),core.Vb()),2&rf){const msgs_r1=ctx.$implicit,_r8=core.vc(64),ctx_r0=core.ic();core.pc(\"formGroup\",ctx_r0),core.Db(3),core.Jc((null==msgs_r1.userName?null:msgs_r1.userName.label)||\"Username\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.userName?null:msgs_r1.userName.icon),core.Db(2),core.Jc(core.kc(8,37,ctx_r0.hostname+\"/@\"+ctx_r0.value.userName)),core.Db(2),core.pc(\"ngIf\",null==ctx_r0.controls.userName.errors?null:ctx_r0.controls.userName.errors.required),core.Db(1),core.pc(\"ngIf\",null==ctx_r0.controls.userName.errors?null:ctx_r0.controls.userName.errors.pattern),core.Db(1),core.pc(\"ngIf\",null==ctx_r0.controls.userName.errors?null:ctx_r0.controls.userName.errors.exists),core.Db(4),core.Jc((null==msgs_r1.firstName?null:msgs_r1.firstName.label)||\"First name\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.firstName?null:msgs_r1.firstName.icon),core.Db(2),core.Jc(null==msgs_r1.firstName?null:msgs_r1.firstName.hint),core.Db(1),core.pc(\"ngIf\",null==ctx_r0.controls.name.errors?null:ctx_r0.controls.name.errors.required),core.Db(3),core.Jc((null==msgs_r1.lastName?null:msgs_r1.lastName.label)||\"Last name\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.lastName?null:msgs_r1.lastName.icon),core.Db(2),core.Jc(null==msgs_r1.lastName?null:msgs_r1.lastName.hint),core.Db(3),core.Jc((null==msgs_r1.email?null:msgs_r1.email.label)||\"Email\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.email?null:msgs_r1.email.icon),core.Db(2),core.Jc(null==msgs_r1.email?null:msgs_r1.email.hint),core.Db(1),core.pc(\"ngIf\",null==ctx_r0.controls.email.errors?null:ctx_r0.controls.email.errors.email),core.Db(3),core.Jc((null==msgs_r1.phone?null:msgs_r1.phone.label)||\"Phone\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.phone?null:msgs_r1.phone.icon),core.Db(2),core.Jc(null==msgs_r1.phone?null:msgs_r1.phone.hint),core.Db(1),core.pc(\"ngIf\",null==ctx_r0.controls.phone.errors?null:ctx_r0.controls.phone.errors.phone),core.Db(3),core.Jc((null==msgs_r1.bio?null:msgs_r1.bio.label)||\"Bio\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.bio?null:msgs_r1.bio.icon),core.Db(2),core.Jc(null==msgs_r1.bio?null:msgs_r1.bio.hint),core.Db(3),core.Jc((null==msgs_r1.location?null:msgs_r1.location.label)||\"Location\"),core.Db(2),core.pc(\"icon\",null==msgs_r1.location?null:msgs_r1.location.icon),core.Db(2),core.Jc(null==msgs_r1.location?null:msgs_r1.location.hint),core.Db(3),core.Jc((null==msgs_r1.birth?null:msgs_r1.birth.label)||\"Birthday\"),core.Db(1),core.pc(\"matDatepicker\",_r8),core.Db(1),core.pc(\"for\",_r8),core.Db(1),core.pc(\"touchUi\",ctx_r0.isMobile),core.Db(3),core.Jc(null==msgs_r1.birth?null:msgs_r1.birth.hint),core.Db(3),core.Jc((null==msgs_r1.gender?null:msgs_r1.gender.label)||\"Gender\"),core.Db(1),core.pc(\"icon\",ctx_r0.genderIcon(null==msgs_r1.gender?null:msgs_r1.gender.options)||(null==msgs_r1.gender?null:msgs_r1.gender.icon)),core.Db(2),core.pc(\"ngForOf\",null==msgs_r1.gender?null:msgs_r1.gender.options),core.Db(2),core.Jc(null==msgs_r1.gender?null:msgs_r1.gender.hint)}}let profile_form_component_ProfileFormComponent=(()=>{class ProfileFormComponent extends fesm2015_forms.g{constructor(user){super({userName:new fesm2015_forms.e(\"\",fesm2015_forms.t.compose([fesm2015_forms.t.required,fesm2015_forms.t.pattern(/^[\\w\\d-_]+\\s*$/)])),name:new fesm2015_forms.e(\"\",fesm2015_forms.t.required),lastName:new fesm2015_forms.e(\"\"),bio:new fesm2015_forms.e(\"\"),email:new fesm2015_forms.e(\"\",fesm2015_forms.t.email),birth:new fesm2015_forms.e(\"\"),phone:new fesm2015_forms.e(\"\"),location:new fesm2015_forms.e(\"\"),gender:new fesm2015_forms.e(\"\")}),this.user=user,this.formValueChange=new core.o,this.controls.userName.setAsyncValidators(this.userNameValidator),this.sub=this.valueChanges.subscribe(value=>{const out=this.format(value);this.formValueChange.emit(out),Object.keys(this.controls).every(key=>this.data[key]===out[key])&&Promise.resolve().then(()=>this.markAsPristine())})}get hostname(){var _a;return(null===(_a=null===window||void 0===window?void 0:window.location)||void 0===_a?void 0:_a.origin)||\"https://wizdm.io\"}ngOnDestroy(){this.sub.unsubscribe()}format(value){const birth=moment_default.a.isMoment(null==value?void 0:value.birth)?(null==value?void 0:value.birth).format(moment.defaultFormat):\"\";return Object.assign(Object.assign({},value),{birth:birth})}get userNameValidator(){const value$=new BehaviorSubject.a(\"\"),result$=value$.pipe(Object(debounceTime.a)(500),Object(switchMap.a)(value=>value?this.user.doesUserNameExists(value,!0):Object(of.a)(!1)),Object(map.a)(exists=>exists?{exists:!0}:null),Object(take.a)(1));return control=>(value$.next(control.value),result$)}get userData(){return this.format(this.value)}set userData(value){const birth=value.birth?moment_default()(value.birth,moment.defaultFormat):null;value.motto&&!value.bio&&(value.bio=value.motto),this.data=value,this.patchValue(Object.assign(Object.assign({},value),{birth:birth})),value.userName||Promise.resolve().then(()=>this.controls.userName.markAsTouched()),value.fullName?value.searchIndex||Promise.resolve().then(()=>this.controls.name.markAsDirty()):Promise.resolve().then(()=>this.controls.name.markAsTouched())}genderIcon(options){var _a;return null===(_a=(options||[]).find(icon=>{var _a;return icon.value===(null===(_a=this.value)||void 0===_a?void 0:_a.gender)}))||void 0===_a?void 0:_a.icon}}return ProfileFormComponent.ɵfac=function(t){return new(t||ProfileFormComponent)(core.Qb(utils_user.b))},ProfileFormComponent.ɵcmp=core.Kb({type:ProfileFormComponent,selectors:[[\"wm-profile-form\"]],inputs:{userData:[\"value\",\"userData\"]},outputs:{formValueChange:\"valueChange\"},features:[core.Ab],decls:1,vars:1,consts:[[\"fxLayout\",\"column\",\"fxLayoutGap\",\"32px\",3,\"formGroup\",4,\"wmContent\",\"wmContentSelect\"],[\"fxLayout\",\"column\",\"fxLayoutGap\",\"32px\",3,\"formGroup\"],[\"matInput\",\"\",\"formControlName\",\"userName\"],[\"matPrefix\",\"\",3,\"icon\"],[4,\"ngIf\"],[\"fxLayout\",\"row\",\"fxLayout.lt-sm\",\"column\",\"fxLayoutGap\",\"16px\"],[\"fxFlex\",\"50\"],[\"matInput\",\"\",\"formControlName\",\"name\",\"cdkFocusInitial\",\"\"],[\"matInput\",\"\",\"formControlName\",\"lastName\",\"cdkFocusInitial\",\"\"],[\"matInput\",\"\",\"formControlName\",\"email\"],[\"matInput\",\"\",\"formControlName\",\"phone\"],[\"matInput\",\"\",\"formControlName\",\"bio\",\"cdkTextareaAutosize\",\"\",\"cdkAutosizeMinRows\",\"1\"],[\"matInput\",\"\",\"formControlName\",\"location\"],[\"matInput\",\"\",\"formControlName\",\"birth\",3,\"matDatepicker\"],[\"matPrefix\",\"\",3,\"for\"],[3,\"touchUi\"],[\"picker\",\"\"],[\"formControlName\",\"gender\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[3,\"value\"],[3,\"icon\"]],template:function(rf,ctx){1&rf&&core.Gc(0,ProfileFormComponent_form_0_Template,75,39,\"form\",0),2&rf&&core.pc(\"wmContentSelect\",\"settings-profile.form\")},directives:[content_directive.a,fesm2015_forms.u,fesm2015_forms.n,flex.e,flex.f,fesm2015_forms.h,form_field.c,form_field.g,input.b,fesm2015_forms.c,fesm2015_forms.m,fesm2015_forms.f,icon_component.a,form_field.h,form_field.f,common.m,flex.b,text_field.b,datepicker_MatDatepickerInput,datepicker_MatDatepickerToggle,datepicker_MatDatepicker,select_MatSelect,common.l,form_field.b,fesm2015_core.m],pipes:[common.j],styles:[\"[_nghost-%COMP%]{display:block;position:relative;max-width:450px;width:100%}\"]}),ProfileFormComponent})();var lib_storage=__webpack_require__(\"tFpD\"),avatar_component=__webpack_require__(\"a/j4\");function ProfilePhotoComponent_ng_container_0_mat_progress_bar_5_Template(rf,ctx){if(1&rf&&core.Rb(0,\"mat-progress-bar\",7),2&rf){const progress_r6=ctx.ngIf;core.pc(\"mode\",progress_r6<100?\"determiante\":\"indeterminate\")(\"value\",progress_r6)}}function ProfilePhotoComponent_ng_container_0_button_7_Template(rf,ctx){if(1&rf){const _r8=core.Xb();core.Wb(0,\"button\",8),core.ec(\"click\",function(){return core.yc(_r8),core.ic(2).deleteFile()}),core.Rb(1,\"wm-icon\",9),core.Vb()}if(2&rf){const msgs_r1=core.ic().$implicit;core.Db(1),core.pc(\"icon\",(null==msgs_r1.delete?null:msgs_r1.delete.icon)||\"delete\")}}function ProfilePhotoComponent_ng_container_0_ng_template_8_Template(rf,ctx){if(1&rf){const _r12=core.Xb();core.Wb(0,\"input\",10,11),core.ec(\"change\",function($event){return core.yc(_r12),core.ic(2).uploadFile($event.target.files)}),core.Vb(),core.Wb(2,\"button\",8),core.ec(\"click\",function(){core.yc(_r12);const _r10=core.vc(1);return _r10.value=\"\",_r10.click()}),core.Rb(3,\"wm-icon\",9),core.Vb()}if(2&rf){const msgs_r1=core.ic().$implicit;core.Db(3),core.pc(\"icon\",(null==msgs_r1.upload?null:msgs_r1.upload.icon)||\"cloud_upload\")}}function ProfilePhotoComponent_ng_container_0_Template(rf,ctx){if(1&rf&&(core.Ub(0),core.Wb(1,\"label\",1),core.Ic(2),core.Vb(),core.Wb(3,\"div\",2),core.Rb(4,\"wm-avatar\",3),core.Gc(5,ProfilePhotoComponent_ng_container_0_mat_progress_bar_5_Template,1,2,\"mat-progress-bar\",4),core.jc(6,\"async\"),core.Gc(7,ProfilePhotoComponent_ng_container_0_button_7_Template,2,1,\"button\",5),core.Gc(8,ProfilePhotoComponent_ng_container_0_ng_template_8_Template,4,1,\"ng-template\",null,6,core.Hc),core.Vb(),core.Tb()),2&rf){const msgs_r1=ctx.$implicit,_r4=core.vc(9),ctx_r0=core.ic();core.Db(2),core.Jc(msgs_r1.label||\"Profile picture\"),core.Db(2),core.pc(\"src\",ctx_r0.url),core.Db(1),core.pc(\"ngIf\",core.kc(6,5,ctx_r0.progress$)),core.Db(2),core.pc(\"ngIf\",ctx_r0.validUrl)(\"ngIfElse\",_r4)}}let profile_photo_component_ProfilePhotoComponent=(()=>{class ProfilePhotoComponent{constructor(storage){this.storage=storage,this.update=new core.o}set url(url){this.validUrl=this.storage.testURL(this._url=url)}get url(){return this._url}uploadFile(files){if(files.length<=0)return;const file=files.item(0),task=this.storage.upload(`${this.folder}/${file.name}`,file);this.progress$=task.pipe(Object(map.a)(snap=>Math.floor(100*snap.bytesTransferred/snap.totalBytes))),task.then(snap=>snap.ref.getDownloadURL()).then(url=>this.update.emit(url)).then(()=>delete this.progress$)}deleteFile(){if(!this.url)return;const ref=this.storage.fromURL(this.url);ref?ref.delete().then(()=>this.update.emit(null)):this.update.emit(null)}}return ProfilePhotoComponent.ɵfac=function(t){return new(t||ProfilePhotoComponent)(core.Qb(lib_storage.b))},ProfilePhotoComponent.ɵcmp=core.Kb({type:ProfilePhotoComponent,selectors:[[\"wm-profile-photo\"]],inputs:{folder:\"folder\",url:\"url\"},outputs:{update:\"update\"},decls:1,vars:1,consts:[[4,\"wmContent\",\"wmContentSelect\"],[1,\"label\",\"mat-small\"],[\"fxLayout\",\"column\",\"fxLayoutGap\",\"16px\",1,\"frame\"],[\"color\",\"primary\",\"shape\",\"squared\",3,\"src\"],[\"color\",\"primary\",3,\"mode\",\"value\",4,\"ngIf\"],[\"mat-icon-button\",\"\",\"class\",\"buttons\",3,\"click\",4,\"ngIf\",\"ngIfElse\"],[\"uploadBtn\",\"\"],[\"color\",\"primary\",3,\"mode\",\"value\"],[\"mat-icon-button\",\"\",1,\"buttons\",3,\"click\"],[3,\"icon\"],[\"type\",\"file\",\"accept\",\"image/*\",2,\"display\",\"none\",3,\"change\"],[\"openfile\",\"\"]],template:function(rf,ctx){1&rf&&core.Gc(0,ProfilePhotoComponent_ng_container_0_Template,10,7,\"ng-container\",0),2&rf&&core.pc(\"wmContentSelect\",\"settings-profile.photo\")},directives:[content_directive.a,flex.e,flex.f,avatar_component.a,common.m,progress_bar.a,fesm2015_button.b,icon_component.a],pipes:[common.b],styles:[\"[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]   .label[_ngcontent-%COMP%]{display:block;color:rgba(0,0,0,.56)}[_nghost-%COMP%]   .frame[_ngcontent-%COMP%]{display:block;position:relative}[_nghost-%COMP%]   .wm-avatar[_ngcontent-%COMP%]{position:relative;width:250px;height:250px}[_nghost-%COMP%]   .buttons[_ngcontent-%COMP%]{position:absolute;right:0;top:0}\"]}),ProfilePhotoComponent})();var platform=__webpack_require__(\"OWci\"),fesm2015_router=__webpack_require__(\"iInd\");function PreferencesFormComponent_form_0_mat_option_6_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-option\",6),core.Ic(1),core.Vb()),2&rf){const option_r4=ctx.$implicit;core.pc(\"value\",option_r4.value),core.Db(1),core.Jc(option_r4.label)}}function PreferencesFormComponent_form_0_mat_option_14_Template(rf,ctx){if(1&rf&&(core.Wb(0,\"mat-option\",6),core.Ic(1),core.Vb()),2&rf){const option_r5=ctx.$implicit;core.pc(\"value\",option_r5.value),core.Db(1),core.Jc(option_r5.label)}}function PreferencesFormComponent_form_0_Template(rf,ctx){if(1&rf){const _r7=core.Xb();core.Wb(0,\"form\",1),core.Wb(1,\"mat-form-field\"),core.Wb(2,\"mat-label\"),core.Ic(3),core.Vb(),core.Rb(4,\"wm-icon\",2),core.Wb(5,\"mat-select\",3),core.ec(\"selectionChange\",function($event){return core.yc(_r7),core.ic().changeTheme($event.value)}),core.Gc(6,PreferencesFormComponent_form_0_mat_option_6_Template,2,2,\"mat-option\",4),core.Vb(),core.Wb(7,\"mat-hint\"),core.Ic(8),core.Vb(),core.Vb(),core.Wb(9,\"mat-form-field\"),core.Wb(10,\"mat-label\"),core.Ic(11),core.Vb(),core.Rb(12,\"wm-icon\",2),core.Wb(13,\"mat-select\",5),core.ec(\"selectionChange\",function($event){return core.yc(_r7),core.ic().changeLanguage($event.value)}),core.Gc(14,PreferencesFormComponent_form_0_mat_option_14_Template,2,2,\"mat-option\",4),core.Vb(),core.Wb(15,\"mat-hint\"),core.Ic(16),core.Vb(),core.Vb(),core.Vb()}if(2&rf){const msgs_r1=ctx.$implicit,ctx_r0=core.ic();core.pc(\"formGroup\",ctx_r0),core.Db(3),core.Jc((null==msgs_r1.theme?null:msgs_r1.theme.label)||\"Theme\"),core.Db(1),core.pc(\"icon\",ctx_r0.themeIcon(null==msgs_r1.theme?null:msgs_r1.theme.options)||(null==msgs_r1.theme?null:msgs_r1.theme.icon)),core.Db(2),core.pc(\"ngForOf\",null==msgs_r1.theme?null:msgs_r1.theme.options),core.Db(2),core.Jc(null==msgs_r1.theme?null:msgs_r1.theme.hint),core.Db(3),core.Jc((null==msgs_r1.language?null:msgs_r1.language.label)||\"Language\"),core.Db(1),core.pc(\"icon\",null==msgs_r1.language?null:msgs_r1.language.icon),core.Db(2),core.pc(\"ngForOf\",null==msgs_r1.language?null:msgs_r1.language.options),core.Db(2),core.Jc(null==msgs_r1.language?null:msgs_r1.language.hint)}}let prefs_form_component_PreferencesFormComponent=(()=>{class PreferencesFormComponent extends fesm2015_forms.g{constructor(router,theme){super({theme:new fesm2015_forms.e(\"\"),lang:new fesm2015_forms.e(\"\")}),this.router=router,this.theme=theme,this.formValueChange=new core.o,this.sub=this.valueChanges.subscribe(value=>{this.formValueChange.emit(value),Object.keys(this.controls).every(key=>this.data[key]===value[key])&&Promise.resolve().then(()=>this.markAsPristine())})}changeTheme(theme){this.theme.darkMode(\"auto\"===theme?void 0:\"dark\"===theme)}themeIcon(options){var _a;const value=this.theme.isDark?\"dark\":\"light\";return null===(_a=(options||[]).find(icon=>icon.value===value))||void 0===_a?void 0:_a.icon}changeLanguage(lang){return this.router.navigateByUrl(this.router.url.replace(/^\\/[^\\/]+(\\/|$)/,\"/\"+lang+\"$1\"))}ngOnDestroy(){this.sub.unsubscribe()}set userData(value){value.theme||(value.theme=\"auto\"),this.patchValue(this.data=value)}}return PreferencesFormComponent.ɵfac=function(t){return new(t||PreferencesFormComponent)(core.Qb(fesm2015_router.g),core.Qb(platform.a))},PreferencesFormComponent.ɵcmp=core.Kb({type:PreferencesFormComponent,selectors:[[\"wm-preferences-form\"]],inputs:{userData:[\"value\",\"userData\"]},outputs:{formValueChange:\"valueChange\"},features:[core.Ab],decls:1,vars:1,consts:[[\"fxLayout\",\"column\",\"fxLayoutGap\",\"32px\",3,\"formGroup\",4,\"wmContent\",\"wmContentSelect\"],[\"fxLayout\",\"column\",\"fxLayoutGap\",\"32px\",3,\"formGroup\"],[\"matPrefix\",\"\",3,\"icon\"],[\"formControlName\",\"theme\",3,\"selectionChange\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[\"formControlName\",\"lang\",3,\"selectionChange\"],[3,\"value\"]],template:function(rf,ctx){1&rf&&core.Gc(0,PreferencesFormComponent_form_0_Template,17,9,\"form\",0),2&rf&&core.pc(\"wmContentSelect\",\"settings-profile.preferences\")},directives:[content_directive.a,fesm2015_forms.u,fesm2015_forms.n,flex.e,flex.f,fesm2015_forms.h,form_field.c,form_field.g,icon_component.a,form_field.h,select_MatSelect,fesm2015_forms.m,fesm2015_forms.f,common.l,form_field.f,fesm2015_core.m],styles:[\"[_nghost-%COMP%]{display:block;position:relative;max-width:450px;width:100%}\"]}),PreferencesFormComponent})();var dialog_component=__webpack_require__(\"7/R1\"),can_leave_directive=__webpack_require__(\"q9NA\"),readme_component=__webpack_require__(\"n8oj\"),button_media_changer_directive=__webpack_require__(\"U3RD\");function ProfileComponent_ng_container_0_ng_template_1_wm_icon_1_Template(rf,ctx){if(1&rf&&core.Rb(0,\"wm-icon\",19),2&rf){const msgs_r1=core.ic(2).$implicit;core.pc(\"icon\",(null==msgs_r1.actions||null==msgs_r1.actions.save?null:msgs_r1.actions.save.icon)||\"save\")}}function ProfileComponent_ng_container_0_ng_template_1_ng_template_2_Template(rf,ctx){if(1&rf&&core.Ic(0),2&rf){const msgs_r1=core.ic(2).$implicit;core.Jc((null==msgs_r1.actions||null==msgs_r1.actions.save?null:msgs_r1.actions.save.caption)||\"Update Profile\")}}function ProfileComponent_ng_container_0_ng_template_1_Template(rf,ctx){if(1&rf){const _r12=core.Xb();core.Wb(0,\"button\",16),core.ec(\"click\",function(){return core.yc(_r12),core.ic(2).updateProfile()}),core.Gc(1,ProfileComponent_ng_container_0_ng_template_1_wm_icon_1_Template,1,1,\"wm-icon\",17),core.Gc(2,ProfileComponent_ng_container_0_ng_template_1_ng_template_2_Template,1,1,\"ng-template\",null,18,core.Hc),core.Vb()}if(2&rf){const mobile_r5=ctx.isMobile,_r7=core.vc(3);core.ic();const _r3=core.vc(7),_r4=core.vc(13);core.pc(\"disabled\",!(_r3.dirty||_r4.dirty)||_r3.invalid||_r4.invalid),core.Db(1),core.pc(\"ngIf\",mobile_r5)(\"ngIfElse\",_r7)}}function ProfileComponent_ng_container_0_Template(rf,ctx){if(1&rf){const _r14=core.Xb();core.Ub(0,1),core.Gc(1,ProfileComponent_ng_container_0_ng_template_1_Template,4,3,\"ng-template\",2),core.Wb(2,\"h2\"),core.Ic(3),core.Vb(),core.Rb(4,\"mat-divider\"),core.Wb(5,\"div\",3),core.Wb(6,\"wm-profile-form\",4,5),core.ec(\"valueChange\",function($event){return core.yc(_r14),core.ic().profile=$event}),core.Vb(),core.Wb(8,\"wm-profile-photo\",6),core.ec(\"update\",function($event){return core.yc(_r14),core.ic().updatePhoto($event)}),core.Vb(),core.Vb(),core.Wb(9,\"h3\"),core.Ic(10),core.Vb(),core.Rb(11,\"mat-divider\"),core.Wb(12,\"wm-preferences-form\",7,8),core.ec(\"valueChange\",function($event){return core.yc(_r14),core.ic().profile=$event}),core.Vb(),core.Wb(14,\"wm-dialog\",9),core.ec(\"beforeClosed\",function($event){core.yc(_r14);const _r3=core.vc(7),ctx_r17=core.ic();return\"save\"===$event&&ctx_r17.updateProfile(_r3.userData)}),core.Wb(15,\"h2\",10),core.Wb(16,\"b\"),core.Ic(17),core.Vb(),core.Vb(),core.Wb(18,\"mat-dialog-content\",11),core.Wb(19,\"span\"),core.Ic(20,\"You're about to leave the page without saving the latest changes.\"),core.Rb(21,\"br\"),core.Ic(22,\"Please confirm.\"),core.Vb(),core.Vb(),core.Wb(23,\"mat-dialog-actions\",12),core.Wb(24,\"button\",13),core.Ic(25),core.Vb(),core.Wb(26,\"button\",14),core.Ic(27),core.Vb(),core.Wb(28,\"button\",15),core.Ic(29),core.Vb(),core.Vb(),core.Vb(),core.Tb()}if(2&rf){const msgs_r1=ctx.$implicit,_r3=core.vc(7),_r4=core.vc(13),ctx_r0=core.ic();core.Db(3),core.Jc(msgs_r1.title||\"Public profile\"),core.Db(3),core.pc(\"value\",ctx_r0.profile),core.Db(2),core.pc(\"url\",null==ctx_r0.profile?null:ctx_r0.profile.photo)(\"folder\",null==ctx_r0.profile?null:ctx_r0.profile.id),core.Db(2),core.Jc((null==msgs_r1.preferences?null:msgs_r1.preferences.title)||\"User's preferences\"),core.Db(2),core.pc(\"value\",ctx_r0.profile),core.Db(2),core.pc(\"dontLeave\",_r3.dirty||_r4.dirty),core.Db(3),core.Jc((null==msgs_r1.canLeave?null:msgs_r1.canLeave.title)||\"Unsaved changes\"),core.Db(1),core.pc(\"wm-readme\",null==msgs_r1.canLeave?null:msgs_r1.canLeave.message),core.Db(6),core.pc(\"mat-dialog-close\",!1),core.Db(1),core.Jc((null==msgs_r1.canLeave?null:msgs_r1.canLeave.cancel)||\"Stay\"),core.Db(1),core.pc(\"mat-dialog-close\",\"save\"),core.Db(1),core.Jc((null==msgs_r1.canLeave?null:msgs_r1.canLeave.force)||\"Save and leave\"),core.Db(1),core.pc(\"mat-dialog-close\",!0),core.Db(1),core.Jc((null==msgs_r1.canLeave?null:msgs_r1.canLeave.ok)||\"Leave anyhow\")}}let profile_component_ProfileComponent=(()=>{class ProfileComponent{constructor(user){this.user=user,this.data={}}get profile(){return this.user.data}set profile(data){this.data=Object.assign(Object.assign({},this.data),data)}updateProfile(){return this.user.update(this.data)}updatePhoto(photo){return this.user.update({photo:photo})}}return ProfileComponent.ɵfac=function(t){return new(t||ProfileComponent)(core.Qb(utils_user.b))},ProfileComponent.ɵcmp=core.Kb({type:ProfileComponent,selectors:[[\"wm-profile\"]],decls:1,vars:1,consts:[[\"gtag\",\"profile\",4,\"wmContent\",\"wmContentSelect\"],[\"gtag\",\"profile\"],[\"wmActionbar\",\"\"],[\"fxLayout\",\"row\",\"fxLayout.lt-sm\",\"column\",\"fxLayoutAlign.lt-sm\",\"start center\",\"fxLayoutGap\",\"32px\"],[\"fxFlexOrder.lt-sm\",\"2\",3,\"value\",\"valueChange\"],[\"form\",\"\"],[\"fxFlexOrder.lt-sm\",\"1\",3,\"url\",\"folder\",\"update\"],[3,\"value\",\"valueChange\"],[\"prefs\",\"\"],[3,\"dontLeave\",\"beforeClosed\"],[\"mat-dialog-title\",\"\"],[3,\"wm-readme\"],[\"align\",\"end\"],[\"mat-button\",\"\",\"color\",\"primary\",\"cdkFocusInitial\",\"\",3,\"mat-dialog-close\"],[\"mat-button\",\"\",\"color\",\"accent\",3,\"mat-dialog-close\"],[\"mat-button\",\"\",\"color\",\"warn\",3,\"mat-dialog-close\"],[\"mat-stroked-button\",\"\",\"type.lt-sm\",\"icon\",\"color\",\"primary\",3,\"disabled\",\"click\"],[3,\"icon\",4,\"ngIf\",\"ngIfElse\"],[\"saveProfile\",\"\"],[3,\"icon\"]],template:function(rf,ctx){1&rf&&core.Gc(0,ProfileComponent_ng_container_0_Template,30,15,\"ng-container\",0),2&rf&&core.pc(\"wmContentSelect\",\"settings-profile\")},directives:[content_directive.a,gtag_directive.a,actionbar_directive.a,divider.a,flex.e,flex.d,flex.f,profile_form_component_ProfileFormComponent,flex.c,profile_photo_component_ProfilePhotoComponent,prefs_form_component_PreferencesFormComponent,dialog_component.a,can_leave_directive.a,fesm2015_dialog.h,fesm2015_dialog.e,readme_component.a,fesm2015_dialog.c,fesm2015_button.b,fesm2015_dialog.d,button_media_changer_directive.a,common.m,icon_component.a],styles:[\"[_nghost-%COMP%]{display:flex;position:relative;flex-flow:column;justify-content:center}[_nghost-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:32px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{margin-bottom:16px}\"]}),ProfileComponent})();__webpack_require__(\"J3Me\");const routes=[{path:\"\",content:\"settings-profile\",component:profile_component_ProfileComponent,canDeactivate:[can_leave.a]}];let profile_module_ProfileModule=(()=>{class ProfileModule{}return ProfileModule.ɵmod=core.Ob({type:ProfileModule}),ProfileModule.ɵinj=core.Nb({factory:function(t){return new(t||ProfileModule)},imports:[[common.c,flex_layout.a,divider.b,fesm2015_button.c,src.a,dialog.b,readme_src.a,icon.a,lib_button.a,can_leave.b,actionbar.a,profile_form_module_ProfileFormModule,profile_photo_module_ProfilePhotoModule,prefs_form_module_PreferencesFormModule,content_src.e.forChild(routes)]]}),ProfileModule})()}}]);","name":"34-es2015.642dfb2379922e757fc8.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[34],{\n\n/***/ \"vzDr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"ProfileModule\", function() { return /* binding */ profile_module_ProfileModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/fesm2015/common.js\nvar common = __webpack_require__(\"SVse\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex-layout.js + 1 modules\nvar flex_layout = __webpack_require__(\"u9T3\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/divider.js\nvar divider = __webpack_require__(\"BSbQ\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/button.js\nvar fesm2015_button = __webpack_require__(\"Dxy4\");\n\n// EXTERNAL MODULE: ./gtag/src/index.ts + 1 modules\nvar src = __webpack_require__(\"fi6C\");\n\n// EXTERNAL MODULE: ./elements/src/lib/dialog/index.ts + 1 modules\nvar dialog = __webpack_require__(\"XNpK\");\n\n// EXTERNAL MODULE: ./readme/src/index.ts + 2 modules\nvar readme_src = __webpack_require__(\"C1VQ\");\n\n// EXTERNAL MODULE: ./elements/src/lib/icon/index.ts + 1 modules\nvar icon = __webpack_require__(\"txmD\");\n\n// EXTERNAL MODULE: ./elements/src/lib/button/index.ts + 1 modules\nvar lib_button = __webpack_require__(\"uaks\");\n\n// EXTERNAL MODULE: ./content/src/index.ts + 1 modules\nvar content_src = __webpack_require__(\"g7MM\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/utils/can-leave/index.ts + 1 modules\nvar can_leave = __webpack_require__(\"h4JL\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/navigator/actionbar/index.ts + 1 modules\nvar actionbar = __webpack_require__(\"kNiW\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/progress-bar.js\nvar progress_bar = __webpack_require__(\"BTe0\");\n\n// EXTERNAL MODULE: ./elements/src/lib/avatar/index.ts + 1 modules\nvar avatar = __webpack_require__(\"Entk\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/fesm2015/core.js\nvar core = __webpack_require__(\"8Y7J\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile-photo/profile-photo.module.ts\n\n\n\n\n\n\n\n\n\nlet profile_photo_module_ProfilePhotoModule = /*@__PURE__*/ (() => {\n    class ProfilePhotoModule {\n    }\n    ProfilePhotoModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: ProfilePhotoModule });\n    ProfilePhotoModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function ProfilePhotoModule_Factory(t) { return new (t || ProfilePhotoModule)(); }, imports: [[\n                common[\"c\" /* CommonModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                progress_bar[\"b\" /* MatProgressBarModule */],\n                content_src[\"c\" /* ContentModule */],\n                readme_src[\"a\" /* ReadmeModule */],\n                avatar[\"a\" /* AvatarModule */],\n                icon[\"a\" /* IconModule */]\n            ]] });\n    return ProfilePhotoModule;\n})();\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"s7LF\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/form-field.js\nvar form_field = __webpack_require__(\"Q2Ze\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/input.js\nvar input = __webpack_require__(\"e6WT\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/overlay.js\nvar overlay = __webpack_require__(\"1O3W\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/core.js + 1 modules\nvar fesm2015_core = __webpack_require__(\"UhP/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/scrolling.js + 1 modules\nvar scrolling = __webpack_require__(\"7KAL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/a11y.js\nvar a11y = __webpack_require__(\"YEUz\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/coercion.js\nvar coercion = __webpack_require__(\"8LU1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/collections.js\nvar collections = __webpack_require__(\"CtHx\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/keycodes.js\nvar keycodes = __webpack_require__(\"Ht+U\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/defer.js\nvar defer = __webpack_require__(\"NXyV\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/startWith.js\nvar startWith = __webpack_require__(\"JX91\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js\nvar switchMap = __webpack_require__(\"eIep\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/take.js\nvar take = __webpack_require__(\"IzEk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/filter.js\nvar filter = __webpack_require__(\"pLZG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js\nvar distinctUntilChanged = __webpack_require__(\"/uUt\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js\nvar takeUntil = __webpack_require__(\"1G5W\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/animations/fesm2015/animations.js\nvar animations = __webpack_require__(\"GS7A\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/bidi.js\nvar bidi = __webpack_require__(\"9gLZ\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/select.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\n\n\n\n\n\n\n\n\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"span\", 8);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](ctx_r2.placeholder);\n    }\n}\nfunction MatSelect_span_5_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"span\", 12);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r5 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](ctx_r5.triggerValue);\n    }\n}\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"nc\" /* ɵɵprojection */](0, 0, [\"*ngSwitchCase\", \"true\"]);\n    }\n}\nfunction MatSelect_span_5_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"span\", 9);\n        core[\"Gc\" /* ɵɵtemplate */](1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n        core[\"Gc\" /* ɵɵtemplate */](2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"ngSwitch\", !!ctx_r3.customTrigger);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", true);\n    }\n}\nfunction MatSelect_ng_template_8_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 13);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 14, 15);\n        core[\"ec\" /* ɵɵlistener */](\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r9); const ctx_r8 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r9); const ctx_r10 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r10._handleKeydown($event); });\n        core[\"nc\" /* ɵɵprojection */](3, 1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"@transformPanelWrap\", undefined);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Hb\" /* ɵɵclassMapInterpolate1 */](\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n        core[\"Dc\" /* ɵɵstyleProp */](\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n        core[\"pc\" /* ɵɵproperty */](\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n        core[\"Eb\" /* ɵɵattribute */](\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n    }\n}\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('transformPanelWrap', [\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => void', /*@__PURE__*/ Object(animations[\"i\" /* query */])('@transformPanel', [/*@__PURE__*/ Object(animations[\"f\" /* animateChild */])()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('transformPanel', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('void', /*@__PURE__*/ Object(animations[\"m\" /* style */])({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('showing', /*@__PURE__*/ Object(animations[\"m\" /* style */])({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('showing-multiple', /*@__PURE__*/ Object(animations[\"m\" /* style */])({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('void => *', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => void', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('100ms 25ms linear', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 0 })))\n    ])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/**\n * The max height of the select's overlay panel.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [overlay[\"c\" /* Overlay */]],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"w\" /* mixinDisableRipple */])(/*@__PURE__*/ Object(fesm2015_core[\"A\" /* mixinTabIndex */])(/*@__PURE__*/ Object(fesm2015_core[\"x\" /* mixinDisabled */])(/*@__PURE__*/ Object(fesm2015_core[\"y\" /* mixinErrorState */])(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MatSelectTrigger');\nlet select_MatSelectTrigger = /*@__PURE__*/ (() => {\n    class MatSelectTrigger {\n    }\n    MatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\n    MatSelectTrigger.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n    return MatSelectTrigger;\n})();\nlet select_MatSelectBase = /*@__PURE__*/ (() => {\n    class _MatSelectBase extends _MatSelectMixinBase {\n        constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n            var _a, _b, _c;\n            super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n            this._viewportRuler = _viewportRuler;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._ngZone = _ngZone;\n            this._dir = _dir;\n            this._parentFormField = _parentFormField;\n            this.ngControl = ngControl;\n            this._liveAnnouncer = _liveAnnouncer;\n            this._defaultOptions = _defaultOptions;\n            /** Whether or not the overlay panel is open. */\n            this._panelOpen = false;\n            /** Comparison function to specify which option is displayed. Defaults to object equality. */\n            this._compareWith = (o1, o2) => o1 === o2;\n            /** Unique id for this input. */\n            this._uid = `mat-select-${nextUniqueId++}`;\n            /** Current `ariar-labelledby` value for the select trigger. */\n            this._triggerAriaLabelledBy = null;\n            /** Emits whenever the component is destroyed. */\n            this._destroy = new Subject[\"a\" /* Subject */]();\n            /** `View -> model callback called when value changes` */\n            this._onChange = () => { };\n            /** `View -> model callback called when select has been touched` */\n            this._onTouched = () => { };\n            /** ID for the DOM node containing the select's value. */\n            this._valueId = `mat-select-value-${nextUniqueId++}`;\n            /** Emits when the panel element is finished transforming in. */\n            this._panelDoneAnimatingStream = new Subject[\"a\" /* Subject */]();\n            this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n            this._focused = false;\n            /** A name for this control that can be used by `mat-form-field`. */\n            this.controlType = 'mat-select';\n            this._required = false;\n            this._multiple = false;\n            this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n            /** Aria label of the select. If not specified, the placeholder will be used as label. */\n            this.ariaLabel = '';\n            /** Combined stream of all of the child options' change events. */\n            this.optionSelectionChanges = Object(defer[\"a\" /* defer */])(() => {\n                const options = this.options;\n                if (options) {\n                    return options.changes.pipe(Object(startWith[\"a\" /* startWith */])(options), Object(switchMap[\"a\" /* switchMap */])(() => Object(merge[\"a\" /* merge */])(...options.map(option => option.onSelectionChange))));\n                }\n                return this._ngZone.onStable\n                    .pipe(Object(take[\"a\" /* take */])(1), Object(switchMap[\"a\" /* switchMap */])(() => this.optionSelectionChanges));\n            });\n            /** Event emitted when the select panel has been toggled. */\n            this.openedChange = new core[\"o\" /* EventEmitter */]();\n            /** Event emitted when the select has been opened. */\n            this._openedStream = this.openedChange.pipe(Object(filter[\"a\" /* filter */])(o => o), Object(map[\"a\" /* map */])(() => { }));\n            /** Event emitted when the select has been closed. */\n            this._closedStream = this.openedChange.pipe(Object(filter[\"a\" /* filter */])(o => !o), Object(map[\"a\" /* map */])(() => { }));\n            /** Event emitted when the selected value has been changed by the user. */\n            this.selectionChange = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Event that emits whenever the raw value of the select changes. This is here primarily\n             * to facilitate the two-way binding for the `value` input.\n             * @docs-private\n             */\n            this.valueChange = new core[\"o\" /* EventEmitter */]();\n            if (this.ngControl) {\n                // Note: we provide the value accessor through here, instead of\n                // the `providers` to avoid running into a circular import.\n                this.ngControl.valueAccessor = this;\n            }\n            // Note that we only want to set this when the defaults pass it in, otherwise it should\n            // stay as `undefined` so that it falls back to the default in the key manager.\n            if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n                this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n            }\n            this._scrollStrategyFactory = scrollStrategyFactory;\n            this._scrollStrategy = this._scrollStrategyFactory();\n            this.tabIndex = parseInt(tabIndex) || 0;\n            // Force setter to be called in case id was not specified.\n            this.id = this.id;\n        }\n        /** Whether the select is focused. */\n        get focused() {\n            return this._focused || this._panelOpen;\n        }\n        /** Placeholder to be shown if no value has been selected. */\n        get placeholder() { return this._placeholder; }\n        set placeholder(value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        }\n        /** Whether the component is required. */\n        get required() { return this._required; }\n        set required(value) {\n            this._required = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            this.stateChanges.next();\n        }\n        /** Whether the user should be allowed to select multiple options. */\n        get multiple() { return this._multiple; }\n        set multiple(value) {\n            if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectDynamicMultipleError();\n            }\n            this._multiple = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Whether to center the active option over the trigger. */\n        get disableOptionCentering() { return this._disableOptionCentering; }\n        set disableOptionCentering(value) {\n            this._disableOptionCentering = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /**\n         * Function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        get compareWith() { return this._compareWith; }\n        set compareWith(fn) {\n            if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonFunctionValueError();\n            }\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        }\n        /** Value of the select control. */\n        get value() { return this._value; }\n        set value(newValue) {\n            if (newValue !== this._value) {\n                if (this.options) {\n                    this._setSelectionByValue(newValue);\n                }\n                this._value = newValue;\n            }\n        }\n        /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n        get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n        set typeaheadDebounceInterval(value) {\n            this._typeaheadDebounceInterval = Object(coercion[\"f\" /* coerceNumberProperty */])(value);\n        }\n        /** Unique id of the element. */\n        get id() { return this._id; }\n        set id(value) {\n            this._id = value || this._uid;\n            this.stateChanges.next();\n        }\n        ngOnInit() {\n            this._selectionModel = new collections[\"c\" /* SelectionModel */](this.multiple);\n            this.stateChanges.next();\n            // We need `distinctUntilChanged` here, because some browsers will\n            // fire the animation end event twice for the same animation. See:\n            // https://github.com/angular/angular/issues/24084\n            this._panelDoneAnimatingStream\n                .pipe(Object(distinctUntilChanged[\"a\" /* distinctUntilChanged */])(), Object(takeUntil[\"a\" /* takeUntil */])(this._destroy))\n                .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n        }\n        ngAfterContentInit() {\n            this._initKeyManager();\n            this._selectionModel.changed.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroy)).subscribe(event => {\n                event.added.forEach(option => option.select());\n                event.removed.forEach(option => option.deselect());\n            });\n            this.options.changes.pipe(Object(startWith[\"a\" /* startWith */])(null), Object(takeUntil[\"a\" /* takeUntil */])(this._destroy)).subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n        }\n        ngDoCheck() {\n            const newAriaLabelledby = this._getTriggerAriaLabelledby();\n            // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n            // is computed as a result of a content query which can cause this binding to trigger a\n            // \"changed after checked\" error.\n            if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n                const element = this._elementRef.nativeElement;\n                this._triggerAriaLabelledBy = newAriaLabelledby;\n                if (newAriaLabelledby) {\n                    element.setAttribute('aria-labelledby', newAriaLabelledby);\n                }\n                else {\n                    element.removeAttribute('aria-labelledby');\n                }\n            }\n            if (this.ngControl) {\n                this.updateErrorState();\n            }\n        }\n        ngOnChanges(changes) {\n            // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n            // the parent form field know to run change detection when the disabled state changes.\n            if (changes['disabled']) {\n                this.stateChanges.next();\n            }\n            if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n                this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n            }\n        }\n        ngOnDestroy() {\n            this._destroy.next();\n            this._destroy.complete();\n            this.stateChanges.complete();\n        }\n        /** Toggles the overlay panel open or closed. */\n        toggle() {\n            this.panelOpen ? this.close() : this.open();\n        }\n        /** Opens the overlay panel. */\n        open() {\n            if (this._canOpen()) {\n                this._panelOpen = true;\n                this._keyManager.withHorizontalOrientation(null);\n                this._highlightCorrectOption();\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /** Closes the overlay panel and focuses the host element. */\n        close() {\n            if (this._panelOpen) {\n                this._panelOpen = false;\n                this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n                this._changeDetectorRef.markForCheck();\n                this._onTouched();\n            }\n        }\n        /**\n         * Sets the select's value. Part of the ControlValueAccessor interface\n         * required to integrate with Angular's core forms API.\n         *\n         * @param value New value to be written to the model.\n         */\n        writeValue(value) {\n            this.value = value;\n        }\n        /**\n         * Saves a callback function to be invoked when the select's value\n         * changes from user input. Part of the ControlValueAccessor interface\n         * required to integrate with Angular's core forms API.\n         *\n         * @param fn Callback to be triggered when the value changes.\n         */\n        registerOnChange(fn) {\n            this._onChange = fn;\n        }\n        /**\n         * Saves a callback function to be invoked when the select is blurred\n         * by the user. Part of the ControlValueAccessor interface required\n         * to integrate with Angular's core forms API.\n         *\n         * @param fn Callback to be triggered when the component has been touched.\n         */\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        /**\n         * Disables the select. Part of the ControlValueAccessor interface required\n         * to integrate with Angular's core forms API.\n         *\n         * @param isDisabled Sets whether the component is disabled.\n         */\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n        /** Whether or not the overlay panel is open. */\n        get panelOpen() {\n            return this._panelOpen;\n        }\n        /** The currently selected option. */\n        get selected() {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        }\n        /** The value displayed in the trigger. */\n        get triggerValue() {\n            if (this.empty) {\n                return '';\n            }\n            if (this._multiple) {\n                const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        }\n        /** Whether the element is in RTL mode. */\n        _isRtl() {\n            return this._dir ? this._dir.value === 'rtl' : false;\n        }\n        /** Handles all keydown events on the select. */\n        _handleKeydown(event) {\n            if (!this.disabled) {\n                this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n            }\n        }\n        /** Handles keyboard events while the select is closed. */\n        _handleClosedKeydown(event) {\n            const keyCode = event.keyCode;\n            const isArrowKey = keyCode === keycodes[\"c\" /* DOWN_ARROW */] || keyCode === keycodes[\"o\" /* UP_ARROW */] ||\n                keyCode === keycodes[\"h\" /* LEFT_ARROW */] || keyCode === keycodes[\"l\" /* RIGHT_ARROW */];\n            const isOpenKey = keyCode === keycodes[\"e\" /* ENTER */] || keyCode === keycodes[\"m\" /* SPACE */];\n            const manager = this._keyManager;\n            // Open the select on ALT + arrow key to match the native <select>\n            if (!manager.isTyping() && (isOpenKey && !Object(keycodes[\"r\" /* hasModifierKey */])(event)) ||\n                ((this.multiple || event.altKey) && isArrowKey)) {\n                event.preventDefault(); // prevents the page from scrolling down when pressing space\n                this.open();\n            }\n            else if (!this.multiple) {\n                const previouslySelectedOption = this.selected;\n                manager.onKeydown(event);\n                const selectedOption = this.selected;\n                // Since the value has changed, we need to announce it ourselves.\n                if (selectedOption && previouslySelectedOption !== selectedOption) {\n                    // We set a duration on the live announcement, because we want the live element to be\n                    // cleared after a while so that users can't navigate to it using the arrow keys.\n                    this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n                }\n            }\n        }\n        /** Handles keyboard events when the selected is open. */\n        _handleOpenKeydown(event) {\n            const manager = this._keyManager;\n            const keyCode = event.keyCode;\n            const isArrowKey = keyCode === keycodes[\"c\" /* DOWN_ARROW */] || keyCode === keycodes[\"o\" /* UP_ARROW */];\n            const isTyping = manager.isTyping();\n            if (isArrowKey && event.altKey) {\n                // Close the select on ALT + arrow key to match the native <select>\n                event.preventDefault();\n                this.close();\n                // Don't do anything in this case if the user is typing,\n                // because the typing sequence can include the space key.\n            }\n            else if (!isTyping && (keyCode === keycodes[\"e\" /* ENTER */] || keyCode === keycodes[\"m\" /* SPACE */]) && manager.activeItem &&\n                !Object(keycodes[\"r\" /* hasModifierKey */])(event)) {\n                event.preventDefault();\n                manager.activeItem._selectViaInteraction();\n            }\n            else if (!isTyping && this._multiple && keyCode === keycodes[\"a\" /* A */] && event.ctrlKey) {\n                event.preventDefault();\n                const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n                this.options.forEach(option => {\n                    if (!option.disabled) {\n                        hasDeselectedOptions ? option.select() : option.deselect();\n                    }\n                });\n            }\n            else {\n                const previouslyFocusedIndex = manager.activeItemIndex;\n                manager.onKeydown(event);\n                if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                    manager.activeItemIndex !== previouslyFocusedIndex) {\n                    manager.activeItem._selectViaInteraction();\n                }\n            }\n        }\n        _onFocus() {\n            if (!this.disabled) {\n                this._focused = true;\n                this.stateChanges.next();\n            }\n        }\n        /**\n         * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n         * \"blur\" to the panel when it opens, causing a false positive.\n         */\n        _onBlur() {\n            this._focused = false;\n            if (!this.disabled && !this.panelOpen) {\n                this._onTouched();\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            }\n        }\n        /**\n         * Callback that is invoked when the overlay panel has been attached.\n         */\n        _onAttached() {\n            this.overlayDir.positionChange.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._positioningSettled();\n            });\n        }\n        /** Returns the theme to be used on the panel. */\n        _getPanelTheme() {\n            return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n        }\n        /** Whether the select has a value. */\n        get empty() {\n            return !this._selectionModel || this._selectionModel.isEmpty();\n        }\n        _initializeSelection() {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n                this.stateChanges.next();\n            });\n        }\n        /**\n         * Sets the selected option based on a value. If no option can be\n         * found with the designated value, the select trigger is cleared.\n         */\n        _setSelectionByValue(value) {\n            this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n            this._selectionModel.clear();\n            if (this.multiple && value) {\n                if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getMatSelectNonArrayValueError();\n                }\n                value.forEach((currentValue) => this._selectValue(currentValue));\n                this._sortValues();\n            }\n            else {\n                const correspondingOption = this._selectValue(value);\n                // Shift focus to the active item. Note that we shouldn't do this in multiple\n                // mode, because we don't know what option the user interacted with last.\n                if (correspondingOption) {\n                    this._keyManager.updateActiveItem(correspondingOption);\n                }\n                else if (!this.panelOpen) {\n                    // Otherwise reset the highlighted option. Note that we only want to do this while\n                    // closed, because doing it while open can shift the user's focus unnecessarily.\n                    this._keyManager.updateActiveItem(-1);\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n        /**\n         * Finds and selects and option based on its value.\n         * @returns Option that has the corresponding value.\n         */\n        _selectValue(value) {\n            const correspondingOption = this.options.find((option) => {\n                try {\n                    // Treat null as a special reset value.\n                    return option.value != null && this._compareWith(option.value, value);\n                }\n                catch (error) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        // Notify developers of errors in their comparator.\n                        console.warn(error);\n                    }\n                    return false;\n                }\n            });\n            if (correspondingOption) {\n                this._selectionModel.select(correspondingOption);\n            }\n            return correspondingOption;\n        }\n        /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n        _initKeyManager() {\n            this._keyManager = new a11y[\"b\" /* ActiveDescendantKeyManager */](this.options)\n                .withTypeAhead(this._typeaheadDebounceInterval)\n                .withVerticalOrientation()\n                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n                .withHomeAndEnd()\n                .withAllowedModifierKeys(['shiftKey']);\n            this._keyManager.tabOut.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroy)).subscribe(() => {\n                if (this.panelOpen) {\n                    // Select the active item when tabbing away. This is consistent with how the native\n                    // select behaves. Note that we only want to do this in single selection mode.\n                    if (!this.multiple && this._keyManager.activeItem) {\n                        this._keyManager.activeItem._selectViaInteraction();\n                    }\n                    // Restore focus to the trigger before closing. Ensures that the focus\n                    // position won't be lost if the user got focus into the overlay.\n                    this.focus();\n                    this.close();\n                }\n            });\n            this._keyManager.change.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroy)).subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n                }\n                else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n        }\n        /** Drops current option subscriptions and IDs and resets from scratch. */\n        _resetOptions() {\n            const changedOrDestroyed = Object(merge[\"a\" /* merge */])(this.options.changes, this._destroy);\n            this.optionSelectionChanges.pipe(Object(takeUntil[\"a\" /* takeUntil */])(changedOrDestroyed)).subscribe(event => {\n                this._onSelect(event.source, event.isUserInput);\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n            // Listen to changes in the internal state of the options and react accordingly.\n            // Handles cases like the labels of the selected options changing.\n            Object(merge[\"a\" /* merge */])(...this.options.map(option => option._stateChanges))\n                .pipe(Object(takeUntil[\"a\" /* takeUntil */])(changedOrDestroyed))\n                .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n        }\n        /** Invoked when an option is clicked. */\n        _onSelect(option, isUserInput) {\n            const wasSelected = this._selectionModel.isSelected(option);\n            if (option.value == null && !this._multiple) {\n                option.deselect();\n                this._selectionModel.clear();\n                if (this.value != null) {\n                    this._propagateChanges(option.value);\n                }\n            }\n            else {\n                if (wasSelected !== option.selected) {\n                    option.selected ? this._selectionModel.select(option) :\n                        this._selectionModel.deselect(option);\n                }\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(option);\n                }\n                if (this.multiple) {\n                    this._sortValues();\n                    if (isUserInput) {\n                        // In case the user selected the option with their mouse, we\n                        // want to restore focus back to the trigger, in order to\n                        // prevent the select keyboard controls from clashing with\n                        // the ones from `mat-option`.\n                        this.focus();\n                    }\n                }\n            }\n            if (wasSelected !== this._selectionModel.isSelected(option)) {\n                this._propagateChanges();\n            }\n            this.stateChanges.next();\n        }\n        /** Sorts the selected values in the selected based on their order in the panel. */\n        _sortValues() {\n            if (this.multiple) {\n                const options = this.options.toArray();\n                this._selectionModel.sort((a, b) => {\n                    return this.sortComparator ? this.sortComparator(a, b, options) :\n                        options.indexOf(a) - options.indexOf(b);\n                });\n                this.stateChanges.next();\n            }\n        }\n        /** Emits change event to set the model value. */\n        _propagateChanges(fallbackValue) {\n            let valueToEmit = null;\n            if (this.multiple) {\n                valueToEmit = this.selected.map(option => option.value);\n            }\n            else {\n                valueToEmit = this.selected ? this.selected.value : fallbackValue;\n            }\n            this._value = valueToEmit;\n            this.valueChange.emit(valueToEmit);\n            this._onChange(valueToEmit);\n            this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n            this._changeDetectorRef.markForCheck();\n        }\n        /**\n         * Highlights the selected item. If no option is selected, it will highlight\n         * the first item instead.\n         */\n        _highlightCorrectOption() {\n            if (this._keyManager) {\n                if (this.empty) {\n                    this._keyManager.setFirstItemActive();\n                }\n                else {\n                    this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n                }\n            }\n        }\n        /** Whether the panel is allowed to open. */\n        _canOpen() {\n            var _a;\n            return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        }\n        /** Focuses the select element. */\n        focus(options) {\n            this._elementRef.nativeElement.focus(options);\n        }\n        /** Gets the aria-labelledby for the select panel. */\n        _getPanelAriaLabelledby() {\n            if (this.ariaLabel) {\n                return null;\n            }\n            const labelId = this._getLabelId();\n            return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;\n        }\n        /** Determines the `aria-activedescendant` to be set on the host. */\n        _getAriaActiveDescendant() {\n            if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n                return this._keyManager.activeItem.id;\n            }\n            return null;\n        }\n        /** Gets the ID of the element that is labelling the select. */\n        _getLabelId() {\n            var _a;\n            return ((_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId()) || '';\n        }\n        /** Gets the aria-labelledby of the select component trigger. */\n        _getTriggerAriaLabelledby() {\n            if (this.ariaLabel) {\n                return null;\n            }\n            let value = this._getLabelId() + ' ' + this._valueId;\n            if (this.ariaLabelledby) {\n                value += ' ' + this.ariaLabelledby;\n            }\n            return value;\n        }\n        /** Called when the overlay panel is done animating. */\n        _panelDoneAnimating(isOpen) {\n            this.openedChange.emit(isOpen);\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        setDescribedByIds(ids) {\n            this._ariaDescribedby = ids.join(' ');\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        onContainerClick() {\n            this.focus();\n            this.open();\n        }\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get shouldLabelFloat() {\n            return this._panelOpen || !this.empty;\n        }\n    }\n    _MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(core[\"Qb\" /* ɵɵdirectiveInject */](scrolling[\"h\" /* ViewportRuler */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"B\" /* NgZone */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"d\" /* ErrorStateMatcher */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"o\" /* NgForm */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"h\" /* FormGroupDirective */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](form_field[\"a\" /* MAT_FORM_FIELD */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"l\" /* NgControl */], 10), core[\"bc\" /* ɵɵinjectAttribute */]('tabindex'), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_SELECT_SCROLL_STRATEGY), core[\"Qb\" /* ɵɵdirectiveInject */](a11y[\"k\" /* LiveAnnouncer */]), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_SELECT_CONFIG, 8)); };\n    _MatSelectBase.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](_c0, 1);\n                core[\"Lc\" /* ɵɵviewQuery */](_c1, 1);\n                core[\"Lc\" /* ɵɵviewQuery */](overlay[\"a\" /* CdkConnectedOverlay */], 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.trigger = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.panel = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.overlayDir = _t.first);\n            }\n        }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return _MatSelectBase;\n})();\nlet select_MatSelect = /*@__PURE__*/ (() => {\n    class MatSelect extends select_MatSelectBase {\n        constructor() {\n            super(...arguments);\n            /** The scroll position of the overlay panel, calculated to center the selected option. */\n            this._scrollTop = 0;\n            /** The cached font-size of the trigger element. */\n            this._triggerFontSize = 0;\n            /** The value of the select panel's transform-origin property. */\n            this._transformOrigin = 'top';\n            /**\n             * The y-offset of the overlay panel in relation to the trigger's top start corner.\n             * This must be adjusted to align the selected option text over the trigger text.\n             * when the panel opens. Will change based on the y-position of the selected option.\n             */\n            this._offsetY = 0;\n            this._positions = [\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'bottom',\n                },\n            ];\n        }\n        /**\n         * Calculates the scroll position of the select's overlay panel.\n         *\n         * Attempts to center the selected option in the panel. If the option is\n         * too high or too low in the panel to be scrolled to the center, it clamps the\n         * scroll position to the min or max scroll positions respectively.\n         */\n        _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n            const halfOptionHeight = itemHeight / 2;\n            // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n            // scroll container, then subtracts the scroll buffer to scroll the option down to\n            // the center of the overlay panel. Half the option height must be re-added to the\n            // scrollTop so the option is centered based on its middle, not its top edge.\n            const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n            return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n        }\n        ngOnInit() {\n            super.ngOnInit();\n            this._viewportRuler.change().pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroy)).subscribe(() => {\n                if (this.panelOpen) {\n                    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n        }\n        open() {\n            if (super._canOpen()) {\n                super.open();\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n                // `parseInt` ignores the trailing 'px' and converts this to a number.\n                this._triggerFontSize =\n                    parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n                this._calculateOverlayPosition();\n                // Set the font size on the panel element once it exists.\n                this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                    if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                        this.overlayDir.overlayRef.overlayElement) {\n                        this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                    }\n                });\n            }\n        }\n        /** Scrolls the active option into view. */\n        _scrollOptionIntoView(index) {\n            const labelCount = Object(fesm2015_core[\"t\" /* _countGroupLabelsBeforeOption */])(index, this.options, this.optionGroups);\n            const itemHeight = this._getItemHeight();\n            this.panel.nativeElement.scrollTop = Object(fesm2015_core[\"u\" /* _getOptionScrollPosition */])((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n        _positioningSettled() {\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }\n        _panelDoneAnimating(isOpen) {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n            }\n            else {\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n            super._panelDoneAnimating(isOpen);\n        }\n        _getChangeEvent(value) {\n            return new MatSelectChange(this, value);\n        }\n        /**\n         * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text when\n         * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n         * can't be calculated until the panel has been attached, because we need to know the\n         * content width in order to constrain the panel within the viewport.\n         */\n        _calculateOverlayOffsetX() {\n            const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n            const viewportSize = this._viewportRuler.getViewportSize();\n            const isRtl = this._isRtl();\n            const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                SELECT_PANEL_PADDING_X * 2;\n            let offsetX;\n            // Adjust the offset, depending on the option padding.\n            if (this.multiple) {\n                offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n            }\n            else if (this.disableOptionCentering) {\n                offsetX = SELECT_PANEL_PADDING_X;\n            }\n            else {\n                let selected = this._selectionModel.selected[0] || this.options.first;\n                offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n            }\n            // Invert the offset in LTR.\n            if (!isRtl) {\n                offsetX *= -1;\n            }\n            // Determine how much the select overflows on each side.\n            const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n            const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n                + (isRtl ? 0 : paddingWidth);\n            // If the element overflows on either side, reduce the offset to allow it to fit.\n            if (leftOverflow > 0) {\n                offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n            }\n            else if (rightOverflow > 0) {\n                offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n            }\n            // Set the offset directly in order to avoid having to go through change detection and\n            // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n            // blurry content in some browsers.\n            this.overlayDir.offsetX = Math.round(offsetX);\n            this.overlayDir.overlayRef.updatePosition();\n        }\n        /**\n         * Calculates the y-offset of the select's overlay panel in relation to the\n         * top start corner of the trigger. It has to be adjusted in order for the\n         * selected option to be aligned over the trigger when the panel opens.\n         */\n        _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n            const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n            let optionOffsetFromPanelTop;\n            // Disable offset if requested by user by returning 0 as value to offset\n            if (this.disableOptionCentering) {\n                return 0;\n            }\n            if (this._scrollTop === 0) {\n                optionOffsetFromPanelTop = selectedIndex * itemHeight;\n            }\n            else if (this._scrollTop === maxScroll) {\n                const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n                const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n                // The first item is partially out of the viewport. Therefore we need to calculate what\n                // portion of it is shown in the viewport and account for it in our offset.\n                let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n                // Because the panel height is longer than the height of the options alone,\n                // there is always extra padding at the top or bottom of the panel. When\n                // scrolled to the very bottom, this padding is at the top of the panel and\n                // must be added to the offset.\n                optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n            }\n            else {\n                // If the option was scrolled to the middle of the panel using a scroll buffer,\n                // its offset will be the scroll buffer minus the half height that was added to\n                // center it.\n                optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n            }\n            // The final offset is the option's offset from the top, adjusted for the height difference,\n            // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n            // The value is rounded to prevent some browsers from blurring the content.\n            return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n        }\n        /**\n         * Checks that the attempted overlay position will fit within the viewport.\n         * If it will not fit, tries to adjust the scroll position and the associated\n         * y-offset so the panel can open fully on-screen. If it still won't fit,\n         * sets the offset back to 0 to allow the fallback position to take over.\n         */\n        _checkOverlayWithinViewport(maxScroll) {\n            const itemHeight = this._getItemHeight();\n            const viewportSize = this._viewportRuler.getViewportSize();\n            const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n            const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n            const panelHeightTop = Math.abs(this._offsetY);\n            const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n            const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n            if (panelHeightBottom > bottomSpaceAvailable) {\n                this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n            }\n            else if (panelHeightTop > topSpaceAvailable) {\n                this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n            }\n            else {\n                this._transformOrigin = this._getOriginBasedOnOption();\n            }\n        }\n        /** Adjusts the overlay panel up to fit in the viewport. */\n        _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n            // Browsers ignore fractional scroll offsets, so we need to round.\n            const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n            // Scrolls the panel up by the distance it was extending past the boundary, then\n            // adjusts the offset by that amount to move the panel up into the viewport.\n            this._scrollTop -= distanceBelowViewport;\n            this._offsetY -= distanceBelowViewport;\n            this._transformOrigin = this._getOriginBasedOnOption();\n            // If the panel is scrolled to the very top, it won't be able to fit the panel\n            // by scrolling, so set the offset to 0 to allow the fallback position to take\n            // effect.\n            if (this._scrollTop <= 0) {\n                this._scrollTop = 0;\n                this._offsetY = 0;\n                this._transformOrigin = `50% bottom 0px`;\n            }\n        }\n        /** Adjusts the overlay panel down to fit in the viewport. */\n        _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n            // Browsers ignore fractional scroll offsets, so we need to round.\n            const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n            // Scrolls the panel down by the distance it was extending past the boundary, then\n            // adjusts the offset by that amount to move the panel down into the viewport.\n            this._scrollTop += distanceAboveViewport;\n            this._offsetY += distanceAboveViewport;\n            this._transformOrigin = this._getOriginBasedOnOption();\n            // If the panel is scrolled to the very bottom, it won't be able to fit the\n            // panel by scrolling, so set the offset to 0 to allow the fallback position\n            // to take effect.\n            if (this._scrollTop >= maxScroll) {\n                this._scrollTop = maxScroll;\n                this._offsetY = 0;\n                this._transformOrigin = `50% top 0px`;\n                return;\n            }\n        }\n        /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n        _calculateOverlayPosition() {\n            const itemHeight = this._getItemHeight();\n            const items = this._getItemCount();\n            const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n            const scrollContainerHeight = items * itemHeight;\n            // The farthest the panel can be scrolled before it hits the bottom\n            const maxScroll = scrollContainerHeight - panelHeight;\n            // If no value is selected we open the popup to the first item.\n            let selectedOptionOffset;\n            if (this.empty) {\n                selectedOptionOffset = 0;\n            }\n            else {\n                selectedOptionOffset =\n                    Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n            }\n            selectedOptionOffset += Object(fesm2015_core[\"t\" /* _countGroupLabelsBeforeOption */])(selectedOptionOffset, this.options, this.optionGroups);\n            // We must maintain a scroll buffer so the selected option will be scrolled to the\n            // center of the overlay panel rather than the top.\n            const scrollBuffer = panelHeight / 2;\n            this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n            this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n            this._checkOverlayWithinViewport(maxScroll);\n        }\n        /** Sets the transform origin point based on the selected option. */\n        _getOriginBasedOnOption() {\n            const itemHeight = this._getItemHeight();\n            const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n            const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n            return `50% ${originY}px 0px`;\n        }\n        /** Calculates the height of the select's options. */\n        _getItemHeight() {\n            return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n        }\n        /** Calculates the amount of items in the select. This includes options and group labels. */\n        _getItemCount() {\n            return this.options.length + this.optionGroups.length;\n        }\n    }\n    MatSelect.ɵfac = function MatSelect_Factory(t) { return ɵMatSelect_BaseFactory(t || MatSelect); };\n    MatSelect.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, MAT_SELECT_TRIGGER, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, fesm2015_core[\"m\" /* MatOption */], 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, fesm2015_core[\"g\" /* MAT_OPTGROUP */], 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.customTrigger = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.options = _t);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.optionGroups = _t);\n            }\n        }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n            }\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n            }\n        }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: form_field[\"d\" /* MatFormFieldControl */], useExisting: MatSelect },\n                { provide: fesm2015_core[\"h\" /* MAT_OPTION_PARENT_COMPONENT */], useExisting: MatSelect }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](_c2);\n                core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0, 1);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n                core[\"Wb\" /* ɵɵelementStart */](3, \"div\", 2);\n                core[\"Gc\" /* ɵɵtemplate */](4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](6, \"div\", 5);\n                core[\"Rb\" /* ɵɵelement */](7, \"div\", 6);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n                core[\"ec\" /* ɵɵlistener */](\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n            }\n            if (rf & 2) {\n                const _r0 = core[\"vc\" /* ɵɵreference */](1);\n                core[\"Eb\" /* ɵɵattribute */](\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitch\", ctx.empty);\n                core[\"Eb\" /* ɵɵattribute */](\"id\", ctx._valueId);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", true);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", false);\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n            }\n        }, directives: [overlay[\"b\" /* CdkOverlayOrigin */], common[\"o\" /* NgSwitch */], common[\"p\" /* NgSwitchCase */], overlay[\"a\" /* CdkConnectedOverlay */], common[\"q\" /* NgSwitchDefault */], common[\"k\" /* NgClass */]], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n                matSelectAnimations.transformPanelWrap,\n                matSelectAnimations.transformPanel\n            ] }, changeDetection: 0 });\n    return MatSelect;\n})();\nconst ɵMatSelect_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](select_MatSelect);\nlet select_MatSelectModule = /*@__PURE__*/ (() => {\n    class MatSelectModule {\n    }\n    MatSelectModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatSelectModule });\n    MatSelectModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n                common[\"c\" /* CommonModule */],\n                overlay[\"f\" /* OverlayModule */],\n                fesm2015_core[\"n\" /* MatOptionModule */],\n                fesm2015_core[\"j\" /* MatCommonModule */],\n            ], scrolling[\"c\" /* CdkScrollableModule */],\n            form_field[\"e\" /* MatFormFieldModule */],\n            fesm2015_core[\"n\" /* MatOptionModule */],\n            fesm2015_core[\"j\" /* MatCommonModule */]] });\n    return MatSelectModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](select_MatSelectModule, { declarations: function () { return [select_MatSelect, select_MatSelectTrigger]; }, imports: function () {\n            return [common[\"c\" /* CommonModule */],\n                overlay[\"f\" /* OverlayModule */],\n                fesm2015_core[\"n\" /* MatOptionModule */],\n                fesm2015_core[\"j\" /* MatCommonModule */]];\n        }, exports: function () {\n            return [scrolling[\"c\" /* CdkScrollableModule */],\n                form_field[\"e\" /* MatFormFieldModule */], select_MatSelect, select_MatSelectTrigger, fesm2015_core[\"n\" /* MatOptionModule */],\n                fesm2015_core[\"j\" /* MatCommonModule */]];\n        } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=select.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/portal.js\nvar fesm2015_portal = __webpack_require__(\"1z/I\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/fesm2015/dialog.js\nvar fesm2015_dialog = __webpack_require__(\"iELJ\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subscription.js + 1 modules\nvar Subscription = __webpack_require__(\"quSY\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/fesm2015/datepicker.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\n\n\n\n\n\n\n\n\n\n\n\nconst datepicker_c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"tr\", 2);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"td\", 3);\n        core[\"Ic\" /* ɵɵtext */](2);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Dc\" /* ɵɵstyleProp */](\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n        core[\"Eb\" /* ɵɵattribute */](\"colspan\", ctx_r0.numCols);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r0.label, \" \");\n    }\n}\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 7);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"ic\" /* ɵɵnextContext */](2);\n        core[\"Dc\" /* ɵɵstyleProp */](\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n        core[\"Eb\" /* ɵɵattribute */](\"colspan\", ctx_r4._firstRowOffset);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n    }\n}\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"td\", 8);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r9); const item_r6 = ctx.$implicit; const ctx_r8 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r8._cellClicked(item_r6, $event); });\n        core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 9);\n        core[\"Ic\" /* ɵɵtext */](2);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](3, \"div\", 10);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const item_r6 = ctx.$implicit;\n        const colIndex_r7 = ctx.index;\n        const rowIndex_r3 = core[\"ic\" /* ɵɵnextContext */]().index;\n        const ctx_r5 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Dc\" /* ɵɵstyleProp */](\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n        core[\"Ib\" /* ɵɵclassProp */](\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n        core[\"pc\" /* ɵɵproperty */](\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n        core[\"Eb\" /* ɵɵattribute */](\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Ib\" /* ɵɵclassProp */](\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\" \", item_r6.displayValue, \" \");\n    }\n}\nfunction MatCalendarBody_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"tr\", 4);\n        core[\"Gc\" /* ɵɵtemplate */](1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n        core[\"Gc\" /* ɵɵtemplate */](2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const row_r2 = ctx.$implicit;\n        const rowIndex_r3 = ctx.index;\n        const ctx_r1 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngForOf\", row_r2);\n    }\n}\nfunction MatMonthView_th_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"th\", 5);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const day_r1 = ctx.$implicit;\n        core[\"Eb\" /* ɵɵattribute */](\"aria-label\", day_r1.long);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](day_r1.narrow);\n    }\n}\nconst datepicker_c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-month-view\", 5);\n        core[\"ec\" /* ɵɵlistener */](\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r5); const ctx_r4 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r5); const ctx_r6 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r6._dateSelected($event); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n    }\n}\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-year-view\", 6);\n        core[\"ec\" /* ɵɵlistener */](\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r8); const ctx_r7 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r8); const ctx_r9 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r8); const ctx_r10 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r10._goToDateInView($event, \"month\"); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n    }\n}\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-multi-year-view\", 7);\n        core[\"ec\" /* ɵɵlistener */](\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r12); const ctx_r11 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r12); const ctx_r13 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r12); const ctx_r14 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r14._goToDateInView($event, \"year\"); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n    }\n}\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) { }\nconst datepicker_c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"hc\" /* ɵɵnamespaceSVG */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"svg\", 3);\n        core[\"Rb\" /* ɵɵelement */](1, \"path\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n}\nconst datepicker_c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0);\n        core[\"nc\" /* ɵɵprojection */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\nlet datepicker_MatDatepickerIntl = /*@__PURE__*/ (() => {\n    class MatDatepickerIntl {\n        constructor() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new Subject[\"a\" /* Subject */]();\n            /** A label for the calendar popup (used by screen readers). */\n            this.calendarLabel = 'Calendar';\n            /** A label for the button used to open the calendar popup (used by screen readers). */\n            this.openCalendarLabel = 'Open calendar';\n            /** Label for the button used to close the calendar popup. */\n            this.closeCalendarLabel = 'Close calendar';\n            /** A label for the previous month button (used by screen readers). */\n            this.prevMonthLabel = 'Previous month';\n            /** A label for the next month button (used by screen readers). */\n            this.nextMonthLabel = 'Next month';\n            /** A label for the previous year button (used by screen readers). */\n            this.prevYearLabel = 'Previous year';\n            /** A label for the next year button (used by screen readers). */\n            this.nextYearLabel = 'Next year';\n            /** A label for the previous multi-year button (used by screen readers). */\n            this.prevMultiYearLabel = 'Previous 20 years';\n            /** A label for the next multi-year button (used by screen readers). */\n            this.nextMultiYearLabel = 'Next 20 years';\n            /** A label for the 'switch to month view' button (used by screen readers). */\n            this.switchToMonthViewLabel = 'Choose date';\n            /** A label for the 'switch to year view' button (used by screen readers). */\n            this.switchToMultiYearViewLabel = 'Choose month and year';\n        }\n        /** Formats a range of years. */\n        formatYearRange(start, end) {\n            return `${start} \\u2013 ${end}`;\n        }\n    }\n    MatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n    MatDatepickerIntl.ɵprov = /*@__PURE__*/ Object(core[\"Mb\" /* ɵɵdefineInjectable */])({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n    return MatDatepickerIntl;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\nlet datepicker_MatCalendarBody = /*@__PURE__*/ (() => {\n    class MatCalendarBody {\n        constructor(_elementRef, _ngZone) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            /** The number of columns in the table. */\n            this.numCols = 7;\n            /** The cell number of the active cell in the table. */\n            this.activeCell = 0;\n            /** Whether a range is being selected. */\n            this.isRange = false;\n            /**\n             * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n             * maintained even as the table resizes.\n             */\n            this.cellAspectRatio = 1;\n            /** Start of the preview range. */\n            this.previewStart = null;\n            /** End of the preview range. */\n            this.previewEnd = null;\n            /** Emits when a new value is selected. */\n            this.selectedValueChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when the preview has changed as a result of a user action. */\n            this.previewChange = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Event handler for when the user enters an element\n             * inside the calendar body (e.g. by hovering in or focus).\n             */\n            this._enterHandler = (event) => {\n                if (this._skipNextFocus && event.type === 'focus') {\n                    this._skipNextFocus = false;\n                    return;\n                }\n                // We only need to hit the zone when we're selecting a range.\n                if (event.target && this.isRange) {\n                    const cell = this._getCellFromElement(event.target);\n                    if (cell) {\n                        this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                    }\n                }\n            };\n            /**\n             * Event handler for when the user's pointer leaves an element\n             * inside the calendar body (e.g. by hovering out or blurring).\n             */\n            this._leaveHandler = (event) => {\n                // We only need to hit the zone when we're selecting a range.\n                if (this.previewEnd !== null && this.isRange) {\n                    // Only reset the preview end value when leaving cells. This looks better, because\n                    // we have a gap between the cells and the rows and we don't want to remove the\n                    // range just for it to show up again when the user moves a few pixels to the side.\n                    if (event.target && isTableCell(event.target)) {\n                        this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                    }\n                }\n            };\n            _ngZone.runOutsideAngular(() => {\n                const element = _elementRef.nativeElement;\n                element.addEventListener('mouseenter', this._enterHandler, true);\n                element.addEventListener('focus', this._enterHandler, true);\n                element.addEventListener('mouseleave', this._leaveHandler, true);\n                element.addEventListener('blur', this._leaveHandler, true);\n            });\n        }\n        /** Called when a cell is clicked. */\n        _cellClicked(cell, event) {\n            if (cell.enabled) {\n                this.selectedValueChange.emit({ value: cell.value, event });\n            }\n        }\n        /** Returns whether a cell should be marked as selected. */\n        _isSelected(value) {\n            return this.startValue === value || this.endValue === value;\n        }\n        ngOnChanges(changes) {\n            const columnChanges = changes['numCols'];\n            const { rows, numCols } = this;\n            if (changes['rows'] || columnChanges) {\n                this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n            }\n            if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n                this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n            }\n            if (columnChanges || !this._cellWidth) {\n                this._cellWidth = `${100 / numCols}%`;\n            }\n        }\n        ngOnDestroy() {\n            const element = this._elementRef.nativeElement;\n            element.removeEventListener('mouseenter', this._enterHandler, true);\n            element.removeEventListener('focus', this._enterHandler, true);\n            element.removeEventListener('mouseleave', this._leaveHandler, true);\n            element.removeEventListener('blur', this._leaveHandler, true);\n        }\n        /** Returns whether a cell is active. */\n        _isActiveCell(rowIndex, colIndex) {\n            let cellNumber = rowIndex * this.numCols + colIndex;\n            // Account for the fact that the first row may not have as many cells.\n            if (rowIndex) {\n                cellNumber -= this._firstRowOffset;\n            }\n            return cellNumber == this.activeCell;\n        }\n        /** Focuses the active cell after the microtask queue is empty. */\n        _focusActiveCell(movePreview = true) {\n            this._ngZone.runOutsideAngular(() => {\n                this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                    const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                    if (activeCell) {\n                        if (!movePreview) {\n                            this._skipNextFocus = true;\n                        }\n                        activeCell.focus();\n                    }\n                });\n            });\n        }\n        /** Gets whether a value is the start of the main range. */\n        _isRangeStart(value) {\n            return isStart(value, this.startValue, this.endValue);\n        }\n        /** Gets whether a value is the end of the main range. */\n        _isRangeEnd(value) {\n            return isEnd(value, this.startValue, this.endValue);\n        }\n        /** Gets whether a value is within the currently-selected range. */\n        _isInRange(value) {\n            return isInRange(value, this.startValue, this.endValue, this.isRange);\n        }\n        /** Gets whether a value is the start of the comparison range. */\n        _isComparisonStart(value) {\n            return isStart(value, this.comparisonStart, this.comparisonEnd);\n        }\n        /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n        _isComparisonBridgeStart(value, rowIndex, colIndex) {\n            if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n                return false;\n            }\n            let previousCell = this.rows[rowIndex][colIndex - 1];\n            if (!previousCell) {\n                const previousRow = this.rows[rowIndex - 1];\n                previousCell = previousRow && previousRow[previousRow.length - 1];\n            }\n            return previousCell && !this._isRangeEnd(previousCell.compareValue);\n        }\n        /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n        _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n            if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n                return false;\n            }\n            let nextCell = this.rows[rowIndex][colIndex + 1];\n            if (!nextCell) {\n                const nextRow = this.rows[rowIndex + 1];\n                nextCell = nextRow && nextRow[0];\n            }\n            return nextCell && !this._isRangeStart(nextCell.compareValue);\n        }\n        /** Gets whether a value is the end of the comparison range. */\n        _isComparisonEnd(value) {\n            return isEnd(value, this.comparisonStart, this.comparisonEnd);\n        }\n        /** Gets whether a value is within the current comparison range. */\n        _isInComparisonRange(value) {\n            return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n        }\n        /**\n         * Gets whether a value is the same as the start and end of the comparison range.\n         * For context, the functions that we use to determine whether something is the start/end of\n         * a range don't allow for the start and end to be on the same day, because we'd have to use\n         * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n         * the regular range, because when it happens, the selected styles take over and still show where\n         * the range would've been, however we don't have these selected styles for a comparison range.\n         * This function is used to apply a class that serves the same purpose as the one for selected\n         * dates, but it only applies in the context of a comparison range.\n         */\n        _isComparisonIdentical(value) {\n            // Note that we don't need to null check the start/end\n            // here, because the `value` will always be defined.\n            return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n        }\n        /** Gets whether a value is the start of the preview range. */\n        _isPreviewStart(value) {\n            return isStart(value, this.previewStart, this.previewEnd);\n        }\n        /** Gets whether a value is the end of the preview range. */\n        _isPreviewEnd(value) {\n            return isEnd(value, this.previewStart, this.previewEnd);\n        }\n        /** Gets whether a value is inside the preview range. */\n        _isInPreview(value) {\n            return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n        }\n        /** Finds the MatCalendarCell that corresponds to a DOM node. */\n        _getCellFromElement(element) {\n            let cell;\n            if (isTableCell(element)) {\n                cell = element;\n            }\n            else if (isTableCell(element.parentNode)) {\n                cell = element.parentNode;\n            }\n            if (cell) {\n                const row = cell.getAttribute('data-mat-row');\n                const col = cell.getAttribute('data-mat-col');\n                if (row && col) {\n                    return this.rows[parseInt(row)][parseInt(col)];\n                }\n            }\n            return null;\n        }\n    }\n    MatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"B\" /* NgZone */])); };\n    MatCalendarBody.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]], attrs: datepicker_c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n                core[\"Gc\" /* ɵɵtemplate */](1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngForOf\", ctx.rows);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"l\" /* NgForOf */], common[\"k\" /* NgClass */]], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatCalendarBody;\n})();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\nlet datepicker_MatDateSelectionModel = /*@__PURE__*/ (() => {\n    class MatDateSelectionModel {\n        constructor(\n        /** The current selection. */\n        selection, _adapter) {\n            this.selection = selection;\n            this._adapter = _adapter;\n            this._selectionChanged = new Subject[\"a\" /* Subject */]();\n            /** Emits when the selection has changed. */\n            this.selectionChanged = this._selectionChanged;\n            this.selection = selection;\n        }\n        /**\n         * Updates the current selection in the model.\n         * @param value New selection that should be assigned.\n         * @param source Object that triggered the selection change.\n         */\n        updateSelection(value, source) {\n            this.selection = value;\n            this._selectionChanged.next({ selection: value, source });\n        }\n        ngOnDestroy() {\n            this._selectionChanged.complete();\n        }\n        _isValidDateInstance(date) {\n            return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n        }\n        /**\n         * Clones the selection model.\n         * @deprecated To be turned into an abstract method.\n         * @breaking-change 12.0.0\n         */\n        clone() {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw Error('Not implemented');\n            }\n            return null;\n        }\n    }\n    MatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(core[\"Qb\" /* ɵɵdirectiveInject */](undefined), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */])); };\n    MatDateSelectionModel.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDateSelectionModel });\n    return MatDateSelectionModel;\n})();\nlet datepicker_MatSingleDateSelectionModel = /*@__PURE__*/ (() => {\n    class MatSingleDateSelectionModel extends datepicker_MatDateSelectionModel {\n        constructor(adapter) {\n            super(null, adapter);\n        }\n        /**\n         * Adds a date to the current selection. In the case of a single date selection, the added date\n         * simply overwrites the previous selection\n         */\n        add(date) {\n            super.updateSelection(date, this);\n        }\n        /** Checks whether the current selection is valid. */\n        isValid() {\n            return this.selection != null && this._isValidDateInstance(this.selection);\n        }\n        /**\n         * Checks whether the current selection is complete. In the case of a single date selection, this\n         * is true if the current selection is not null.\n         */\n        isComplete() {\n            return this.selection != null;\n        }\n        /** Clones the selection model. */\n        clone() {\n            const clone = new MatSingleDateSelectionModel(this._adapter);\n            clone.updateSelection(this.selection, this);\n            return clone;\n        }\n    }\n    MatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(core[\"ac\" /* ɵɵinject */](fesm2015_core[\"c\" /* DateAdapter */])); };\n    MatSingleDateSelectionModel.ɵprov = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjectable */]({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\n    return MatSingleDateSelectionModel;\n})();\nlet datepicker_MatRangeDateSelectionModel = /*@__PURE__*/ (() => {\n    class MatRangeDateSelectionModel extends datepicker_MatDateSelectionModel {\n        constructor(adapter) {\n            super(new DateRange(null, null), adapter);\n        }\n        /**\n         * Adds a date to the current selection. In the case of a date range selection, the added date\n         * fills in the next `null` value in the range. If both the start and the end already have a date,\n         * the selection is reset so that the given date is the new `start` and the `end` is null.\n         */\n        add(date) {\n            let { start, end } = this.selection;\n            if (start == null) {\n                start = date;\n            }\n            else if (end == null) {\n                end = date;\n            }\n            else {\n                start = date;\n                end = null;\n            }\n            super.updateSelection(new DateRange(start, end), this);\n        }\n        /** Checks whether the current selection is valid. */\n        isValid() {\n            const { start, end } = this.selection;\n            // Empty ranges are valid.\n            if (start == null && end == null) {\n                return true;\n            }\n            // Complete ranges are only valid if both dates are valid and the start is before the end.\n            if (start != null && end != null) {\n                return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                    this._adapter.compareDate(start, end) <= 0;\n            }\n            // Partial ranges are valid if the start/end is valid.\n            return (start == null || this._isValidDateInstance(start)) &&\n                (end == null || this._isValidDateInstance(end));\n        }\n        /**\n         * Checks whether the current selection is complete. In the case of a date range selection, this\n         * is true if the current selection has a non-null `start` and `end`.\n         */\n        isComplete() {\n            return this.selection.start != null && this.selection.end != null;\n        }\n        /** Clones the selection model. */\n        clone() {\n            const clone = new MatRangeDateSelectionModel(this._adapter);\n            clone.updateSelection(this.selection, this);\n            return clone;\n        }\n    }\n    MatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(core[\"ac\" /* ɵɵinject */](fesm2015_core[\"c\" /* DateAdapter */])); };\n    MatRangeDateSelectionModel.ɵprov = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjectable */]({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\n    return MatRangeDateSelectionModel;\n})();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new datepicker_MatSingleDateSelectionModel(adapter);\n}\n/** Used to provide a single selection model to a component. */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: datepicker_MatDateSelectionModel,\n    deps: [[/*@__PURE__*/ new core[\"C\" /* Optional */](), /*@__PURE__*/ new core[\"M\" /* SkipSelf */](), datepicker_MatDateSelectionModel], fesm2015_core[\"c\" /* DateAdapter */]],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new datepicker_MatRangeDateSelectionModel(adapter);\n}\n/** Used to provide a range selection model to a component. */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: datepicker_MatDateSelectionModel,\n    deps: [[/*@__PURE__*/ new core[\"C\" /* Optional */](), /*@__PURE__*/ new core[\"M\" /* SkipSelf */](), datepicker_MatDateSelectionModel], fesm2015_core[\"c\" /* DateAdapter */]],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MAT_DATE_RANGE_SELECTION_STRATEGY');\nlet datepicker_DefaultMatCalendarRangeStrategy = /*@__PURE__*/ (() => {\n    class DefaultMatCalendarRangeStrategy {\n        constructor(_dateAdapter) {\n            this._dateAdapter = _dateAdapter;\n        }\n        selectionFinished(date, currentRange) {\n            let { start, end } = currentRange;\n            if (start == null) {\n                start = date;\n            }\n            else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n                end = date;\n            }\n            else {\n                start = date;\n                end = null;\n            }\n            return new DateRange(start, end);\n        }\n        createPreview(activeDate, currentRange) {\n            let start = null;\n            let end = null;\n            if (currentRange.start && !currentRange.end && activeDate) {\n                start = currentRange.start;\n                end = activeDate;\n            }\n            return new DateRange(start, end);\n        }\n    }\n    DefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(core[\"ac\" /* ɵɵinject */](fesm2015_core[\"c\" /* DateAdapter */])); };\n    DefaultMatCalendarRangeStrategy.ɵprov = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjectable */]({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\n    return DefaultMatCalendarRangeStrategy;\n})();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new datepicker_DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[/*@__PURE__*/ new core[\"C\" /* Optional */](), /*@__PURE__*/ new core[\"M\" /* SkipSelf */](), MAT_DATE_RANGE_SELECTION_STRATEGY], fesm2015_core[\"c\" /* DateAdapter */]],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\nlet datepicker_MatMonthView = /*@__PURE__*/ (() => {\n    class MatMonthView {\n        constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n            this._changeDetectorRef = _changeDetectorRef;\n            this._dateFormats = _dateFormats;\n            this._dateAdapter = _dateAdapter;\n            this._dir = _dir;\n            this._rangeStrategy = _rangeStrategy;\n            this._rerenderSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** Emits when a new date is selected. */\n            this.selectedChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when any date is selected. */\n            this._userSelection = new core[\"o\" /* EventEmitter */]();\n            /** Emits when any date is activated. */\n            this.activeDateChange = new core[\"o\" /* EventEmitter */]();\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._dateAdapter) {\n                    throw createMissingDateImplError('DateAdapter');\n                }\n                if (!this._dateFormats) {\n                    throw createMissingDateImplError('MAT_DATE_FORMATS');\n                }\n            }\n            this._activeDate = this._dateAdapter.today();\n        }\n        /**\n         * The date to display in this month view (everything other than the month and year is ignored).\n         */\n        get activeDate() { return this._activeDate; }\n        set activeDate(value) {\n            const oldActiveDate = this._activeDate;\n            const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n                this._init();\n            }\n        }\n        /** The currently selected date. */\n        get selected() { return this._selected; }\n        set selected(value) {\n            if (value instanceof DateRange) {\n                this._selected = value;\n            }\n            else {\n                this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            }\n            this._setRanges(this._selected);\n        }\n        /** The minimum selectable date. */\n        get minDate() { return this._minDate; }\n        set minDate(value) {\n            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** The maximum selectable date. */\n        get maxDate() { return this._maxDate; }\n        set maxDate(value) {\n            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        ngAfterContentInit() {\n            this._rerenderSubscription = this._dateAdapter.localeChanges\n                .pipe(Object(startWith[\"a\" /* startWith */])(null))\n                .subscribe(() => this._init());\n        }\n        ngOnChanges(changes) {\n            const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n            if (comparisonChange && !comparisonChange.firstChange) {\n                this._setRanges(this.selected);\n            }\n        }\n        ngOnDestroy() {\n            this._rerenderSubscription.unsubscribe();\n        }\n        /** Handles when a new date is selected. */\n        _dateSelected(event) {\n            const date = event.value;\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            let rangeStartDate;\n            let rangeEndDate;\n            if (this._selected instanceof DateRange) {\n                rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n                rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n            }\n            else {\n                rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n            }\n            if (rangeStartDate !== date || rangeEndDate !== date) {\n                this.selectedChange.emit(selectedDate);\n            }\n            this._userSelection.emit({ value: selectedDate, event: event.event });\n            this._previewStart = this._previewEnd = null;\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Handles keydown events on the calendar body when calendar is in month view. */\n        _handleCalendarBodyKeydown(event) {\n            // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n            // disabled ones from being selected. This may not be ideal, we should look into whether\n            // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n            const oldActiveDate = this._activeDate;\n            const isRtl = this._isRtl();\n            switch (event.keyCode) {\n                case keycodes[\"h\" /* LEFT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                    break;\n                case keycodes[\"l\" /* RIGHT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                    break;\n                case keycodes[\"o\" /* UP_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                    break;\n                case keycodes[\"c\" /* DOWN_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                    break;\n                case keycodes[\"g\" /* HOME */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                    break;\n                case keycodes[\"d\" /* END */]:\n                    this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this._dateAdapter.getDate(this._activeDate)));\n                    break;\n                case keycodes[\"k\" /* PAGE_UP */]:\n                    this.activeDate = event.altKey ?\n                        this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                        this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                    break;\n                case keycodes[\"j\" /* PAGE_DOWN */]:\n                    this.activeDate = event.altKey ?\n                        this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                        this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                    break;\n                case keycodes[\"e\" /* ENTER */]:\n                case keycodes[\"m\" /* SPACE */]:\n                    if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                        this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                        // Prevent unexpected default actions such as form submission.\n                        event.preventDefault();\n                    }\n                    return;\n                case keycodes[\"f\" /* ESCAPE */]:\n                    // Abort the current range selection if the user presses escape mid-selection.\n                    if (this._previewEnd != null && !Object(keycodes[\"r\" /* hasModifierKey */])(event)) {\n                        this._previewStart = this._previewEnd = null;\n                        this.selectedChange.emit(null);\n                        this._userSelection.emit({ value: null, event });\n                        event.preventDefault();\n                        event.stopPropagation(); // Prevents the overlay from closing.\n                    }\n                    return;\n                default:\n                    // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                    return;\n            }\n            if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n                this.activeDateChange.emit(this.activeDate);\n            }\n            this._focusActiveCell();\n            // Prevent unexpected default actions such as form submission.\n            event.preventDefault();\n        }\n        /** Initializes this month view. */\n        _init() {\n            this._setRanges(this.selected);\n            this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n            this._monthLabel = this._dateFormats.display.monthLabel\n                ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n                : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                    .toLocaleUpperCase();\n            let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n            this._firstWeekOffset =\n                (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                    this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n            this._initWeekdays();\n            this._createWeekCells();\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Focuses the active cell after the microtask queue is empty. */\n        _focusActiveCell(movePreview) {\n            this._matCalendarBody._focusActiveCell(movePreview);\n        }\n        /** Called when the user has activated a new cell and the preview needs to be updated. */\n        _previewChanged({ event, value: cell }) {\n            if (this._rangeStrategy) {\n                // We can assume that this will be a range, because preview\n                // events aren't fired for single date selections.\n                const value = cell ? cell.rawValue : null;\n                const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n                this._previewStart = this._getCellCompareValue(previewRange.start);\n                this._previewEnd = this._getCellCompareValue(previewRange.end);\n                // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n                // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n                // when navigating one month back using the keyboard which will cause this handler\n                // to throw a \"changed after checked\" error when updating the preview state.\n                this._changeDetectorRef.detectChanges();\n            }\n        }\n        /** Initializes the weekdays. */\n        _initWeekdays() {\n            const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n            const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n            const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n            // Rotate the labels for days of the week based on the configured first day of the week.\n            let weekdays = longWeekdays.map((long, i) => {\n                return { long, narrow: narrowWeekdays[i] };\n            });\n            this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        }\n        /** Creates MatCalendarCells for the dates in this month. */\n        _createWeekCells() {\n            const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n            const dateNames = this._dateAdapter.getDateNames();\n            this._weeks = [[]];\n            for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n                if (cell == DAYS_PER_WEEK) {\n                    this._weeks.push([]);\n                    cell = 0;\n                }\n                const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n                const enabled = this._shouldEnableDate(date);\n                const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n                const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n                this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n            }\n        }\n        /** Date filter for the month */\n        _shouldEnableDate(date) {\n            return !!date &&\n                (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n                (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n                (!this.dateFilter || this.dateFilter(date));\n        }\n        /**\n         * Gets the date in this month that the given Date falls on.\n         * Returns null if the given Date is in another month.\n         */\n        _getDateInCurrentMonth(date) {\n            return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n                this._dateAdapter.getDate(date) : null;\n        }\n        /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n        _hasSameMonthAndYear(d1, d2) {\n            return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n                this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n        }\n        /** Gets the value that will be used to one cell to another. */\n        _getCellCompareValue(date) {\n            if (date) {\n                // We use the time since the Unix epoch to compare dates in this view, rather than the\n                // cell values, because we need to support ranges that span across multiple months/years.\n                const year = this._dateAdapter.getYear(date);\n                const month = this._dateAdapter.getMonth(date);\n                const day = this._dateAdapter.getDate(date);\n                return new Date(year, month, day).getTime();\n            }\n            return null;\n        }\n        /** Determines whether the user has the RTL layout direction. */\n        _isRtl() {\n            return this._dir && this._dir.value === 'rtl';\n        }\n        /** Sets the current range based on a model value. */\n        _setRanges(selectedValue) {\n            if (selectedValue instanceof DateRange) {\n                this._rangeStart = this._getCellCompareValue(selectedValue.start);\n                this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n                this._isRange = true;\n            }\n            else {\n                this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n                this._isRange = false;\n            }\n            this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n            this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n        }\n    }\n    MatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\n    MatMonthView.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatCalendarBody, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._matCalendarBody = _t.first);\n            }\n        }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]], decls: 7, vars: 13, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Wb\" /* ɵɵelementStart */](0, \"table\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"thead\", 1);\n                core[\"Wb\" /* ɵɵelementStart */](2, \"tr\");\n                core[\"Gc\" /* ɵɵtemplate */](3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](4, \"tr\");\n                core[\"Rb\" /* ɵɵelement */](5, \"th\", 3);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](6, \"tbody\", 4);\n                core[\"ec\" /* ɵɵlistener */](\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"ngForOf\", ctx._weekdays);\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], datepicker_MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n    return MatMonthView;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\nlet datepicker_MatMultiYearView = /*@__PURE__*/ (() => {\n    class MatMultiYearView {\n        constructor(_changeDetectorRef, _dateAdapter, _dir) {\n            this._changeDetectorRef = _changeDetectorRef;\n            this._dateAdapter = _dateAdapter;\n            this._dir = _dir;\n            this._rerenderSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** Emits when a new year is selected. */\n            this.selectedChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits the selected year. This doesn't imply a change on the selected date */\n            this.yearSelected = new core[\"o\" /* EventEmitter */]();\n            /** Emits when any date is activated. */\n            this.activeDateChange = new core[\"o\" /* EventEmitter */]();\n            if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            this._activeDate = this._dateAdapter.today();\n        }\n        /** The date to display in this multi-year view (everything other than the year is ignored). */\n        get activeDate() { return this._activeDate; }\n        set activeDate(value) {\n            let oldActiveDate = this._activeDate;\n            const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n                this._init();\n            }\n        }\n        /** The currently selected date. */\n        get selected() { return this._selected; }\n        set selected(value) {\n            if (value instanceof DateRange) {\n                this._selected = value;\n            }\n            else {\n                this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            }\n            this._setSelectedYear(value);\n        }\n        /** The minimum selectable date. */\n        get minDate() { return this._minDate; }\n        set minDate(value) {\n            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** The maximum selectable date. */\n        get maxDate() { return this._maxDate; }\n        set maxDate(value) {\n            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        ngAfterContentInit() {\n            this._rerenderSubscription = this._dateAdapter.localeChanges\n                .pipe(Object(startWith[\"a\" /* startWith */])(null))\n                .subscribe(() => this._init());\n        }\n        ngOnDestroy() {\n            this._rerenderSubscription.unsubscribe();\n        }\n        /** Initializes this multi-year view. */\n        _init() {\n            this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n            // We want a range years such that we maximize the number of\n            // enabled dates visible at once. This prevents issues where the minimum year\n            // is the last item of a page OR the maximum year is the first item of a page.\n            // The offset from the active year to the \"slot\" for the starting year is the\n            // *actual* first rendered year in the multi-year view.\n            const activeYear = this._dateAdapter.getYear(this._activeDate);\n            const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n            this._years = [];\n            for (let i = 0, row = []; i < yearsPerPage; i++) {\n                row.push(minYearOfPage + i);\n                if (row.length == yearsPerRow) {\n                    this._years.push(row.map(year => this._createCellForYear(year)));\n                    row = [];\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Handles when a new year is selected. */\n        _yearSelected(event) {\n            const year = event.value;\n            this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n            let month = this._dateAdapter.getMonth(this.activeDate);\n            let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n            this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n        }\n        /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n        _handleCalendarBodyKeydown(event) {\n            const oldActiveDate = this._activeDate;\n            const isRtl = this._isRtl();\n            switch (event.keyCode) {\n                case keycodes[\"h\" /* LEFT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                    break;\n                case keycodes[\"l\" /* RIGHT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                    break;\n                case keycodes[\"o\" /* UP_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                    break;\n                case keycodes[\"c\" /* DOWN_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                    break;\n                case keycodes[\"g\" /* HOME */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                    break;\n                case keycodes[\"d\" /* END */]:\n                    this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                    break;\n                case keycodes[\"k\" /* PAGE_UP */]:\n                    this.activeDate =\n                        this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                    break;\n                case keycodes[\"j\" /* PAGE_DOWN */]:\n                    this.activeDate =\n                        this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                    break;\n                case keycodes[\"e\" /* ENTER */]:\n                case keycodes[\"m\" /* SPACE */]:\n                    this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                    break;\n                default:\n                    // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                    return;\n            }\n            if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n                this.activeDateChange.emit(this.activeDate);\n            }\n            this._focusActiveCell();\n            // Prevent unexpected default actions such as form submission.\n            event.preventDefault();\n        }\n        _getActiveCell() {\n            return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        }\n        /** Focuses the active cell after the microtask queue is empty. */\n        _focusActiveCell() {\n            this._matCalendarBody._focusActiveCell();\n        }\n        /** Creates an MatCalendarCell for the given year. */\n        _createCellForYear(year) {\n            const date = this._dateAdapter.createDate(year, 0, 1);\n            const yearName = this._dateAdapter.getYearName(date);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n            return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n        }\n        /** Whether the given year is enabled. */\n        _shouldEnableYear(year) {\n            // disable if the year is greater than maxDate lower than minDate\n            if (year === undefined || year === null ||\n                (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n                (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n                return false;\n            }\n            // enable if it reaches here and there's no filter defined\n            if (!this.dateFilter) {\n                return true;\n            }\n            const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n            // If any date in the year is enabled count the year as enabled.\n            for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n                if (this.dateFilter(date)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        /** Determines whether the user has the RTL layout direction. */\n        _isRtl() {\n            return this._dir && this._dir.value === 'rtl';\n        }\n        /** Sets the currently-highlighted year based on a model value. */\n        _setSelectedYear(value) {\n            this._selectedYear = null;\n            if (value instanceof DateRange) {\n                const displayValue = value.start || value.end;\n                if (displayValue) {\n                    this._selectedYear = this._dateAdapter.getYear(displayValue);\n                }\n            }\n            else if (value) {\n                this._selectedYear = this._dateAdapter.getYear(value);\n            }\n        }\n    }\n    MatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8)); };\n    MatMultiYearView.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatCalendarBody, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._matCalendarBody = _t.first);\n            }\n        }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Wb\" /* ɵɵelementStart */](0, \"table\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"thead\", 1);\n                core[\"Wb\" /* ɵɵelementStart */](2, \"tr\");\n                core[\"Rb\" /* ɵɵelement */](3, \"th\", 2);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](4, \"tbody\", 3);\n                core[\"ec\" /* ɵɵlistener */](\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Db\" /* ɵɵadvance */](4);\n                core[\"pc\" /* ɵɵproperty */](\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n            }\n        }, directives: [datepicker_MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n    return MatMultiYearView;\n})();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\nlet datepicker_MatYearView = /*@__PURE__*/ (() => {\n    class MatYearView {\n        constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n            this._changeDetectorRef = _changeDetectorRef;\n            this._dateFormats = _dateFormats;\n            this._dateAdapter = _dateAdapter;\n            this._dir = _dir;\n            this._rerenderSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** Emits when a new month is selected. */\n            this.selectedChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits the selected month. This doesn't imply a change on the selected date */\n            this.monthSelected = new core[\"o\" /* EventEmitter */]();\n            /** Emits when any date is activated. */\n            this.activeDateChange = new core[\"o\" /* EventEmitter */]();\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._dateAdapter) {\n                    throw createMissingDateImplError('DateAdapter');\n                }\n                if (!this._dateFormats) {\n                    throw createMissingDateImplError('MAT_DATE_FORMATS');\n                }\n            }\n            this._activeDate = this._dateAdapter.today();\n        }\n        /** The date to display in this year view (everything other than the year is ignored). */\n        get activeDate() { return this._activeDate; }\n        set activeDate(value) {\n            let oldActiveDate = this._activeDate;\n            const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n            if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n                this._init();\n            }\n        }\n        /** The currently selected date. */\n        get selected() { return this._selected; }\n        set selected(value) {\n            if (value instanceof DateRange) {\n                this._selected = value;\n            }\n            else {\n                this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            }\n            this._setSelectedMonth(value);\n        }\n        /** The minimum selectable date. */\n        get minDate() { return this._minDate; }\n        set minDate(value) {\n            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** The maximum selectable date. */\n        get maxDate() { return this._maxDate; }\n        set maxDate(value) {\n            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        ngAfterContentInit() {\n            this._rerenderSubscription = this._dateAdapter.localeChanges\n                .pipe(Object(startWith[\"a\" /* startWith */])(null))\n                .subscribe(() => this._init());\n        }\n        ngOnDestroy() {\n            this._rerenderSubscription.unsubscribe();\n        }\n        /** Handles when a new month is selected. */\n        _monthSelected(event) {\n            const month = event.value;\n            const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n            this.monthSelected.emit(normalizedDate);\n            const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n            this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n        }\n        /** Handles keydown events on the calendar body when calendar is in year view. */\n        _handleCalendarBodyKeydown(event) {\n            // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n            // disabled ones from being selected. This may not be ideal, we should look into whether\n            // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n            const oldActiveDate = this._activeDate;\n            const isRtl = this._isRtl();\n            switch (event.keyCode) {\n                case keycodes[\"h\" /* LEFT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                    break;\n                case keycodes[\"l\" /* RIGHT_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                    break;\n                case keycodes[\"o\" /* UP_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                    break;\n                case keycodes[\"c\" /* DOWN_ARROW */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                    break;\n                case keycodes[\"g\" /* HOME */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                    break;\n                case keycodes[\"d\" /* END */]:\n                    this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                    break;\n                case keycodes[\"k\" /* PAGE_UP */]:\n                    this.activeDate =\n                        this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                    break;\n                case keycodes[\"j\" /* PAGE_DOWN */]:\n                    this.activeDate =\n                        this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                    break;\n                case keycodes[\"e\" /* ENTER */]:\n                case keycodes[\"m\" /* SPACE */]:\n                    this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                    break;\n                default:\n                    // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                    return;\n            }\n            if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n                this.activeDateChange.emit(this.activeDate);\n            }\n            this._focusActiveCell();\n            // Prevent unexpected default actions such as form submission.\n            event.preventDefault();\n        }\n        /** Initializes this year view. */\n        _init() {\n            this._setSelectedMonth(this.selected);\n            this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n            this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n            let monthNames = this._dateAdapter.getMonthNames('short');\n            // First row of months only contains 5 elements so we can fit the year label on the same row.\n            this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Focuses the active cell after the microtask queue is empty. */\n        _focusActiveCell() {\n            this._matCalendarBody._focusActiveCell();\n        }\n        /**\n         * Gets the month in this year that the given Date falls on.\n         * Returns null if the given Date is in another year.\n         */\n        _getMonthInCurrentYear(date) {\n            return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n                this._dateAdapter.getMonth(date) : null;\n        }\n        /** Creates an MatCalendarCell for the given month. */\n        _createCellForMonth(month, monthName) {\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n            return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n        }\n        /** Whether the given month is enabled. */\n        _shouldEnableMonth(month) {\n            const activeYear = this._dateAdapter.getYear(this.activeDate);\n            if (month === undefined || month === null ||\n                this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n                this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n                return false;\n            }\n            if (!this.dateFilter) {\n                return true;\n            }\n            const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n            // If any date in the month is enabled count the month as enabled.\n            for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n                if (this.dateFilter(date)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        /**\n         * Tests whether the combination month/year is after this.maxDate, considering\n         * just the month and year of this.maxDate\n         */\n        _isYearAndMonthAfterMaxDate(year, month) {\n            if (this.maxDate) {\n                const maxYear = this._dateAdapter.getYear(this.maxDate);\n                const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n                return year > maxYear || (year === maxYear && month > maxMonth);\n            }\n            return false;\n        }\n        /**\n         * Tests whether the combination month/year is before this.minDate, considering\n         * just the month and year of this.minDate\n         */\n        _isYearAndMonthBeforeMinDate(year, month) {\n            if (this.minDate) {\n                const minYear = this._dateAdapter.getYear(this.minDate);\n                const minMonth = this._dateAdapter.getMonth(this.minDate);\n                return year < minYear || (year === minYear && month < minMonth);\n            }\n            return false;\n        }\n        /** Determines whether the user has the RTL layout direction. */\n        _isRtl() {\n            return this._dir && this._dir.value === 'rtl';\n        }\n        /** Sets the currently-selected month based on a model value. */\n        _setSelectedMonth(value) {\n            if (value instanceof DateRange) {\n                this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                    this._getMonthInCurrentYear(value.end);\n            }\n            else {\n                this._selectedMonth = this._getMonthInCurrentYear(value);\n            }\n        }\n    }\n    MatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8)); };\n    MatYearView.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatCalendarBody, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._matCalendarBody = _t.first);\n            }\n        }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Wb\" /* ɵɵelementStart */](0, \"table\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"thead\", 1);\n                core[\"Wb\" /* ɵɵelementStart */](2, \"tr\");\n                core[\"Rb\" /* ɵɵelement */](3, \"th\", 2);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](4, \"tbody\", 3);\n                core[\"ec\" /* ɵɵlistener */](\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Db\" /* ɵɵadvance */](4);\n                core[\"pc\" /* ɵɵproperty */](\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n            }\n        }, directives: [datepicker_MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n    return MatYearView;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\nlet datepicker_MatCalendarHeader = /*@__PURE__*/ (() => {\n    class MatCalendarHeader {\n        constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n            this._intl = _intl;\n            this.calendar = calendar;\n            this._dateAdapter = _dateAdapter;\n            this._dateFormats = _dateFormats;\n            this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n            this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n        }\n        /** The label for the current calendar view. */\n        get periodButtonText() {\n            if (this.calendar.currentView == 'month') {\n                return this._dateAdapter\n                    .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                    .toLocaleUpperCase();\n            }\n            if (this.calendar.currentView == 'year') {\n                return this._dateAdapter.getYearName(this.calendar.activeDate);\n            }\n            // The offset from the active year to the \"slot\" for the starting year is the\n            // *actual* first rendered year in the multi-year view, and the last year is\n            // just yearsPerPage - 1 away.\n            const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n            const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n            const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n            const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n            const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n            return this._intl.formatYearRange(minYearName, maxYearName);\n        }\n        get periodButtonLabel() {\n            return this.calendar.currentView == 'month' ?\n                this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n        }\n        /** The label for the previous button. */\n        get prevButtonLabel() {\n            return {\n                'month': this._intl.prevMonthLabel,\n                'year': this._intl.prevYearLabel,\n                'multi-year': this._intl.prevMultiYearLabel\n            }[this.calendar.currentView];\n        }\n        /** The label for the next button. */\n        get nextButtonLabel() {\n            return {\n                'month': this._intl.nextMonthLabel,\n                'year': this._intl.nextYearLabel,\n                'multi-year': this._intl.nextMultiYearLabel\n            }[this.calendar.currentView];\n        }\n        /** Handles user clicks on the period label. */\n        currentPeriodClicked() {\n            this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n        }\n        /** Handles user clicks on the previous button. */\n        previousClicked() {\n            this.calendar.activeDate = this.calendar.currentView == 'month' ?\n                this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n                this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n        }\n        /** Handles user clicks on the next button. */\n        nextClicked() {\n            this.calendar.activeDate = this.calendar.currentView == 'month' ?\n                this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n                this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n        }\n        /** Whether the previous period button is enabled. */\n        previousEnabled() {\n            if (!this.calendar.minDate) {\n                return true;\n            }\n            return !this.calendar.minDate ||\n                !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n        }\n        /** Whether the next period button is enabled. */\n        nextEnabled() {\n            return !this.calendar.maxDate ||\n                !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n        }\n        /** Whether the two dates represent the same view in the current view mode (month or year). */\n        _isSameView(date1, date2) {\n            if (this.calendar.currentView == 'month') {\n                return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                    this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n            }\n            if (this.calendar.currentView == 'year') {\n                return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n            }\n            // Otherwise we are in 'multi-year' view.\n            return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n        }\n    }\n    MatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerIntl), core[\"Qb\" /* ɵɵdirectiveInject */](Object(core[\"W\" /* forwardRef */])(() => datepicker_MatCalendar)), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */])); };\n    MatCalendarHeader.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: datepicker_c1, decls: 10, vars: 10, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */]();\n                core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"Wb\" /* ɵɵelementStart */](2, \"button\", 2);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n                core[\"Wb\" /* ɵɵelementStart */](3, \"span\");\n                core[\"Ic\" /* ɵɵtext */](4);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelement */](5, \"div\", 3);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelement */](6, \"div\", 4);\n                core[\"nc\" /* ɵɵprojection */](7);\n                core[\"Wb\" /* ɵɵelementStart */](8, \"button\", 5);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.previousClicked(); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](9, \"button\", 6);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatCalendarHeader_Template_button_click_9_listener() { return ctx.nextClicked(); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Db\" /* ɵɵadvance */](2);\n                core[\"Eb\" /* ɵɵattribute */](\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Eb\" /* ɵɵattribute */](\"id\", ctx._buttonDescriptionId);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Jc\" /* ɵɵtextInterpolate */](ctx.periodButtonText);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n                core[\"Db\" /* ɵɵadvance */](3);\n                core[\"pc\" /* ɵɵproperty */](\"disabled\", !ctx.previousEnabled());\n                core[\"Eb\" /* ɵɵattribute */](\"aria-label\", ctx.prevButtonLabel);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"disabled\", !ctx.nextEnabled());\n                core[\"Eb\" /* ɵɵattribute */](\"aria-label\", ctx.nextButtonLabel);\n            }\n        }, directives: [fesm2015_button[\"b\" /* MatButton */], a11y[\"d\" /* CdkAriaLive */]], encapsulation: 2, changeDetection: 0 });\n    return MatCalendarHeader;\n})();\nlet datepicker_MatCalendar = /*@__PURE__*/ (() => {\n    class MatCalendar {\n        constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n            this._dateAdapter = _dateAdapter;\n            this._dateFormats = _dateFormats;\n            this._changeDetectorRef = _changeDetectorRef;\n            /**\n             * Used for scheduling that focus should be moved to the active cell on the next tick.\n             * We need to schedule it, rather than do it immediately, because we have to wait\n             * for Angular to re-evaluate the view children.\n             */\n            this._moveFocusOnNextTick = false;\n            /** Whether the calendar should be started in month or year view. */\n            this.startView = 'month';\n            /** Emits when the currently selected date changes. */\n            this.selectedChange = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits the year chosen in multiyear view.\n             * This doesn't imply a change on the selected date.\n             */\n            this.yearSelected = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits the month chosen in year view.\n             * This doesn't imply a change on the selected date.\n             */\n            this.monthSelected = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits when the current view changes.\n             */\n            this.viewChanged = new core[\"o\" /* EventEmitter */](true);\n            /** Emits when any date is selected. */\n            this._userSelection = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits whenever there is a state change that the header may need to respond to.\n             */\n            this.stateChanges = new Subject[\"a\" /* Subject */]();\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._dateAdapter) {\n                    throw createMissingDateImplError('DateAdapter');\n                }\n                if (!this._dateFormats) {\n                    throw createMissingDateImplError('MAT_DATE_FORMATS');\n                }\n            }\n            this._intlChanges = _intl.changes.subscribe(() => {\n                _changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n        }\n        /** A date representing the period (month or year) to start the calendar in. */\n        get startAt() { return this._startAt; }\n        set startAt(value) {\n            this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** The currently selected date. */\n        get selected() { return this._selected; }\n        set selected(value) {\n            if (value instanceof DateRange) {\n                this._selected = value;\n            }\n            else {\n                this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            }\n        }\n        /** The minimum selectable date. */\n        get minDate() { return this._minDate; }\n        set minDate(value) {\n            this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** The maximum selectable date. */\n        get maxDate() { return this._maxDate; }\n        set maxDate(value) {\n            this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /**\n         * The current active date. This determines which time period is shown and which date is\n         * highlighted when using keyboard navigation.\n         */\n        get activeDate() { return this._clampedActiveDate; }\n        set activeDate(value) {\n            this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n            this.stateChanges.next();\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Whether the calendar is in month view. */\n        get currentView() { return this._currentView; }\n        set currentView(value) {\n            const viewChangedResult = this._currentView !== value ? value : null;\n            this._currentView = value;\n            this._moveFocusOnNextTick = true;\n            this._changeDetectorRef.markForCheck();\n            if (viewChangedResult) {\n                this.viewChanged.emit(viewChangedResult);\n            }\n        }\n        ngAfterContentInit() {\n            this._calendarHeaderPortal = new fesm2015_portal[\"d\" /* ComponentPortal */](this.headerComponent || datepicker_MatCalendarHeader);\n            this.activeDate = this.startAt || this._dateAdapter.today();\n            // Assign to the private property since we don't want to move focus on init.\n            this._currentView = this.startView;\n        }\n        ngAfterViewChecked() {\n            if (this._moveFocusOnNextTick) {\n                this._moveFocusOnNextTick = false;\n                this.focusActiveCell();\n            }\n        }\n        ngOnDestroy() {\n            this._intlChanges.unsubscribe();\n            this.stateChanges.complete();\n        }\n        ngOnChanges(changes) {\n            const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n            if (change && !change.firstChange) {\n                const view = this._getCurrentViewComponent();\n                if (view) {\n                    // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                    // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                    this._changeDetectorRef.detectChanges();\n                    view._init();\n                }\n            }\n            this.stateChanges.next();\n        }\n        focusActiveCell() {\n            this._getCurrentViewComponent()._focusActiveCell(false);\n        }\n        /** Updates today's date after an update of the active date */\n        updateTodaysDate() {\n            const currentView = this.currentView;\n            let view;\n            if (currentView === 'month') {\n                view = this.monthView;\n            }\n            else if (currentView === 'year') {\n                view = this.yearView;\n            }\n            else {\n                view = this.multiYearView;\n            }\n            view._init();\n        }\n        /** Handles date selection in the month view. */\n        _dateSelected(event) {\n            const date = event.value;\n            if (this.selected instanceof DateRange ||\n                (date && !this._dateAdapter.sameDate(date, this.selected))) {\n                this.selectedChange.emit(date);\n            }\n            this._userSelection.emit(event);\n        }\n        /** Handles year selection in the multiyear view. */\n        _yearSelectedInMultiYearView(normalizedYear) {\n            this.yearSelected.emit(normalizedYear);\n        }\n        /** Handles month selection in the year view. */\n        _monthSelectedInYearView(normalizedMonth) {\n            this.monthSelected.emit(normalizedMonth);\n        }\n        /** Handles year/month selection in the multi-year/year views. */\n        _goToDateInView(date, view) {\n            this.activeDate = date;\n            this.currentView = view;\n        }\n        /** Returns the component instance that corresponds to the current calendar view. */\n        _getCurrentViewComponent() {\n            return this.monthView || this.yearView || this.multiYearView;\n        }\n    }\n    MatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerIntl), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */])); };\n    MatCalendar.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatMonthView, 1);\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatYearView, 1);\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatMultiYearView, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.monthView = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.yearView = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx.multiYearView = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), core[\"Bb\" /* ɵɵNgOnChangesFeature */]], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"Gc\" /* ɵɵtemplate */](2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n                core[\"Gc\" /* ɵɵtemplate */](3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitch\", ctx.currentView);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", \"month\");\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", \"year\");\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"ngSwitchCase\", \"multi-year\");\n            }\n        }, directives: [fesm2015_portal[\"c\" /* CdkPortalOutlet */], a11y[\"e\" /* CdkMonitorFocus */], common[\"o\" /* NgSwitch */], common[\"p\" /* NgSwitchCase */], datepicker_MatMonthView, datepicker_MatYearView, datepicker_MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatCalendar;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('transformPanel', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('void', /*@__PURE__*/ Object(animations[\"m\" /* style */])({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('void => enter', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('120ms cubic-bezier(0, 0, 0.2, 1)', /*@__PURE__*/ Object(animations[\"m\" /* style */])({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('* => void', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('100ms linear', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: /*@__PURE__*/ Object(animations[\"o\" /* trigger */])('fadeInCalendar', [\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('void', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 0 })),\n        /*@__PURE__*/ Object(animations[\"l\" /* state */])('enter', /*@__PURE__*/ Object(animations[\"m\" /* style */])({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        /*@__PURE__*/ Object(animations[\"n\" /* transition */])('void => *', /*@__PURE__*/ Object(animations[\"e\" /* animate */])('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [overlay[\"c\" /* Overlay */]],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatDatepickerContentMixinBase = /*@__PURE__*/ Object(fesm2015_core[\"v\" /* mixinColor */])(MatDatepickerContentBase);\nlet datepicker_MatDatepickerContent = /*@__PURE__*/ (() => {\n    class MatDatepickerContent extends _MatDatepickerContentMixinBase {\n        constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, \n        /**\n         * @deprecated `intl` argument to become required.\n         * @breaking-change 12.0.0\n         */\n        intl) {\n            super(elementRef);\n            this._changeDetectorRef = _changeDetectorRef;\n            this._globalModel = _globalModel;\n            this._dateAdapter = _dateAdapter;\n            this._rangeSelectionStrategy = _rangeSelectionStrategy;\n            this._subscriptions = new Subscription[\"a\" /* Subscription */]();\n            /** Current state of the animation. */\n            this._animationState = 'enter';\n            /** Emits when an animation has finished. */\n            this._animationDone = new Subject[\"a\" /* Subject */]();\n            /** Portal with projected action buttons. */\n            this._actionsPortal = null;\n            // @breaking-change 12.0.0 Remove fallback for `intl`.\n            this._closeButtonText = (intl === null || intl === void 0 ? void 0 : intl.closeCalendarLabel) || 'Close calendar';\n        }\n        ngOnInit() {\n            // If we have actions, clone the model so that we have the ability to cancel the selection,\n            // otherwise update the global model directly. Note that we want to assign this as soon as\n            // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n            this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        }\n        ngAfterViewInit() {\n            this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            }));\n            this._calendar.focusActiveCell();\n        }\n        ngOnDestroy() {\n            this._subscriptions.unsubscribe();\n            this._animationDone.complete();\n        }\n        _handleUserSelection(event) {\n            const selection = this._model.selection;\n            const value = event.value;\n            const isRange = selection instanceof DateRange;\n            // If we're selecting a range and we have a selection strategy, always pass the value through\n            // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n            // A null value when picking a range means that the user cancelled the selection (e.g. by\n            // pressing escape), whereas when selecting a single value it means that the value didn't\n            // change. This isn't very intuitive, but it's here for backwards-compatibility.\n            if (isRange && this._rangeSelectionStrategy) {\n                const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n                this._model.updateSelection(newSelection, this);\n            }\n            else if (value && (isRange ||\n                !this._dateAdapter.sameDate(value, selection))) {\n                this._model.add(value);\n            }\n            // Delegate closing the popup to the actions.\n            if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n                this.datepicker.close();\n            }\n        }\n        _startExitAnimation() {\n            this._animationState = 'void';\n            this._changeDetectorRef.markForCheck();\n        }\n        _getSelected() {\n            return this._model.selection;\n        }\n        /** Applies the current pending selection to the global model. */\n        _applyPendingSelection() {\n            if (this._model !== this._globalModel) {\n                this._globalModel.updateSelection(this._model.selection, this);\n            }\n        }\n    }\n    MatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDateSelectionModel), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */]), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATE_RANGE_SELECTION_STRATEGY, 8), core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerIntl)); };\n    MatDatepickerContent.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_MatCalendar, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._calendar = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ec\" /* ɵɵsyntheticHostListener */](\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n            }\n            if (rf & 2) {\n                core[\"Fc\" /* ɵɵsyntheticHostProperty */](\"@transformPanel\", ctx._animationState);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n            }\n        }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 5, vars: 20, consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]], template: function MatDatepickerContent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Wb\" /* ɵɵelementStart */](1, \"mat-calendar\", 1);\n                core[\"ec\" /* ɵɵlistener */](\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) { return ctx.datepicker._selectMonth($event); })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) { return ctx.datepicker._viewChanged($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) { return ctx._handleUserSelection($event); });\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n                core[\"Wb\" /* ɵɵelementStart */](3, \"button\", 3);\n                core[\"ec\" /* ɵɵlistener */](\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() { return ctx._closeButtonFocused = true; })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() { return ctx._closeButtonFocused = false; })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() { return ctx.datepicker.close(); });\n                core[\"Ic\" /* ɵɵtext */](4);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"pc\" /* ɵɵproperty */](\"cdkPortalOutlet\", ctx._actionsPortal);\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Ib\" /* ɵɵclassProp */](\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n                core[\"pc\" /* ɵɵproperty */](\"color\", ctx.color || \"primary\");\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Jc\" /* ɵɵtextInterpolate */](ctx._closeButtonText);\n            }\n        }, directives: [a11y[\"f\" /* CdkTrapFocus */], datepicker_MatCalendar, common[\"k\" /* NgClass */], fesm2015_portal[\"c\" /* CdkPortalOutlet */], fesm2015_button[\"b\" /* MatButton */]], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], encapsulation: 2, data: { animation: [\n                matDatepickerAnimations.transformPanel,\n                matDatepickerAnimations.fadeInCalendar,\n            ] }, changeDetection: 0 });\n    return MatDatepickerContent;\n})();\nlet datepicker_MatDatepickerBase = /*@__PURE__*/ (() => {\n    class MatDatepickerBase {\n        constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n            this._dialog = _dialog;\n            this._overlay = _overlay;\n            this._ngZone = _ngZone;\n            this._viewContainerRef = _viewContainerRef;\n            this._dateAdapter = _dateAdapter;\n            this._dir = _dir;\n            this._document = _document;\n            this._model = _model;\n            this._inputStateChanges = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** The view that the calendar should start in. */\n            this.startView = 'month';\n            this._touchUi = false;\n            /** Preferred position of the datepicker in the X axis. */\n            this.xPosition = 'start';\n            /** Preferred position of the datepicker in the Y axis. */\n            this.yPosition = 'below';\n            /**\n             * Emits selected year in multiyear view.\n             * This doesn't imply a change on the selected date.\n             */\n            this.yearSelected = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits selected month in year view.\n             * This doesn't imply a change on the selected date.\n             */\n            this.monthSelected = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Emits when the current view changes.\n             */\n            this.viewChanged = new core[\"o\" /* EventEmitter */](true);\n            /** Emits when the datepicker has been opened. */\n            this.openedStream = new core[\"o\" /* EventEmitter */]();\n            /** Emits when the datepicker has been closed. */\n            this.closedStream = new core[\"o\" /* EventEmitter */]();\n            this._opened = false;\n            /** The id for the datepicker calendar. */\n            this.id = `mat-datepicker-${datepickerUid++}`;\n            /** The element that was focused before the datepicker was opened. */\n            this._focusedElementBeforeOpen = null;\n            /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n            this._backdropHarnessClass = `${this.id}-backdrop`;\n            /** Emits when the datepicker's state changes. */\n            this.stateChanges = new Subject[\"a\" /* Subject */]();\n            if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            this._scrollStrategy = scrollStrategy;\n        }\n        /** The date to open the calendar to initially. */\n        get startAt() {\n            // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n            // selected value is.\n            return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n        }\n        set startAt(value) {\n            this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        /** Color palette to use on the datepicker's calendar. */\n        get color() {\n            return this._color ||\n                (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n        }\n        set color(value) {\n            this._color = value;\n        }\n        /**\n         * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n         * than a popup and elements have more padding to allow for bigger touch targets.\n         */\n        get touchUi() { return this._touchUi; }\n        set touchUi(value) {\n            this._touchUi = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Whether the datepicker pop-up should be disabled. */\n        get disabled() {\n            return this._disabled === undefined && this.datepickerInput ?\n                this.datepickerInput.disabled : !!this._disabled;\n        }\n        set disabled(value) {\n            const newValue = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this.stateChanges.next(undefined);\n            }\n        }\n        /**\n         * Classes to be passed to the date picker panel.\n         * Supports string and string array values, similar to `ngClass`.\n         */\n        get panelClass() { return this._panelClass; }\n        set panelClass(value) {\n            this._panelClass = Object(coercion[\"g\" /* coerceStringArray */])(value);\n        }\n        /** Whether the calendar is open. */\n        get opened() { return this._opened; }\n        set opened(value) {\n            Object(coercion[\"c\" /* coerceBooleanProperty */])(value) ? this.open() : this.close();\n        }\n        /** The minimum selectable date. */\n        _getMinDate() {\n            return this.datepickerInput && this.datepickerInput.min;\n        }\n        /** The maximum selectable date. */\n        _getMaxDate() {\n            return this.datepickerInput && this.datepickerInput.max;\n        }\n        _getDateFilter() {\n            return this.datepickerInput && this.datepickerInput.dateFilter;\n        }\n        ngOnChanges(changes) {\n            const positionChange = changes['xPosition'] || changes['yPosition'];\n            if (positionChange && !positionChange.firstChange && this._popupRef) {\n                this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n                if (this.opened) {\n                    this._popupRef.updatePosition();\n                }\n            }\n            this.stateChanges.next(undefined);\n        }\n        ngOnDestroy() {\n            this._destroyPopup();\n            this.close();\n            this._inputStateChanges.unsubscribe();\n            this.stateChanges.complete();\n        }\n        /** Selects the given date */\n        select(date) {\n            this._model.add(date);\n        }\n        /** Emits the selected year in multiyear view */\n        _selectYear(normalizedYear) {\n            this.yearSelected.emit(normalizedYear);\n        }\n        /** Emits selected month in year view */\n        _selectMonth(normalizedMonth) {\n            this.monthSelected.emit(normalizedMonth);\n        }\n        /** Emits changed view */\n        _viewChanged(view) {\n            this.viewChanged.emit(view);\n        }\n        /**\n         * Register an input with this datepicker.\n         * @param input The datepicker input to register with this datepicker.\n         * @returns Selection model that the input should hook itself up to.\n         */\n        registerInput(input) {\n            if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('A MatDatepicker can only be associated with a single input.');\n            }\n            this._inputStateChanges.unsubscribe();\n            this.datepickerInput = input;\n            this._inputStateChanges =\n                input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n            return this._model;\n        }\n        /**\n         * Registers a portal containing action buttons with the datepicker.\n         * @param portal Portal to be registered.\n         */\n        registerActions(portal) {\n            if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('A MatDatepicker can only be associated with a single actions row.');\n            }\n            this._actionsPortal = portal;\n        }\n        /**\n         * Removes a portal containing action buttons from the datepicker.\n         * @param portal Portal to be removed.\n         */\n        removeActions(portal) {\n            if (portal === this._actionsPortal) {\n                this._actionsPortal = null;\n            }\n        }\n        /** Open the calendar. */\n        open() {\n            if (this._opened || this.disabled) {\n                return;\n            }\n            if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Attempted to open an MatDatepicker with no associated input.');\n            }\n            if (this._document) {\n                this._focusedElementBeforeOpen = this._document.activeElement;\n            }\n            this.touchUi ? this._openAsDialog() : this._openAsPopup();\n            this._opened = true;\n            this.openedStream.emit();\n        }\n        /** Close the calendar. */\n        close() {\n            if (!this._opened) {\n                return;\n            }\n            if (this._popupComponentRef && this._popupRef) {\n                const instance = this._popupComponentRef.instance;\n                instance._startExitAnimation();\n                instance._animationDone.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => this._destroyPopup());\n            }\n            if (this._dialogRef) {\n                this._dialogRef.close();\n                this._dialogRef = null;\n            }\n            const completeClose = () => {\n                // The `_opened` could've been reset already if\n                // we got two events in quick succession.\n                if (this._opened) {\n                    this._opened = false;\n                    this.closedStream.emit();\n                    this._focusedElementBeforeOpen = null;\n                }\n            };\n            if (this._focusedElementBeforeOpen &&\n                typeof this._focusedElementBeforeOpen.focus === 'function') {\n                // Because IE moves focus asynchronously, we can't count on it being restored before we've\n                // marked the datepicker as closed. If the event fires out of sequence and the element that\n                // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n                // able to close the calendar at all. We work around it by making the logic, that marks\n                // the datepicker as closed, async as well.\n                this._focusedElementBeforeOpen.focus();\n                setTimeout(completeClose);\n            }\n            else {\n                completeClose();\n            }\n        }\n        /** Applies the current pending selection on the popup to the model. */\n        _applyPendingSelection() {\n            var _a, _b;\n            const instance = ((_a = this._popupComponentRef) === null || _a === void 0 ? void 0 : _a.instance) || ((_b = this._dialogRef) === null || _b === void 0 ? void 0 : _b.componentInstance);\n            instance === null || instance === void 0 ? void 0 : instance._applyPendingSelection();\n        }\n        /** Open the calendar as a dialog. */\n        _openAsDialog() {\n            // Usually this would be handled by `open` which ensures that we can only have one overlay\n            // open at a time, however since we reset the variables in async handlers some overlays\n            // may slip through if the user opens and closes multiple times in quick succession (e.g.\n            // by holding down the enter key).\n            if (this._dialogRef) {\n                this._dialogRef.close();\n            }\n            this._dialogRef = this._dialog.open(datepicker_MatDatepickerContent, {\n                direction: this._dir ? this._dir.value : 'ltr',\n                viewContainerRef: this._viewContainerRef,\n                panelClass: 'mat-datepicker-dialog',\n                // These values are all the same as the defaults, but we set them explicitly so that the\n                // datepicker dialog behaves consistently even if the user changed the defaults.\n                hasBackdrop: true,\n                disableClose: false,\n                backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n                width: '',\n                height: '',\n                minWidth: '',\n                minHeight: '',\n                maxWidth: '80vw',\n                maxHeight: '',\n                position: {},\n                // Disable the dialog's automatic focus capturing, because it'll go to the close button\n                // automatically. The calendar will move focus on its own once it renders.\n                autoFocus: false,\n                // `MatDialog` has focus restoration built in, however we want to disable it since the\n                // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n                // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n                // restores focus when the animation is finished, but the datepicker does it immediately.\n                // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n                // inside the `closed` event which is dispatched immediately.\n                restoreFocus: false\n            });\n            this._dialogRef.afterClosed().subscribe(() => this.close());\n            this._forwardContentValues(this._dialogRef.componentInstance);\n        }\n        /** Open the calendar as a popup. */\n        _openAsPopup() {\n            const portal = new fesm2015_portal[\"d\" /* ComponentPortal */](datepicker_MatDatepickerContent, this._viewContainerRef);\n            this._destroyPopup();\n            this._createPopup();\n            this._popupComponentRef = this._popupRef.attach(portal);\n            this._forwardContentValues(this._popupComponentRef.instance);\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                this._popupRef.updatePosition();\n            });\n        }\n        /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n        _forwardContentValues(instance) {\n            instance.datepicker = this;\n            instance.color = this.color;\n            instance._actionsPortal = this._actionsPortal;\n        }\n        /** Create the popup. */\n        _createPopup() {\n            const positionStrategy = this._overlay.position()\n                .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n                .withTransformOriginOn('.mat-datepicker-content')\n                .withFlexibleDimensions(false)\n                .withViewportMargin(8)\n                .withLockedPosition();\n            const overlayConfig = new overlay[\"d\" /* OverlayConfig */]({\n                positionStrategy: this._setConnectedPositions(positionStrategy),\n                hasBackdrop: true,\n                backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n                direction: this._dir,\n                scrollStrategy: this._scrollStrategy(),\n                panelClass: 'mat-datepicker-popup',\n            });\n            this._popupRef = this._overlay.create(overlayConfig);\n            this._popupRef.overlayElement.setAttribute('role', 'dialog');\n            Object(merge[\"a\" /* merge */])(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(Object(filter[\"a\" /* filter */])(event => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                return (event.keyCode === keycodes[\"f\" /* ESCAPE */] && !Object(keycodes[\"r\" /* hasModifierKey */])(event)) || (this.datepickerInput &&\n                    Object(keycodes[\"r\" /* hasModifierKey */])(event, 'altKey') && event.keyCode === keycodes[\"o\" /* UP_ARROW */]);\n            }))).subscribe(event => {\n                if (event) {\n                    event.preventDefault();\n                }\n                this.close();\n            });\n        }\n        /** Destroys the current popup overlay. */\n        _destroyPopup() {\n            if (this._popupRef) {\n                this._popupRef.dispose();\n                this._popupRef = this._popupComponentRef = null;\n            }\n        }\n        /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n        _setConnectedPositions(strategy) {\n            const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n            const secondaryX = primaryX === 'start' ? 'end' : 'start';\n            const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n            const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n            return strategy.withPositions([\n                {\n                    originX: primaryX,\n                    originY: secondaryY,\n                    overlayX: primaryX,\n                    overlayY: primaryY\n                },\n                {\n                    originX: primaryX,\n                    originY: primaryY,\n                    overlayX: primaryX,\n                    overlayY: secondaryY\n                },\n                {\n                    originX: secondaryX,\n                    originY: secondaryY,\n                    overlayX: secondaryX,\n                    overlayY: primaryY\n                },\n                {\n                    originX: secondaryX,\n                    originY: primaryY,\n                    overlayX: secondaryX,\n                    overlayY: secondaryY\n                }\n            ]);\n        }\n    }\n    MatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_dialog[\"b\" /* MatDialog */]), core[\"Qb\" /* ɵɵdirectiveInject */](overlay[\"c\" /* Overlay */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"B\" /* NgZone */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATEPICKER_SCROLL_STRATEGY), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](bidi[\"b\" /* Directionality */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](common[\"d\" /* DOCUMENT */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDateSelectionModel)); };\n    MatDatepickerBase.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", panelClass: \"panelClass\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return MatDatepickerBase;\n})();\nlet datepicker_MatDatepicker = /*@__PURE__*/ (() => {\n    class MatDatepicker extends datepicker_MatDatepickerBase {\n    }\n    MatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return ɵMatDatepicker_BaseFactory(t || MatDatepicker); };\n    MatDatepicker.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                { provide: datepicker_MatDatepickerBase, useExisting: MatDatepicker },\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n    return MatDatepicker;\n})();\nconst ɵMatDatepicker_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](datepicker_MatDatepicker);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nlet datepicker_MatDatepickerInputBase = /*@__PURE__*/ (() => {\n    class MatDatepickerInputBase {\n        constructor(_elementRef, _dateAdapter, _dateFormats) {\n            this._elementRef = _elementRef;\n            this._dateAdapter = _dateAdapter;\n            this._dateFormats = _dateFormats;\n            /** Emits when a `change` event is fired on this `<input>`. */\n            this.dateChange = new core[\"o\" /* EventEmitter */]();\n            /** Emits when an `input` event is fired on this `<input>`. */\n            this.dateInput = new core[\"o\" /* EventEmitter */]();\n            /** Emits when the internal state has changed */\n            this.stateChanges = new Subject[\"a\" /* Subject */]();\n            this._onTouched = () => { };\n            this._validatorOnChange = () => { };\n            this._cvaOnChange = () => { };\n            this._valueChangesSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            this._localeSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** The form control validator for whether the input parses. */\n            this._parseValidator = () => {\n                return this._lastValueValid ?\n                    null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n            };\n            /** The form control validator for the date filter. */\n            this._filterValidator = (control) => {\n                const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n                return !controlValue || this._matchesFilter(controlValue) ?\n                    null : { 'matDatepickerFilter': true };\n            };\n            /** The form control validator for the min date. */\n            this._minValidator = (control) => {\n                const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n                const min = this._getMinDate();\n                return (!min || !controlValue ||\n                    this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                    null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n            };\n            /** The form control validator for the max date. */\n            this._maxValidator = (control) => {\n                const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n                const max = this._getMaxDate();\n                return (!max || !controlValue ||\n                    this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                    null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n            };\n            /** Whether the last value set on the input was valid. */\n            this._lastValueValid = false;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._dateAdapter) {\n                    throw createMissingDateImplError('DateAdapter');\n                }\n                if (!this._dateFormats) {\n                    throw createMissingDateImplError('MAT_DATE_FORMATS');\n                }\n            }\n            // Update the displayed date when the locale changes.\n            this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n                this._assignValueProgrammatically(this.value);\n            });\n        }\n        /** The value of the input. */\n        get value() {\n            return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n        }\n        set value(value) {\n            this._assignValueProgrammatically(value);\n        }\n        /** Whether the datepicker-input is disabled. */\n        get disabled() { return !!this._disabled || this._parentDisabled(); }\n        set disabled(value) {\n            const newValue = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            const element = this._elementRef.nativeElement;\n            if (this._disabled !== newValue) {\n                this._disabled = newValue;\n                this.stateChanges.next(undefined);\n            }\n            // We need to null check the `blur` method, because it's undefined during SSR.\n            // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n            // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n            // element has been inserted.\n            if (newValue && this._isInitialized && element.blur) {\n                // Normally, native input elements automatically blur if they turn disabled. This behavior\n                // is problematic, because it would mean that it triggers another change detection cycle,\n                // which then causes a changed after checked error if the input element was focused before.\n                element.blur();\n            }\n        }\n        /** Gets the base validator functions. */\n        _getValidators() {\n            return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n        }\n        /** Registers a date selection model with the input. */\n        _registerModel(model) {\n            this._model = model;\n            this._valueChangesSubscription.unsubscribe();\n            if (this._pendingValue) {\n                this._assignValue(this._pendingValue);\n            }\n            this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n                if (this._shouldHandleChangeEvent(event)) {\n                    const value = this._getValueFromModel(event.selection);\n                    this._lastValueValid = this._isValidValue(value);\n                    this._cvaOnChange(value);\n                    this._onTouched();\n                    this._formatValue(value);\n                    this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                }\n            });\n        }\n        ngAfterViewInit() {\n            this._isInitialized = true;\n        }\n        ngOnChanges(changes) {\n            if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n                this.stateChanges.next(undefined);\n            }\n        }\n        ngOnDestroy() {\n            this._valueChangesSubscription.unsubscribe();\n            this._localeSubscription.unsubscribe();\n            this.stateChanges.complete();\n        }\n        /** @docs-private */\n        registerOnValidatorChange(fn) {\n            this._validatorOnChange = fn;\n        }\n        /** @docs-private */\n        validate(c) {\n            return this._validator ? this._validator(c) : null;\n        }\n        // Implemented as part of ControlValueAccessor.\n        writeValue(value) {\n            this._assignValueProgrammatically(value);\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnChange(fn) {\n            this._cvaOnChange = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n        }\n        _onKeydown(event) {\n            const isAltDownArrow = event.altKey && event.keyCode === keycodes[\"c\" /* DOWN_ARROW */];\n            if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n                this._openPopup();\n                event.preventDefault();\n            }\n        }\n        _onInput(value) {\n            const lastValueWasValid = this._lastValueValid;\n            let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n            this._lastValueValid = this._isValidValue(date);\n            date = this._dateAdapter.getValidDateOrNull(date);\n            if (!this._dateAdapter.sameDate(date, this.value)) {\n                this._assignValue(date);\n                this._cvaOnChange(date);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n            else {\n                // Call the CVA change handler for invalid values\n                // since this is what marks the control as dirty.\n                if (value && !this.value) {\n                    this._cvaOnChange(date);\n                }\n                if (lastValueWasValid !== this._lastValueValid) {\n                    this._validatorOnChange();\n                }\n            }\n        }\n        _onChange() {\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        /** Handles blur events on the input. */\n        _onBlur() {\n            // Reformat the input only if we have a valid value.\n            if (this.value) {\n                this._formatValue(this.value);\n            }\n            this._onTouched();\n        }\n        /** Formats a value and sets it on the input element. */\n        _formatValue(value) {\n            this._elementRef.nativeElement.value =\n                value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n        }\n        /** Assigns a value to the model. */\n        _assignValue(value) {\n            // We may get some incoming values before the model was\n            // assigned. Save the value so that we can assign it later.\n            if (this._model) {\n                this._assignValueToModel(value);\n                this._pendingValue = null;\n            }\n            else {\n                this._pendingValue = value;\n            }\n        }\n        /** Whether a value is considered valid. */\n        _isValidValue(value) {\n            return !value || this._dateAdapter.isValid(value);\n        }\n        /**\n         * Checks whether a parent control is disabled. This is in place so that it can be overridden\n         * by inputs extending this one which can be placed inside of a group that can be disabled.\n         */\n        _parentDisabled() {\n            return false;\n        }\n        /** Programmatically assigns a value to the input. */\n        _assignValueProgrammatically(value) {\n            value = this._dateAdapter.deserialize(value);\n            this._lastValueValid = this._isValidValue(value);\n            value = this._dateAdapter.getValidDateOrNull(value);\n            this._assignValue(value);\n            this._formatValue(value);\n        }\n        /** Gets whether a value matches the current date filter. */\n        _matchesFilter(value) {\n            const filter = this._getDateFilter();\n            return !filter || filter(value);\n        }\n    }\n    MatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8)); };\n    MatDatepickerInputBase.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return MatDatepickerInputBase;\n})();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */],\n    useExisting: /*@__PURE__*/ Object(core[\"W\" /* forwardRef */])(() => datepicker_MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */],\n    useExisting: /*@__PURE__*/ Object(core[\"W\" /* forwardRef */])(() => datepicker_MatDatepickerInput),\n    multi: true\n};\nlet datepicker_MatDatepickerInput = /*@__PURE__*/ (() => {\n    class MatDatepickerInput extends datepicker_MatDatepickerInputBase {\n        constructor(elementRef, dateAdapter, dateFormats, _formField) {\n            super(elementRef, dateAdapter, dateFormats);\n            this._formField = _formField;\n            this._closedSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            this._validator = fesm2015_forms[\"t\" /* Validators */].compose(super._getValidators());\n        }\n        /** The datepicker that this input is associated with. */\n        set matDatepicker(datepicker) {\n            if (datepicker) {\n                this._datepicker = datepicker;\n                this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n                this._registerModel(datepicker.registerInput(this));\n            }\n        }\n        /** The minimum valid date. */\n        get min() { return this._min; }\n        set min(value) {\n            const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            if (!this._dateAdapter.sameDate(validValue, this._min)) {\n                this._min = validValue;\n                this._validatorOnChange();\n            }\n        }\n        /** The maximum valid date. */\n        get max() { return this._max; }\n        set max(value) {\n            const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            if (!this._dateAdapter.sameDate(validValue, this._max)) {\n                this._max = validValue;\n                this._validatorOnChange();\n            }\n        }\n        /** Function that can be used to filter out dates within the datepicker. */\n        get dateFilter() { return this._dateFilter; }\n        set dateFilter(value) {\n            const wasMatchingValue = this._matchesFilter(this.value);\n            this._dateFilter = value;\n            if (this._matchesFilter(this.value) !== wasMatchingValue) {\n                this._validatorOnChange();\n            }\n        }\n        /**\n         * Gets the element that the datepicker popup should be connected to.\n         * @return The element to connect the popup to.\n         */\n        getConnectedOverlayOrigin() {\n            return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n        }\n        /** Returns the palette used by the input's form field, if any. */\n        getThemePalette() {\n            return this._formField ? this._formField.color : undefined;\n        }\n        /** Gets the value at which the calendar should start. */\n        getStartValue() {\n            return this.value;\n        }\n        ngOnDestroy() {\n            super.ngOnDestroy();\n            this._closedSubscription.unsubscribe();\n        }\n        /** Opens the associated datepicker. */\n        _openPopup() {\n            if (this._datepicker) {\n                this._datepicker.open();\n            }\n        }\n        _getValueFromModel(modelValue) {\n            return modelValue;\n        }\n        _assignValueToModel(value) {\n            if (this._model) {\n                this._model.updateSelection(value, this);\n            }\n        }\n        /** Gets the input's minimum date. */\n        _getMinDate() {\n            return this._min;\n        }\n        /** Gets the input's maximum date. */\n        _getMaxDate() {\n            return this._max;\n        }\n        /** Gets the input's date filtering function. */\n        _getDateFilter() {\n            return this._dateFilter;\n        }\n        _shouldHandleChangeEvent(event) {\n            return event.source !== this;\n        }\n    }\n    MatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](form_field[\"a\" /* MAT_FORM_FIELD */], 8)); };\n    MatDatepickerInput.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n            }\n            if (rf & 2) {\n                core[\"Zb\" /* ɵɵhostProperty */](\"disabled\", ctx.disabled);\n                core[\"Eb\" /* ɵɵattribute */](\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n            }\n        }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                MAT_DATEPICKER_VALUE_ACCESSOR,\n                MAT_DATEPICKER_VALIDATORS,\n                { provide: input[\"a\" /* MAT_INPUT_VALUE_ACCESSOR */], useExisting: MatDatepickerInput },\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatDatepickerInput;\n})();\nlet datepicker_MatDatepickerToggleIcon = /*@__PURE__*/ (() => {\n    class MatDatepickerToggleIcon {\n    }\n    MatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\n    MatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n    return MatDatepickerToggleIcon;\n})();\nlet datepicker_MatDatepickerToggle = /*@__PURE__*/ (() => {\n    class MatDatepickerToggle {\n        constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n            this._intl = _intl;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._stateChanges = Subscription[\"a\" /* Subscription */].EMPTY;\n            const parsedTabIndex = Number(defaultTabIndex);\n            this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        }\n        /** Whether the toggle button is disabled. */\n        get disabled() {\n            if (this._disabled === undefined && this.datepicker) {\n                return this.datepicker.disabled;\n            }\n            return !!this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        ngOnChanges(changes) {\n            if (changes['datepicker']) {\n                this._watchStateChanges();\n            }\n        }\n        ngOnDestroy() {\n            this._stateChanges.unsubscribe();\n        }\n        ngAfterContentInit() {\n            this._watchStateChanges();\n        }\n        _open(event) {\n            if (this.datepicker && !this.disabled) {\n                this.datepicker.open();\n                event.stopPropagation();\n            }\n        }\n        _watchStateChanges() {\n            const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : Object(of[\"a\" /* of */])();\n            const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n                this.datepicker.datepickerInput.stateChanges : Object(of[\"a\" /* of */])();\n            const datepickerToggled = this.datepicker ?\n                Object(merge[\"a\" /* merge */])(this.datepicker.openedStream, this.datepicker.closedStream) :\n                Object(of[\"a\" /* of */])();\n            this._stateChanges.unsubscribe();\n            this._stateChanges = Object(merge[\"a\" /* merge */])(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n    }\n    MatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerIntl), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"bc\" /* ɵɵinjectAttribute */]('tabindex')); };\n    MatDatepickerToggle.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, datepicker_MatDatepickerToggleIcon, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._customIcon = _t.first);\n            }\n        }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](datepicker_c2, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._button = _t.first);\n            }\n        }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n            }\n        }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](datepicker_c3);\n                core[\"Wb\" /* ɵɵelementStart */](0, \"button\", 0, 1);\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n                core[\"Gc\" /* ɵɵtemplate */](2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n                core[\"nc\" /* ɵɵprojection */](3);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n                core[\"Eb\" /* ɵɵattribute */](\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n                core[\"Db\" /* ɵɵadvance */](2);\n                core[\"pc\" /* ɵɵproperty */](\"ngIf\", !ctx._customIcon);\n            }\n        }, directives: [fesm2015_button[\"b\" /* MatButton */], common[\"m\" /* NgIf */]], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatDatepickerToggle;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('MAT_DATE_RANGE_INPUT_PARENT');\nlet datepicker_MatDateRangeInputPartBase = /*@__PURE__*/ (() => {\n    class MatDateRangeInputPartBase extends datepicker_MatDatepickerInputBase {\n        constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n            super(elementRef, dateAdapter, dateFormats);\n            this._rangeInput = _rangeInput;\n            this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n            this._injector = _injector;\n            this._parentForm = _parentForm;\n            this._parentFormGroup = _parentFormGroup;\n        }\n        ngOnInit() {\n            // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n            // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n            // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n            // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n            // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n            // everything has been resolved.\n            const ngControl = this._injector.get(fesm2015_forms[\"l\" /* NgControl */], null, core[\"r\" /* InjectFlags */].Self);\n            if (ngControl) {\n                this.ngControl = ngControl;\n            }\n        }\n        ngDoCheck() {\n            if (this.ngControl) {\n                // We need to re-evaluate this on every change detection cycle, because there are some\n                // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n                // that whatever logic is in here has to be super lean or we risk destroying the performance.\n                this.updateErrorState();\n            }\n        }\n        /** Gets whether the input is empty. */\n        isEmpty() {\n            return this._elementRef.nativeElement.value.length === 0;\n        }\n        /** Gets the placeholder of the input. */\n        _getPlaceholder() {\n            return this._elementRef.nativeElement.placeholder;\n        }\n        /** Focuses the input. */\n        focus() {\n            this._elementRef.nativeElement.focus();\n        }\n        /** Handles `input` events on the input element. */\n        _onInput(value) {\n            super._onInput(value);\n            this._rangeInput._handleChildValueChange();\n        }\n        /** Opens the datepicker associated with the input. */\n        _openPopup() {\n            this._rangeInput._openDatepicker();\n        }\n        /** Gets the minimum date from the range input. */\n        _getMinDate() {\n            return this._rangeInput.min;\n        }\n        /** Gets the maximum date from the range input. */\n        _getMaxDate() {\n            return this._rangeInput.max;\n        }\n        /** Gets the date filter function from the range input. */\n        _getDateFilter() {\n            return this._rangeInput.dateFilter;\n        }\n        _parentDisabled() {\n            return this._rangeInput._groupDisabled;\n        }\n        _shouldHandleChangeEvent({ source }) {\n            return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n        }\n        _assignValueProgrammatically(value) {\n            super._assignValueProgrammatically(value);\n            const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n                this._rangeInput._startInput);\n            opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n        }\n    }\n    MatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATE_RANGE_INPUT_PARENT), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"d\" /* ErrorStateMatcher */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"t\" /* Injector */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"o\" /* NgForm */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"h\" /* FormGroupDirective */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8)); };\n    MatDateRangeInputPartBase.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDateRangeInputPartBase, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatDateRangeInputPartBase;\n})();\nconst _MatDateRangeInputBase = \n// Needs to be `as any`, because the base class is abstract.\n/*@__PURE__*/ Object(fesm2015_core[\"y\" /* mixinErrorState */])(datepicker_MatDateRangeInputPartBase);\nlet datepicker_MatStartDate = /*@__PURE__*/ (() => {\n    class MatStartDate extends _MatDateRangeInputBase {\n        constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n            // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n            // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n            // constructor once ViewEngine is removed.\n            super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n            /** Validator that checks that the start date isn't after the end date. */\n            this._startValidator = (control) => {\n                const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n                const end = this._model ? this._model.selection.end : null;\n                return (!start || !end ||\n                    this._dateAdapter.compareDate(start, end) <= 0) ?\n                    null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n            };\n            this._validator = fesm2015_forms[\"t\" /* Validators */].compose([...super._getValidators(), this._startValidator]);\n        }\n        ngOnInit() {\n            // Normally this happens automatically, but it seems to break if not added explicitly when all\n            // of the criteria below are met:\n            // 1) The class extends a TS mixin.\n            // 2) The application is running in ViewEngine.\n            // 3) The application is being transpiled through tsickle.\n            // This can be removed once google3 is completely migrated to Ivy.\n            super.ngOnInit();\n        }\n        ngDoCheck() {\n            // Normally this happens automatically, but it seems to break if not added explicitly when all\n            // of the criteria below are met:\n            // 1) The class extends a TS mixin.\n            // 2) The application is running in ViewEngine.\n            // 3) The application is being transpiled through tsickle.\n            // This can be removed once google3 is completely migrated to Ivy.\n            super.ngDoCheck();\n        }\n        _getValueFromModel(modelValue) {\n            return modelValue.start;\n        }\n        _assignValueToModel(value) {\n            if (this._model) {\n                const range = new DateRange(value, this._model.selection.end);\n                this._model.updateSelection(range, this);\n            }\n        }\n        _formatValue(value) {\n            super._formatValue(value);\n            // Any time the input value is reformatted we need to tell the parent.\n            this._rangeInput._handleChildValueChange();\n        }\n        /** Gets the value that should be used when mirroring the input's size. */\n        getMirrorValue() {\n            const element = this._elementRef.nativeElement;\n            const value = element.value;\n            return value.length > 0 ? value : element.placeholder;\n        }\n    }\n    MatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATE_RANGE_INPUT_PARENT), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"d\" /* ErrorStateMatcher */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"t\" /* Injector */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"o\" /* NgForm */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"h\" /* FormGroupDirective */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8)); };\n    MatStartDate.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n            }\n            if (rf & 2) {\n                core[\"Zb\" /* ɵɵhostProperty */](\"disabled\", ctx.disabled);\n                core[\"Eb\" /* ɵɵattribute */](\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n            }\n        }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */], useExisting: MatStartDate, multi: true },\n                { provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */], useExisting: MatStartDate, multi: true }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatStartDate;\n})();\nlet datepicker_MatEndDate = /*@__PURE__*/ (() => {\n    class MatEndDate extends _MatDateRangeInputBase {\n        constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n            // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n            // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n            // constructor once ViewEngine is removed.\n            super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n            /** Validator that checks that the end date isn't before the start date. */\n            this._endValidator = (control) => {\n                const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n                const start = this._model ? this._model.selection.start : null;\n                return (!end || !start ||\n                    this._dateAdapter.compareDate(end, start) >= 0) ?\n                    null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n            };\n            this._validator = fesm2015_forms[\"t\" /* Validators */].compose([...super._getValidators(), this._endValidator]);\n        }\n        ngOnInit() {\n            // Normally this happens automatically, but it seems to break if not added explicitly when all\n            // of the criteria below are met:\n            // 1) The class extends a TS mixin.\n            // 2) The application is running in ViewEngine.\n            // 3) The application is being transpiled through tsickle.\n            // This can be removed once google3 is completely migrated to Ivy.\n            super.ngOnInit();\n        }\n        ngDoCheck() {\n            // Normally this happens automatically, but it seems to break if not added explicitly when all\n            // of the criteria below are met:\n            // 1) The class extends a TS mixin.\n            // 2) The application is running in ViewEngine.\n            // 3) The application is being transpiled through tsickle.\n            // This can be removed once google3 is completely migrated to Ivy.\n            super.ngDoCheck();\n        }\n        _getValueFromModel(modelValue) {\n            return modelValue.end;\n        }\n        _assignValueToModel(value) {\n            if (this._model) {\n                const range = new DateRange(this._model.selection.start, value);\n                this._model.updateSelection(range, this);\n            }\n        }\n        _onKeydown(event) {\n            // If the user is pressing backspace on an empty end input, move focus back to the start.\n            if (event.keyCode === keycodes[\"b\" /* BACKSPACE */] && !this._elementRef.nativeElement.value) {\n                this._rangeInput._startInput.focus();\n            }\n            super._onKeydown(event);\n        }\n    }\n    MatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(core[\"Qb\" /* ɵɵdirectiveInject */](MAT_DATE_RANGE_INPUT_PARENT), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"d\" /* ErrorStateMatcher */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"t\" /* Injector */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"o\" /* NgForm */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"h\" /* FormGroupDirective */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"e\" /* MAT_DATE_FORMATS */], 8)); };\n    MatEndDate.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n            }\n            if (rf & 2) {\n                core[\"Zb\" /* ɵɵhostProperty */](\"disabled\", ctx.disabled);\n                core[\"Eb\" /* ɵɵattribute */](\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n            }\n        }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: fesm2015_forms[\"k\" /* NG_VALUE_ACCESSOR */], useExisting: MatEndDate, multi: true },\n                { provide: fesm2015_forms[\"j\" /* NG_VALIDATORS */], useExisting: MatEndDate, multi: true }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatEndDate;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet datepicker_nextUniqueId = 0;\nlet datepicker_MatDateRangeInput = /*@__PURE__*/ (() => {\n    class MatDateRangeInput {\n        constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            this._dateAdapter = _dateAdapter;\n            this._formField = _formField;\n            this._closedSubscription = Subscription[\"a\" /* Subscription */].EMPTY;\n            /** Unique ID for the input. */\n            this.id = `mat-date-range-input-${datepicker_nextUniqueId++}`;\n            /** Whether the control is focused. */\n            this.focused = false;\n            /** Name of the form control. */\n            this.controlType = 'mat-date-range-input';\n            this._groupDisabled = false;\n            /** Value for the `aria-describedby` attribute of the inputs. */\n            this._ariaDescribedBy = null;\n            /** Separator text to be shown between the inputs. */\n            this.separator = '–';\n            /** Start of the comparison range that should be shown in the calendar. */\n            this.comparisonStart = null;\n            /** End of the comparison range that should be shown in the calendar. */\n            this.comparisonEnd = null;\n            /** Emits when the input's state has changed. */\n            this.stateChanges = new Subject[\"a\" /* Subject */]();\n            if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            // TODO(crisbeto): remove `as any` after #18206 lands.\n            this.ngControl = control;\n        }\n        /** Current value of the range input. */\n        get value() {\n            return this._model ? this._model.selection : null;\n        }\n        /** Whether the control's label should float. */\n        get shouldLabelFloat() {\n            return this.focused || !this.empty;\n        }\n        /**\n         * Implemented as a part of `MatFormFieldControl`.\n         * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n         * @docs-private\n         */\n        get placeholder() {\n            var _a, _b;\n            const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n            const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n            return (start || end) ? `${start} ${this.separator} ${end}` : '';\n        }\n        /** The range picker that this input is associated with. */\n        get rangePicker() { return this._rangePicker; }\n        set rangePicker(rangePicker) {\n            if (rangePicker) {\n                this._model = rangePicker.registerInput(this);\n                this._rangePicker = rangePicker;\n                this._closedSubscription.unsubscribe();\n                this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                    var _a, _b;\n                    (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                    (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n                });\n                this._registerModel(this._model);\n            }\n        }\n        /** Whether the input is required. */\n        get required() { return !!this._required; }\n        set required(value) {\n            this._required = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n        }\n        /** Function that can be used to filter out dates within the date range picker. */\n        get dateFilter() { return this._dateFilter; }\n        set dateFilter(value) {\n            const start = this._startInput;\n            const end = this._endInput;\n            const wasMatchingStart = start && start._matchesFilter(start.value);\n            const wasMatchingEnd = end && end._matchesFilter(start.value);\n            this._dateFilter = value;\n            if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n                start._validatorOnChange();\n            }\n            if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n                end._validatorOnChange();\n            }\n        }\n        /** The minimum valid date. */\n        get min() { return this._min; }\n        set min(value) {\n            const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            if (!this._dateAdapter.sameDate(validValue, this._min)) {\n                this._min = validValue;\n                this._revalidate();\n            }\n        }\n        /** The maximum valid date. */\n        get max() { return this._max; }\n        set max(value) {\n            const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n            if (!this._dateAdapter.sameDate(validValue, this._max)) {\n                this._max = validValue;\n                this._revalidate();\n            }\n        }\n        /** Whether the input is disabled. */\n        get disabled() {\n            return (this._startInput && this._endInput) ?\n                (this._startInput.disabled && this._endInput.disabled) :\n                this._groupDisabled;\n        }\n        set disabled(value) {\n            const newValue = Object(coercion[\"c\" /* coerceBooleanProperty */])(value);\n            if (newValue !== this._groupDisabled) {\n                this._groupDisabled = newValue;\n                this.stateChanges.next(undefined);\n            }\n        }\n        /** Whether the input is in an error state. */\n        get errorState() {\n            if (this._startInput && this._endInput) {\n                return this._startInput.errorState || this._endInput.errorState;\n            }\n            return false;\n        }\n        /** Whether the datepicker input is empty. */\n        get empty() {\n            const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n            const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n            return startEmpty && endEmpty;\n        }\n        /**\n         * Implemented as a part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        setDescribedByIds(ids) {\n            this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n        }\n        /**\n         * Implemented as a part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        onContainerClick() {\n            if (!this.focused && !this.disabled) {\n                if (!this._model || !this._model.selection.start) {\n                    this._startInput.focus();\n                }\n                else {\n                    this._endInput.focus();\n                }\n            }\n        }\n        ngAfterContentInit() {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._startInput) {\n                    throw Error('mat-date-range-input must contain a matStartDate input');\n                }\n                if (!this._endInput) {\n                    throw Error('mat-date-range-input must contain a matEndDate input');\n                }\n            }\n            if (this._model) {\n                this._registerModel(this._model);\n            }\n            // We don't need to unsubscribe from this, because we\n            // know that the input streams will be completed on destroy.\n            Object(merge[\"a\" /* merge */])(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n                this.stateChanges.next(undefined);\n            });\n        }\n        ngOnChanges(changes) {\n            if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n                this.stateChanges.next(undefined);\n            }\n        }\n        ngOnDestroy() {\n            this._closedSubscription.unsubscribe();\n            this.stateChanges.complete();\n        }\n        /** Gets the date at which the calendar should start. */\n        getStartValue() {\n            return this.value ? this.value.start : null;\n        }\n        /** Gets the input's theme palette. */\n        getThemePalette() {\n            return this._formField ? this._formField.color : undefined;\n        }\n        /** Gets the element to which the calendar overlay should be attached. */\n        getConnectedOverlayOrigin() {\n            return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n        }\n        /** Gets the value that is used to mirror the state input. */\n        _getInputMirrorValue() {\n            return this._startInput ? this._startInput.getMirrorValue() : '';\n        }\n        /** Whether the input placeholders should be hidden. */\n        _shouldHidePlaceholders() {\n            return this._startInput ? !this._startInput.isEmpty() : false;\n        }\n        /** Handles the value in one of the child inputs changing. */\n        _handleChildValueChange() {\n            this.stateChanges.next(undefined);\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Opens the date range picker associated with the input. */\n        _openDatepicker() {\n            if (this._rangePicker) {\n                this._rangePicker.open();\n            }\n        }\n        /** Whether the separate text should be hidden. */\n        _shouldHideSeparator() {\n            return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n        }\n        /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n        _getAriaLabelledby() {\n            const formField = this._formField;\n            return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n        }\n        /** Re-runs the validators on the start/end inputs. */\n        _revalidate() {\n            if (this._startInput) {\n                this._startInput._validatorOnChange();\n            }\n            if (this._endInput) {\n                this._endInput._validatorOnChange();\n            }\n        }\n        /** Registers the current date selection model with the start/end inputs. */\n        _registerModel(model) {\n            if (this._startInput) {\n                this._startInput._registerModel(model);\n            }\n            if (this._endInput) {\n                this._endInput._registerModel(model);\n            }\n        }\n    }\n    MatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(core[\"Qb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_forms[\"b\" /* ControlContainer */], 10), core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_core[\"c\" /* DateAdapter */], 8), core[\"Qb\" /* ɵɵdirectiveInject */](form_field[\"a\" /* MAT_FORM_FIELD */], 8)); };\n    MatDateRangeInput.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, datepicker_MatStartDate, 1);\n                core[\"Jb\" /* ɵɵcontentQuery */](dirIndex, datepicker_MatEndDate, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._startInput = _t.first);\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._endInput = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Eb\" /* ɵɵattribute */](\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n            }\n        }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: form_field[\"d\" /* MatFormFieldControl */], useExisting: MatDateRangeInput },\n                { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n            ]), core[\"Bb\" /* ɵɵNgOnChangesFeature */]], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */](_c5);\n                core[\"Wb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"ec\" /* ɵɵlistener */](\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx.focused = $event !== null; });\n                core[\"Wb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"nc\" /* ɵɵprojection */](2);\n                core[\"Wb\" /* ɵɵelementStart */](3, \"span\", 2);\n                core[\"Ic\" /* ɵɵtext */](4);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](5, \"span\", 3);\n                core[\"Ic\" /* ɵɵtext */](6);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Wb\" /* ɵɵelementStart */](7, \"div\", 4);\n                core[\"nc\" /* ɵɵprojection */](8, 1);\n                core[\"Vb\" /* ɵɵelementEnd */]();\n                core[\"Vb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Db\" /* ɵɵadvance */](4);\n                core[\"Jc\" /* ɵɵtextInterpolate */](ctx._getInputMirrorValue());\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Ib\" /* ɵɵclassProp */](\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n                core[\"Db\" /* ɵɵadvance */](1);\n                core[\"Jc\" /* ɵɵtextInterpolate */](ctx.separator);\n            }\n        }, directives: [a11y[\"e\" /* CdkMonitorFocus */]], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatDateRangeInput;\n})();\nlet datepicker_MatDateRangePicker = /*@__PURE__*/ (() => {\n    class MatDateRangePicker extends datepicker_MatDatepickerBase {\n        _forwardContentValues(instance) {\n            super._forwardContentValues(instance);\n            const input = this.datepickerInput;\n            if (input) {\n                instance.comparisonStart = input.comparisonStart;\n                instance.comparisonEnd = input.comparisonEnd;\n            }\n        }\n    }\n    MatDateRangePicker.ɵfac = function MatDateRangePicker_Factory(t) { return ɵMatDateRangePicker_BaseFactory(t || MatDateRangePicker); };\n    MatDateRangePicker.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                { provide: datepicker_MatDatepickerBase, useExisting: MatDateRangePicker },\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n    return MatDateRangePicker;\n})();\nconst ɵMatDateRangePicker_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Yb\" /* ɵɵgetInheritedFactory */](datepicker_MatDateRangePicker);\nlet datepicker_MatDatepickerApply = /*@__PURE__*/ (() => {\n    class MatDatepickerApply {\n        constructor(_datepicker) {\n            this._datepicker = _datepicker;\n        }\n        _applySelection() {\n            this._datepicker._applyPendingSelection();\n            this._datepicker.close();\n        }\n    }\n    MatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) { return new (t || MatDatepickerApply)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerBase)); };\n    MatDatepickerApply.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerApply, selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]], hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatDatepickerApply_click_HostBindingHandler() { return ctx._applySelection(); });\n            }\n        } });\n    return MatDatepickerApply;\n})();\nlet datepicker_MatDatepickerCancel = /*@__PURE__*/ (() => {\n    class MatDatepickerCancel {\n        constructor(_datepicker) {\n            this._datepicker = _datepicker;\n        }\n    }\n    MatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) { return new (t || MatDatepickerCancel)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerBase)); };\n    MatDatepickerCancel.ɵdir = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineDirective */]({ type: MatDatepickerCancel, selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]], hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"ec\" /* ɵɵlistener */](\"click\", function MatDatepickerCancel_click_HostBindingHandler() { return ctx._datepicker.close(); });\n            }\n        } });\n    return MatDatepickerCancel;\n})();\nlet datepicker_MatDatepickerActions = /*@__PURE__*/ (() => {\n    class MatDatepickerActions {\n        constructor(_datepicker, _viewContainerRef) {\n            this._datepicker = _datepicker;\n            this._viewContainerRef = _viewContainerRef;\n        }\n        ngAfterViewInit() {\n            this._portal = new fesm2015_portal[\"g\" /* TemplatePortal */](this._template, this._viewContainerRef);\n            this._datepicker.registerActions(this._portal);\n        }\n        ngOnDestroy() {\n            var _a;\n            this._datepicker.removeActions(this._portal);\n            // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n            if (this._portal && this._portal.isAttached) {\n                (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n            }\n        }\n    }\n    MatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) { return new (t || MatDatepickerActions)(core[\"Qb\" /* ɵɵdirectiveInject */](datepicker_MatDatepickerBase), core[\"Qb\" /* ɵɵdirectiveInject */](core[\"S\" /* ViewContainerRef */])); };\n    MatDatepickerActions.ɵcmp = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineComponent */]({ type: MatDatepickerActions, selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]], viewQuery: function MatDatepickerActions_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Lc\" /* ɵɵviewQuery */](core[\"O\" /* TemplateRef */], 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"uc\" /* ɵɵqueryRefresh */](_t = core[\"fc\" /* ɵɵloadQuery */]()) && (ctx._template = _t.first);\n            }\n        }, ngContentSelectors: datepicker_c1, decls: 1, vars: 0, consts: [[1, \"mat-datepicker-actions\"]], template: function MatDatepickerActions_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"oc\" /* ɵɵprojectionDef */]();\n                core[\"Gc\" /* ɵɵtemplate */](0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n            }\n        }, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatDatepickerActions;\n})();\nlet datepicker_MatDatepickerModule = /*@__PURE__*/ (() => {\n    class MatDatepickerModule {\n    }\n    MatDatepickerModule.ɵmod = /*@__PURE__*/ core[\"Ob\" /* ɵɵdefineNgModule */]({ type: MatDatepickerModule });\n    MatDatepickerModule.ɵinj = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n            datepicker_MatDatepickerIntl,\n            MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n        ], imports: [[\n                common[\"c\" /* CommonModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                fesm2015_dialog[\"f\" /* MatDialogModule */],\n                overlay[\"f\" /* OverlayModule */],\n                a11y[\"a\" /* A11yModule */],\n                fesm2015_portal[\"f\" /* PortalModule */],\n                fesm2015_core[\"j\" /* MatCommonModule */],\n            ], scrolling[\"c\" /* CdkScrollableModule */]] });\n    return MatDatepickerModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](datepicker_MatDatepickerModule, { declarations: function () { return [datepicker_MatCalendar, datepicker_MatCalendarBody, datepicker_MatDatepicker, datepicker_MatDatepickerContent, datepicker_MatDatepickerInput, datepicker_MatDatepickerToggle, datepicker_MatDatepickerToggleIcon, datepicker_MatMonthView, datepicker_MatYearView, datepicker_MatMultiYearView, datepicker_MatCalendarHeader, datepicker_MatDateRangeInput, datepicker_MatStartDate, datepicker_MatEndDate, datepicker_MatDateRangePicker, datepicker_MatDatepickerActions, datepicker_MatDatepickerCancel, datepicker_MatDatepickerApply]; }, imports: function () {\n            return [common[\"c\" /* CommonModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                fesm2015_dialog[\"f\" /* MatDialogModule */],\n                overlay[\"f\" /* OverlayModule */],\n                a11y[\"a\" /* A11yModule */],\n                fesm2015_portal[\"f\" /* PortalModule */],\n                fesm2015_core[\"j\" /* MatCommonModule */]];\n        }, exports: function () { return [scrolling[\"c\" /* CdkScrollableModule */], datepicker_MatCalendar, datepicker_MatCalendarBody, datepicker_MatDatepicker, datepicker_MatDatepickerContent, datepicker_MatDatepickerInput, datepicker_MatDatepickerToggle, datepicker_MatDatepickerToggleIcon, datepicker_MatMonthView, datepicker_MatYearView, datepicker_MatMultiYearView, datepicker_MatCalendarHeader, datepicker_MatDateRangeInput, datepicker_MatStartDate, datepicker_MatEndDate, datepicker_MatDateRangePicker, datepicker_MatDatepickerActions, datepicker_MatDatepickerCancel, datepicker_MatDatepickerApply]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=datepicker.js.map\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile-form/profile-form.module.ts\n\n\n\n\n\n\n\n\n\n\nlet profile_form_module_ProfileFormModule = /*@__PURE__*/ (() => {\n    class ProfileFormModule {\n    }\n    ProfileFormModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: ProfileFormModule });\n    ProfileFormModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function ProfileFormModule_Factory(t) { return new (t || ProfileFormModule)(); }, imports: [[\n                common[\"c\" /* CommonModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                fesm2015_forms[\"r\" /* ReactiveFormsModule */],\n                form_field[\"e\" /* MatFormFieldModule */],\n                input[\"c\" /* MatInputModule */],\n                select_MatSelectModule,\n                datepicker_MatDatepickerModule,\n                content_src[\"c\" /* ContentModule */],\n                icon[\"a\" /* IconModule */]\n            ]] });\n    return ProfileFormModule;\n})();\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/prefs-form/prefs-form.module.ts\n\n\n\n\n\n\n\n\n\n\nlet prefs_form_module_PreferencesFormModule = /*@__PURE__*/ (() => {\n    class PreferencesFormModule {\n    }\n    PreferencesFormModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: PreferencesFormModule });\n    PreferencesFormModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function PreferencesFormModule_Factory(t) { return new (t || PreferencesFormModule)(); }, imports: [[\n                common[\"c\" /* CommonModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                fesm2015_forms[\"r\" /* ReactiveFormsModule */],\n                form_field[\"e\" /* MatFormFieldModule */],\n                input[\"c\" /* MatInputModule */],\n                select_MatSelectModule,\n                datepicker_MatDatepickerModule,\n                content_src[\"c\" /* ContentModule */],\n                icon[\"a\" /* IconModule */]\n            ]] });\n    return PreferencesFormModule;\n})();\n\n// EXTERNAL MODULE: ./wizdm/src/app/utils/user/index.ts + 5 modules\nvar utils_user = __webpack_require__(\"lWmb\");\n\n// EXTERNAL MODULE: ./content/src/lib/streamer/content.directive.ts\nvar content_directive = __webpack_require__(\"Qfjl\");\n\n// EXTERNAL MODULE: ./gtag/src/lib/gtag.directive.ts\nvar gtag_directive = __webpack_require__(\"FkMH\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/navigator/actionbar/actionbar.directive.ts\nvar actionbar_directive = __webpack_require__(\"mx0f\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/flex-layout/esm2015/flex.js\nvar flex = __webpack_require__(\"VDRc\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js\nvar debounceTime = __webpack_require__(\"Kj3r\");\n\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(\"wd/R\");\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n\n// EXTERNAL MODULE: ./elements/src/lib/icon/icon.component.ts\nvar icon_component = __webpack_require__(\"h0Qx\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/text-field.js\nvar text_field = __webpack_require__(\"8sFK\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile-form/profile-form.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ProfileFormComponent_form_0_mat_error_9_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.userName == null ? null : msgs_r1.userName.errors == null ? null : msgs_r1.userName.errors.required);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_error_10_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.userName == null ? null : msgs_r1.userName.errors == null ? null : msgs_r1.userName.errors.format);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_error_11_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.userName == null ? null : msgs_r1.userName.errors == null ? null : msgs_r1.userName.errors.exists);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_error_20_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.firstName == null ? null : msgs_r1.firstName.errors == null ? null : msgs_r1.firstName.errors.required);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_error_35_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.email == null ? null : msgs_r1.email.errors == null ? null : msgs_r1.email.errors.format);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_error_43_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-error\");\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.phone == null ? null : msgs_r1.phone.errors == null ? null : msgs_r1.phone.errors.format);\n    }\n}\nfunction ProfileFormComponent_form_0_mat_option_72_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-option\", 19);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"span\");\n        core[\"Rb\" /* ɵɵelement */](2, \"wm-icon\", 20);\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const option_r16 = ctx.$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"value\", option_r16.value);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", option_r16.icon);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](option_r16.label);\n    }\n}\nfunction ProfileFormComponent_form_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"form\", 1);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](2, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](4, \"input\", 2);\n        core[\"Rb\" /* ɵɵelement */](5, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](6, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](7);\n        core[\"jc\" /* ɵɵpipe */](8, \"lowercase\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](9, ProfileFormComponent_form_0_mat_error_9_Template, 2, 1, \"mat-error\", 4);\n        core[\"Gc\" /* ɵɵtemplate */](10, ProfileFormComponent_form_0_mat_error_10_Template, 2, 1, \"mat-error\", 4);\n        core[\"Gc\" /* ɵɵtemplate */](11, ProfileFormComponent_form_0_mat_error_11_Template, 2, 1, \"mat-error\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](12, \"div\", 5);\n        core[\"Wb\" /* ɵɵelementStart */](13, \"mat-form-field\", 6);\n        core[\"Wb\" /* ɵɵelementStart */](14, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](15);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](16, \"input\", 7);\n        core[\"Rb\" /* ɵɵelement */](17, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](18, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](19);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](20, ProfileFormComponent_form_0_mat_error_20_Template, 2, 1, \"mat-error\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](21, \"mat-form-field\", 6);\n        core[\"Wb\" /* ɵɵelementStart */](22, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](23);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](24, \"input\", 8);\n        core[\"Rb\" /* ɵɵelement */](25, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](26, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](27);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](28, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](29, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](30);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](31, \"input\", 9);\n        core[\"Rb\" /* ɵɵelement */](32, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](33, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](34);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](35, ProfileFormComponent_form_0_mat_error_35_Template, 2, 1, \"mat-error\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](36, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](37, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](38);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](39, \"input\", 10);\n        core[\"Rb\" /* ɵɵelement */](40, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](41, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](42);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Gc\" /* ɵɵtemplate */](43, ProfileFormComponent_form_0_mat_error_43_Template, 2, 1, \"mat-error\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](44, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](45, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](46);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](47, \"textarea\", 11);\n        core[\"Rb\" /* ɵɵelement */](48, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](49, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](50);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](51, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](52, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](53);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](54, \"input\", 12);\n        core[\"Rb\" /* ɵɵelement */](55, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](56, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](57);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](58, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](59, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](60);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](61, \"input\", 13);\n        core[\"Rb\" /* ɵɵelement */](62, \"mat-datepicker-toggle\", 14);\n        core[\"Rb\" /* ɵɵelement */](63, \"mat-datepicker\", 15, 16);\n        core[\"Wb\" /* ɵɵelementStart */](65, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](66);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](67, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](68, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](69);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](70, \"wm-icon\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](71, \"mat-select\", 17);\n        core[\"Gc\" /* ɵɵtemplate */](72, ProfileFormComponent_form_0_mat_option_72_Template, 4, 3, \"mat-option\", 18);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](73, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](74);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const _r8 = core[\"vc\" /* ɵɵreference */](64);\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"formGroup\", ctx_r0);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.userName == null ? null : msgs_r1.userName.label) || \"Username\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.userName == null ? null : msgs_r1.userName.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](core[\"kc\" /* ɵɵpipeBind1 */](8, 37, ctx_r0.hostname + \"/@\" + ctx_r0.value.userName));\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.userName.errors == null ? null : ctx_r0.controls.userName.errors.required);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.userName.errors == null ? null : ctx_r0.controls.userName.errors.pattern);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.userName.errors == null ? null : ctx_r0.controls.userName.errors.exists);\n        core[\"Db\" /* ɵɵadvance */](4);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.firstName == null ? null : msgs_r1.firstName.label) || \"First name\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.firstName == null ? null : msgs_r1.firstName.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.firstName == null ? null : msgs_r1.firstName.hint);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.name.errors == null ? null : ctx_r0.controls.name.errors.required);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.lastName == null ? null : msgs_r1.lastName.label) || \"Last name\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.lastName == null ? null : msgs_r1.lastName.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.lastName == null ? null : msgs_r1.lastName.hint);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.email == null ? null : msgs_r1.email.label) || \"Email\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.email == null ? null : msgs_r1.email.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.email == null ? null : msgs_r1.email.hint);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.email.errors == null ? null : ctx_r0.controls.email.errors.email);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.phone == null ? null : msgs_r1.phone.label) || \"Phone\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.phone == null ? null : msgs_r1.phone.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.phone == null ? null : msgs_r1.phone.hint);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.controls.phone.errors == null ? null : ctx_r0.controls.phone.errors.phone);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.bio == null ? null : msgs_r1.bio.label) || \"Bio\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.bio == null ? null : msgs_r1.bio.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.bio == null ? null : msgs_r1.bio.hint);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.location == null ? null : msgs_r1.location.label) || \"Location\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.location == null ? null : msgs_r1.location.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.location == null ? null : msgs_r1.location.hint);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.birth == null ? null : msgs_r1.birth.label) || \"Birthday\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"matDatepicker\", _r8);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"for\", _r8);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"touchUi\", ctx_r0.isMobile);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.birth == null ? null : msgs_r1.birth.hint);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.gender == null ? null : msgs_r1.gender.label) || \"Gender\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", ctx_r0.genderIcon(msgs_r1.gender == null ? null : msgs_r1.gender.options) || (msgs_r1.gender == null ? null : msgs_r1.gender.icon));\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngForOf\", msgs_r1.gender == null ? null : msgs_r1.gender.options);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.gender == null ? null : msgs_r1.gender.hint);\n    }\n}\nlet profile_form_component_ProfileFormComponent = /*@__PURE__*/ (() => {\n    class ProfileFormComponent extends fesm2015_forms[\"g\" /* FormGroup */] {\n        constructor(user) {\n            // Builds the form controls\n            super({\n                userName: new fesm2015_forms[\"e\" /* FormControl */]('', fesm2015_forms[\"t\" /* Validators */].compose([fesm2015_forms[\"t\" /* Validators */].required, fesm2015_forms[\"t\" /* Validators */].pattern(/^[\\w\\d-_]+\\s*$/)])),\n                name: new fesm2015_forms[\"e\" /* FormControl */]('', fesm2015_forms[\"t\" /* Validators */].required),\n                lastName: new fesm2015_forms[\"e\" /* FormControl */](''),\n                bio: new fesm2015_forms[\"e\" /* FormControl */](''),\n                email: new fesm2015_forms[\"e\" /* FormControl */]('', fesm2015_forms[\"t\" /* Validators */].email),\n                birth: new fesm2015_forms[\"e\" /* FormControl */](''),\n                phone: new fesm2015_forms[\"e\" /* FormControl */](''),\n                location: new fesm2015_forms[\"e\" /* FormControl */](''),\n                gender: new fesm2015_forms[\"e\" /* FormControl */](''),\n            });\n            this.user = user;\n            this.formValueChange = new core[\"o\" /* EventEmitter */]();\n            // Installs the userName async validator\n            this.controls.userName.setAsyncValidators(this.userNameValidator);\n            // Monitors the form group for changes\n            this.sub = this.valueChanges.subscribe(value => {\n                // Formats the output data \n                const out = this.format(value);\n                // Emits the update\n                this.formValueChange.emit(out);\n                // Matches the new values against the original input data to reset the dirty flag in case they all match\n                if (Object.keys(this.controls).every(key => this.data[key] === out[key])) {\n                    Promise.resolve().then(() => this.markAsPristine());\n                }\n            });\n        }\n        /** The current host origin */\n        get hostname() { var _a; return ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.origin) || 'https:\\/\\/wizdm.io'; }\n        ngOnDestroy() { this.sub.unsubscribe(); }\n        format(value) {\n            const birth = moment_default.a.isMoment(value === null || value === void 0 ? void 0 : value.birth) ? (value === null || value === void 0 ? void 0 : value.birth).format(moment[\"defaultFormat\"]) : '';\n            return Object.assign(Object.assign({}, value), { birth });\n        }\n        get userNameValidator() {\n            const value$ = new BehaviorSubject[\"a\" /* BehaviorSubject */]('');\n            const result$ = value$.pipe(Object(debounceTime[\"a\" /* debounceTime */])(500), Object(switchMap[\"a\" /* switchMap */])(value => value ? this.user.doesUserNameExists(value, true) : Object(of[\"a\" /* of */])(false)), Object(map[\"a\" /* map */])(exists => exists ? ({ exists: true }) : null), Object(take[\"a\" /* take */])(1));\n            // Returns a validator function async checking if the project name already exists\n            return (control) => {\n                return value$.next(control.value), result$;\n            };\n        }\n        get userData() { return this.format(this.value); }\n        set userData(value) {\n            //if(!value || value == this.value) { return; }\n            // Turns the birthdate into a moment\n            const birth = value.birth ? moment_default()(value.birth, moment[\"defaultFormat\"]) : null;\n            // Replaces the old 'motto' with the new 'bio' field\n            if (value.motto && !value.bio) {\n                value.bio = value.motto;\n            }\n            // Keeps track of the original input data\n            this.data = value;\n            // Fills up the form with user data\n            this.patchValue(Object.assign(Object.assign({}, value), { birth }));\n            // Force userName control validation when empty\n            if (!value.userName) {\n                Promise.resolve().then(() => this.controls.userName.markAsTouched());\n            }\n            // Force name control validation when fullName is empty. This will build the search index as well\n            if (!value.fullName) {\n                Promise.resolve().then(() => this.controls.name.markAsTouched());\n            }\n            // Force the name update whenever the searchIndex is missing\n            else if (!value.searchIndex) {\n                Promise.resolve().then(() => this.controls.name.markAsDirty());\n            }\n        }\n        genderIcon(options) {\n            var _a;\n            return (_a = (options || []).find(icon => { var _a; return icon.value === ((_a = this.value) === null || _a === void 0 ? void 0 : _a.gender); })) === null || _a === void 0 ? void 0 : _a.icon;\n        }\n    }\n    ProfileFormComponent.ɵfac = function ProfileFormComponent_Factory(t) { return new (t || ProfileFormComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](utils_user[\"b\" /* UserProfile */])); };\n    ProfileFormComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: ProfileFormComponent, selectors: [[\"wm-profile-form\"]], inputs: { userData: [\"value\", \"userData\"] }, outputs: { formValueChange: \"valueChange\" }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 1, consts: [[\"fxLayout\", \"column\", \"fxLayoutGap\", \"32px\", 3, \"formGroup\", 4, \"wmContent\", \"wmContentSelect\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"32px\", 3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"userName\"], [\"matPrefix\", \"\", 3, \"icon\"], [4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayout.lt-sm\", \"column\", \"fxLayoutGap\", \"16px\"], [\"fxFlex\", \"50\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"cdkFocusInitial\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"cdkFocusInitial\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"formControlName\", \"phone\"], [\"matInput\", \"\", \"formControlName\", \"bio\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"1\"], [\"matInput\", \"\", \"formControlName\", \"location\"], [\"matInput\", \"\", \"formControlName\", \"birth\", 3, \"matDatepicker\"], [\"matPrefix\", \"\", 3, \"for\"], [3, \"touchUi\"], [\"picker\", \"\"], [\"formControlName\", \"gender\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"icon\"]], template: function ProfileFormComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, ProfileFormComponent_form_0_Template, 75, 39, \"form\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"settings-profile.form\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], fesm2015_forms[\"u\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"n\" /* NgControlStatusGroup */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"f\" /* DefaultLayoutGapDirective */], fesm2015_forms[\"h\" /* FormGroupDirective */], form_field[\"c\" /* MatFormField */], form_field[\"g\" /* MatLabel */], input[\"b\" /* MatInput */], fesm2015_forms[\"c\" /* DefaultValueAccessor */], fesm2015_forms[\"m\" /* NgControlStatus */], fesm2015_forms[\"f\" /* FormControlName */], icon_component[\"a\" /* IconComponent */], form_field[\"h\" /* MatPrefix */], form_field[\"f\" /* MatHint */], common[\"m\" /* NgIf */], flex[\"b\" /* DefaultFlexDirective */], text_field[\"b\" /* CdkTextareaAutosize */], datepicker_MatDatepickerInput, datepicker_MatDatepickerToggle, datepicker_MatDatepicker, select_MatSelect, common[\"l\" /* NgForOf */], form_field[\"b\" /* MatError */], fesm2015_core[\"m\" /* MatOption */]], pipes: [common[\"j\" /* LowerCasePipe */]], styles: [\"[_nghost-%COMP%]{display:block;position:relative;max-width:450px;width:100%}\"] });\n    return ProfileFormComponent;\n})();\n\n// EXTERNAL MODULE: ./connect/src/lib/storage/index.ts + 5 modules\nvar lib_storage = __webpack_require__(\"tFpD\");\n\n// EXTERNAL MODULE: ./elements/src/lib/avatar/avatar.component.ts + 1 modules\nvar avatar_component = __webpack_require__(\"a/j4\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile-photo/profile-photo.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ProfilePhotoComponent_ng_container_0_mat_progress_bar_5_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"mat-progress-bar\", 7);\n    }\n    if (rf & 2) {\n        const progress_r6 = ctx.ngIf;\n        core[\"pc\" /* ɵɵproperty */](\"mode\", progress_r6 < 100 ? \"determiante\" : \"indeterminate\")(\"value\", progress_r6);\n    }\n}\nfunction ProfilePhotoComponent_ng_container_0_button_7_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"button\", 8);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function ProfilePhotoComponent_ng_container_0_button_7_Template_button_click_0_listener() { core[\"yc\" /* ɵɵrestoreView */](_r8); const ctx_r7 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r7.deleteFile(); });\n        core[\"Rb\" /* ɵɵelement */](1, \"wm-icon\", 9);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", (msgs_r1.delete == null ? null : msgs_r1.delete.icon) || \"delete\");\n    }\n}\nfunction ProfilePhotoComponent_ng_container_0_ng_template_8_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"input\", 10, 11);\n        core[\"ec\" /* ɵɵlistener */](\"change\", function ProfilePhotoComponent_ng_container_0_ng_template_8_Template_input_change_0_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r12); const ctx_r11 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r11.uploadFile($event.target.files); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](2, \"button\", 8);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function ProfilePhotoComponent_ng_container_0_ng_template_8_Template_button_click_2_listener() { core[\"yc\" /* ɵɵrestoreView */](_r12); const _r10 = core[\"vc\" /* ɵɵreference */](1); _r10.value = \"\"; return _r10.click(); });\n        core[\"Rb\" /* ɵɵelement */](3, \"wm-icon\", 9);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */]().$implicit;\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", (msgs_r1.upload == null ? null : msgs_r1.upload.icon) || \"cloud_upload\");\n    }\n}\nfunction ProfilePhotoComponent_ng_container_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ub\" /* ɵɵelementContainerStart */](0);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"label\", 1);\n        core[\"Ic\" /* ɵɵtext */](2);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](3, \"div\", 2);\n        core[\"Rb\" /* ɵɵelement */](4, \"wm-avatar\", 3);\n        core[\"Gc\" /* ɵɵtemplate */](5, ProfilePhotoComponent_ng_container_0_mat_progress_bar_5_Template, 1, 2, \"mat-progress-bar\", 4);\n        core[\"jc\" /* ɵɵpipe */](6, \"async\");\n        core[\"Gc\" /* ɵɵtemplate */](7, ProfilePhotoComponent_ng_container_0_button_7_Template, 2, 1, \"button\", 5);\n        core[\"Gc\" /* ɵɵtemplate */](8, ProfilePhotoComponent_ng_container_0_ng_template_8_Template, 4, 1, \"ng-template\", null, 6, core[\"Hc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const _r4 = core[\"vc\" /* ɵɵreference */](9);\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.label || \"Profile picture\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"src\", ctx_r0.url);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", core[\"kc\" /* ɵɵpipeBind1 */](6, 5, ctx_r0.progress$));\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.validUrl)(\"ngIfElse\", _r4);\n    }\n}\nlet profile_photo_component_ProfilePhotoComponent = /*@__PURE__*/ (() => {\n    class ProfilePhotoComponent {\n        constructor(storage) {\n            this.storage = storage;\n            /** Emits image updates */\n            this.update = new core[\"o\" /* EventEmitter */]();\n        }\n        /** Sets the image url */\n        set url(url) {\n            // Vefifies the validity of the url enabling the deletion.\n            this.validUrl = this.storage.testURL(this._url = url);\n        }\n        /** Returns the current url  */\n        get url() { return this._url; }\n        /** Uploads a new image */\n        uploadFile(files) {\n            if (files.length <= 0) {\n                return;\n            }\n            const file = files.item(0);\n            // Creates the uploading task\n            const task = this.storage.upload(`${this.folder}/${file.name}`, file);\n            // Creates a progress observable from the task\n            this.progress$ = task.pipe(Object(map[\"a\" /* map */])(snap => Math.floor(100 * snap.bytesTransferred / snap.totalBytes)));\n            // Gets thh uploaded url once completed\n            task.then(snap => snap.ref.getDownloadURL())\n                // Notifies abouot the new url\n                .then(url => this.update.emit(url))\n                // Deletes the progress observable removing the progress bar from the view\n                .then(() => delete this.progress$);\n        }\n        /** Deletes the current image */\n        deleteFile() {\n            if (!this.url) {\n                return;\n            }\n            // Gets the torage ref from the URL\n            const ref = this.storage.fromURL(this.url);\n            // Deletes the file and notifies about it\n            if (ref) {\n                ref.delete().then(() => this.update.emit(null));\n            }\n            else {\n                this.update.emit(null);\n            }\n        }\n    }\n    ProfilePhotoComponent.ɵfac = function ProfilePhotoComponent_Factory(t) { return new (t || ProfilePhotoComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](lib_storage[\"b\" /* StorageService */])); };\n    ProfilePhotoComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: ProfilePhotoComponent, selectors: [[\"wm-profile-photo\"]], inputs: { folder: \"folder\", url: \"url\" }, outputs: { update: \"update\" }, decls: 1, vars: 1, consts: [[4, \"wmContent\", \"wmContentSelect\"], [1, \"label\", \"mat-small\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"16px\", 1, \"frame\"], [\"color\", \"primary\", \"shape\", \"squared\", 3, \"src\"], [\"color\", \"primary\", 3, \"mode\", \"value\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"class\", \"buttons\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"uploadBtn\", \"\"], [\"color\", \"primary\", 3, \"mode\", \"value\"], [\"mat-icon-button\", \"\", 1, \"buttons\", 3, \"click\"], [3, \"icon\"], [\"type\", \"file\", \"accept\", \"image/*\", 2, \"display\", \"none\", 3, \"change\"], [\"openfile\", \"\"]], template: function ProfilePhotoComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, ProfilePhotoComponent_ng_container_0_Template, 10, 7, \"ng-container\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"settings-profile.photo\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"f\" /* DefaultLayoutGapDirective */], avatar_component[\"a\" /* AvatarComponent */], common[\"m\" /* NgIf */], progress_bar[\"a\" /* MatProgressBar */], fesm2015_button[\"b\" /* MatButton */], icon_component[\"a\" /* IconComponent */]], pipes: [common[\"b\" /* AsyncPipe */]], styles: [\"[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]   .label[_ngcontent-%COMP%]{display:block;color:rgba(0,0,0,.56)}[_nghost-%COMP%]   .frame[_ngcontent-%COMP%]{display:block;position:relative}[_nghost-%COMP%]   .wm-avatar[_ngcontent-%COMP%]{position:relative;width:250px;height:250px}[_nghost-%COMP%]   .buttons[_ngcontent-%COMP%]{position:absolute;right:0;top:0}\"] });\n    return ProfilePhotoComponent;\n})();\n\n// EXTERNAL MODULE: ./wizdm/src/app/utils/platform/index.ts + 5 modules\nvar platform = __webpack_require__(\"OWci\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/fesm2015/router.js + 1 modules\nvar fesm2015_router = __webpack_require__(\"iInd\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/prefs-form/prefs-form.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction PreferencesFormComponent_form_0_mat_option_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-option\", 6);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const option_r4 = ctx.$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"value\", option_r4.value);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](option_r4.label);\n    }\n}\nfunction PreferencesFormComponent_form_0_mat_option_14_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵelementStart */](0, \"mat-option\", 6);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const option_r5 = ctx.$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"value\", option_r5.value);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](option_r5.label);\n    }\n}\nfunction PreferencesFormComponent_form_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"form\", 1);\n        core[\"Wb\" /* ɵɵelementStart */](1, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](2, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](4, \"wm-icon\", 2);\n        core[\"Wb\" /* ɵɵelementStart */](5, \"mat-select\", 3);\n        core[\"ec\" /* ɵɵlistener */](\"selectionChange\", function PreferencesFormComponent_form_0_Template_mat_select_selectionChange_5_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r7); const ctx_r6 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r6.changeTheme($event.value); });\n        core[\"Gc\" /* ɵɵtemplate */](6, PreferencesFormComponent_form_0_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](7, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](8);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](9, \"mat-form-field\");\n        core[\"Wb\" /* ɵɵelementStart */](10, \"mat-label\");\n        core[\"Ic\" /* ɵɵtext */](11);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](12, \"wm-icon\", 2);\n        core[\"Wb\" /* ɵɵelementStart */](13, \"mat-select\", 5);\n        core[\"ec\" /* ɵɵlistener */](\"selectionChange\", function PreferencesFormComponent_form_0_Template_mat_select_selectionChange_13_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r7); const ctx_r8 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r8.changeLanguage($event.value); });\n        core[\"Gc\" /* ɵɵtemplate */](14, PreferencesFormComponent_form_0_mat_option_14_Template, 2, 2, \"mat-option\", 4);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](15, \"mat-hint\");\n        core[\"Ic\" /* ɵɵtext */](16);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"pc\" /* ɵɵproperty */](\"formGroup\", ctx_r0);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.theme == null ? null : msgs_r1.theme.label) || \"Theme\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", ctx_r0.themeIcon(msgs_r1.theme == null ? null : msgs_r1.theme.options) || (msgs_r1.theme == null ? null : msgs_r1.theme.icon));\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngForOf\", msgs_r1.theme == null ? null : msgs_r1.theme.options);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.theme == null ? null : msgs_r1.theme.hint);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.language == null ? null : msgs_r1.language.label) || \"Language\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"icon\", msgs_r1.language == null ? null : msgs_r1.language.icon);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"ngForOf\", msgs_r1.language == null ? null : msgs_r1.language.options);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.language == null ? null : msgs_r1.language.hint);\n    }\n}\nlet prefs_form_component_PreferencesFormComponent = /*@__PURE__*/ (() => {\n    class PreferencesFormComponent extends fesm2015_forms[\"g\" /* FormGroup */] {\n        constructor(router, theme) {\n            // Builds the form controls\n            super({ theme: new fesm2015_forms[\"e\" /* FormControl */](''), lang: new fesm2015_forms[\"e\" /* FormControl */]('') });\n            this.router = router;\n            this.theme = theme;\n            /** Emits changes in user's preferences */\n            this.formValueChange = new core[\"o\" /* EventEmitter */]();\n            // Monitors the form group for changes\n            this.sub = this.valueChanges.subscribe(value => {\n                // Emits the value update\n                this.formValueChange.emit(value);\n                // Matches the new values against the original input data to reset the dirty flag in case they all match\n                if (Object.keys(this.controls).every(key => this.data[key] === value[key])) {\n                    Promise.resolve().then(() => this.markAsPristine());\n                }\n            });\n        }\n        /** Applies the requested theme */\n        changeTheme(theme) {\n            this.theme.darkMode(theme === 'auto' ? undefined : (theme === 'dark'));\n        }\n        /** Detects the current theme icon */\n        themeIcon(options) {\n            var _a;\n            const value = this.theme.isDark ? 'dark' : 'light';\n            return (_a = (options || []).find(icon => icon.value === value)) === null || _a === void 0 ? void 0 : _a.icon;\n        }\n        /** Switches language */\n        changeLanguage(lang) {\n            // Navigates towards this very same url but for the language code at the root\n            return this.router.navigateByUrl(this.router.url.replace(/^\\/[^\\/]+(\\/|$)/, '/' + lang + '$1'));\n        }\n        ngOnDestroy() { this.sub.unsubscribe(); }\n        /** User preferences */\n        set userData(value) {\n            // Considers undefined/null theme as 'auto'\n            if (!value.theme) {\n                value.theme = 'auto';\n            }\n            // Patches the user values\n            this.patchValue(this.data = value);\n        }\n    }\n    PreferencesFormComponent.ɵfac = function PreferencesFormComponent_Factory(t) { return new (t || PreferencesFormComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](fesm2015_router[\"g\" /* Router */]), core[\"Qb\" /* ɵɵdirectiveInject */](platform[\"a\" /* DarkModeObserver */])); };\n    PreferencesFormComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: PreferencesFormComponent, selectors: [[\"wm-preferences-form\"]], inputs: { userData: [\"value\", \"userData\"] }, outputs: { formValueChange: \"valueChange\" }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 1, consts: [[\"fxLayout\", \"column\", \"fxLayoutGap\", \"32px\", 3, \"formGroup\", 4, \"wmContent\", \"wmContentSelect\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"32px\", 3, \"formGroup\"], [\"matPrefix\", \"\", 3, \"icon\"], [\"formControlName\", \"theme\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"lang\", 3, \"selectionChange\"], [3, \"value\"]], template: function PreferencesFormComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, PreferencesFormComponent_form_0_Template, 17, 9, \"form\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"settings-profile.preferences\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], fesm2015_forms[\"u\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"n\" /* NgControlStatusGroup */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"f\" /* DefaultLayoutGapDirective */], fesm2015_forms[\"h\" /* FormGroupDirective */], form_field[\"c\" /* MatFormField */], form_field[\"g\" /* MatLabel */], icon_component[\"a\" /* IconComponent */], form_field[\"h\" /* MatPrefix */], select_MatSelect, fesm2015_forms[\"m\" /* NgControlStatus */], fesm2015_forms[\"f\" /* FormControlName */], common[\"l\" /* NgForOf */], form_field[\"f\" /* MatHint */], fesm2015_core[\"m\" /* MatOption */]], styles: [\"[_nghost-%COMP%]{display:block;position:relative;max-width:450px;width:100%}\"] });\n    return PreferencesFormComponent;\n})();\n\n// EXTERNAL MODULE: ./elements/src/lib/dialog/dialog.component.ts\nvar dialog_component = __webpack_require__(\"7/R1\");\n\n// EXTERNAL MODULE: ./wizdm/src/app/utils/can-leave/can-leave.directive.ts\nvar can_leave_directive = __webpack_require__(\"q9NA\");\n\n// EXTERNAL MODULE: ./readme/src/lib/readme.component.ts\nvar readme_component = __webpack_require__(\"n8oj\");\n\n// EXTERNAL MODULE: ./elements/src/lib/button/button-media-changer.directive.ts\nvar button_media_changer_directive = __webpack_require__(\"U3RD\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile.component.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ProfileComponent_ng_container_0_ng_template_1_wm_icon_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelement */](0, \"wm-icon\", 19);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"pc\" /* ɵɵproperty */](\"icon\", (msgs_r1.actions == null ? null : msgs_r1.actions.save == null ? null : msgs_r1.actions.save.icon) || \"save\");\n    }\n}\nfunction ProfileComponent_ng_container_0_ng_template_1_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ic\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const msgs_r1 = core[\"ic\" /* ɵɵnextContext */](2).$implicit;\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.actions == null ? null : msgs_r1.actions.save == null ? null : msgs_r1.actions.save.caption) || \"Update Profile\");\n    }\n}\nfunction ProfileComponent_ng_container_0_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Wb\" /* ɵɵelementStart */](0, \"button\", 16);\n        core[\"ec\" /* ɵɵlistener */](\"click\", function ProfileComponent_ng_container_0_ng_template_1_Template_button_click_0_listener() { core[\"yc\" /* ɵɵrestoreView */](_r12); const ctx_r11 = core[\"ic\" /* ɵɵnextContext */](2); return ctx_r11.updateProfile(); });\n        core[\"Gc\" /* ɵɵtemplate */](1, ProfileComponent_ng_container_0_ng_template_1_wm_icon_1_Template, 1, 1, \"wm-icon\", 17);\n        core[\"Gc\" /* ɵɵtemplate */](2, ProfileComponent_ng_container_0_ng_template_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 18, core[\"Hc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const mobile_r5 = ctx.isMobile;\n        const _r7 = core[\"vc\" /* ɵɵreference */](3);\n        core[\"ic\" /* ɵɵnextContext */]();\n        const _r3 = core[\"vc\" /* ɵɵreference */](7);\n        const _r4 = core[\"vc\" /* ɵɵreference */](13);\n        core[\"pc\" /* ɵɵproperty */](\"disabled\", !(_r3.dirty || _r4.dirty) || _r3.invalid || _r4.invalid);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"ngIf\", mobile_r5)(\"ngIfElse\", _r7);\n    }\n}\nfunction ProfileComponent_ng_container_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = core[\"Xb\" /* ɵɵgetCurrentView */]();\n        core[\"Ub\" /* ɵɵelementContainerStart */](0, 1);\n        core[\"Gc\" /* ɵɵtemplate */](1, ProfileComponent_ng_container_0_ng_template_1_Template, 4, 3, \"ng-template\", 2);\n        core[\"Wb\" /* ɵɵelementStart */](2, \"h2\");\n        core[\"Ic\" /* ɵɵtext */](3);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](4, \"mat-divider\");\n        core[\"Wb\" /* ɵɵelementStart */](5, \"div\", 3);\n        core[\"Wb\" /* ɵɵelementStart */](6, \"wm-profile-form\", 4, 5);\n        core[\"ec\" /* ɵɵlistener */](\"valueChange\", function ProfileComponent_ng_container_0_Template_wm_profile_form_valueChange_6_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r14); const ctx_r13 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r13.profile = $event; });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](8, \"wm-profile-photo\", 6);\n        core[\"ec\" /* ɵɵlistener */](\"update\", function ProfileComponent_ng_container_0_Template_wm_profile_photo_update_8_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r14); const ctx_r15 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r15.updatePhoto($event); });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](9, \"h3\");\n        core[\"Ic\" /* ɵɵtext */](10);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelement */](11, \"mat-divider\");\n        core[\"Wb\" /* ɵɵelementStart */](12, \"wm-preferences-form\", 7, 8);\n        core[\"ec\" /* ɵɵlistener */](\"valueChange\", function ProfileComponent_ng_container_0_Template_wm_preferences_form_valueChange_12_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r14); const ctx_r16 = core[\"ic\" /* ɵɵnextContext */](); return ctx_r16.profile = $event; });\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](14, \"wm-dialog\", 9);\n        core[\"ec\" /* ɵɵlistener */](\"beforeClosed\", function ProfileComponent_ng_container_0_Template_wm_dialog_beforeClosed_14_listener($event) { core[\"yc\" /* ɵɵrestoreView */](_r14); const _r3 = core[\"vc\" /* ɵɵreference */](7); const ctx_r17 = core[\"ic\" /* ɵɵnextContext */](); return $event === \"save\" && ctx_r17.updateProfile(_r3.userData); });\n        core[\"Wb\" /* ɵɵelementStart */](15, \"h2\", 10);\n        core[\"Wb\" /* ɵɵelementStart */](16, \"b\");\n        core[\"Ic\" /* ɵɵtext */](17);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](18, \"mat-dialog-content\", 11);\n        core[\"Wb\" /* ɵɵelementStart */](19, \"span\");\n        core[\"Ic\" /* ɵɵtext */](20, \"You're about to leave the page without saving the latest changes.\");\n        core[\"Rb\" /* ɵɵelement */](21, \"br\");\n        core[\"Ic\" /* ɵɵtext */](22, \"Please confirm.\");\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](23, \"mat-dialog-actions\", 12);\n        core[\"Wb\" /* ɵɵelementStart */](24, \"button\", 13);\n        core[\"Ic\" /* ɵɵtext */](25);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](26, \"button\", 14);\n        core[\"Ic\" /* ɵɵtext */](27);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Wb\" /* ɵɵelementStart */](28, \"button\", 15);\n        core[\"Ic\" /* ɵɵtext */](29);\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Vb\" /* ɵɵelementEnd */]();\n        core[\"Tb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const msgs_r1 = ctx.$implicit;\n        const _r3 = core[\"vc\" /* ɵɵreference */](7);\n        const _r4 = core[\"vc\" /* ɵɵreference */](13);\n        const ctx_r0 = core[\"ic\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */](msgs_r1.title || \"Public profile\");\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"pc\" /* ɵɵproperty */](\"value\", ctx_r0.profile);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"url\", ctx_r0.profile == null ? null : ctx_r0.profile.photo)(\"folder\", ctx_r0.profile == null ? null : ctx_r0.profile.id);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.preferences == null ? null : msgs_r1.preferences.title) || \"User's preferences\");\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"value\", ctx_r0.profile);\n        core[\"Db\" /* ɵɵadvance */](2);\n        core[\"pc\" /* ɵɵproperty */](\"dontLeave\", _r3.dirty || _r4.dirty);\n        core[\"Db\" /* ɵɵadvance */](3);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.canLeave == null ? null : msgs_r1.canLeave.title) || \"Unsaved changes\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"wm-readme\", msgs_r1.canLeave == null ? null : msgs_r1.canLeave.message);\n        core[\"Db\" /* ɵɵadvance */](6);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", false);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.canLeave == null ? null : msgs_r1.canLeave.cancel) || \"Stay\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", \"save\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.canLeave == null ? null : msgs_r1.canLeave.force) || \"Save and leave\");\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"pc\" /* ɵɵproperty */](\"mat-dialog-close\", true);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */]((msgs_r1.canLeave == null ? null : msgs_r1.canLeave.ok) || \"Leave anyhow\");\n    }\n}\nlet profile_component_ProfileComponent = /*@__PURE__*/ (() => {\n    class ProfileComponent {\n        constructor(user) {\n            this.user = user;\n            /** The new user data */\n            this.data = {};\n        }\n        /* The current user profile data */\n        get profile() { return this.user.data; }\n        set profile(data) {\n            // Combines the profile and preferences change into a new profile data object\n            this.data = Object.assign(Object.assign({}, this.data), data);\n        }\n        /** Updates the profile data */\n        updateProfile() {\n            return this.user.update(this.data);\n        }\n        /** Updates the profile photo */\n        updatePhoto(photo) {\n            return this.user.update({ photo });\n        }\n    }\n    ProfileComponent.ɵfac = function ProfileComponent_Factory(t) { return new (t || ProfileComponent)(core[\"Qb\" /* ɵɵdirectiveInject */](utils_user[\"b\" /* UserProfile */])); };\n    ProfileComponent.ɵcmp = core[\"Kb\" /* ɵɵdefineComponent */]({ type: ProfileComponent, selectors: [[\"wm-profile\"]], decls: 1, vars: 1, consts: [[\"gtag\", \"profile\", 4, \"wmContent\", \"wmContentSelect\"], [\"gtag\", \"profile\"], [\"wmActionbar\", \"\"], [\"fxLayout\", \"row\", \"fxLayout.lt-sm\", \"column\", \"fxLayoutAlign.lt-sm\", \"start center\", \"fxLayoutGap\", \"32px\"], [\"fxFlexOrder.lt-sm\", \"2\", 3, \"value\", \"valueChange\"], [\"form\", \"\"], [\"fxFlexOrder.lt-sm\", \"1\", 3, \"url\", \"folder\", \"update\"], [3, \"value\", \"valueChange\"], [\"prefs\", \"\"], [3, \"dontLeave\", \"beforeClosed\"], [\"mat-dialog-title\", \"\"], [3, \"wm-readme\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"color\", \"primary\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"mat-dialog-close\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"mat-dialog-close\"], [\"mat-stroked-button\", \"\", \"type.lt-sm\", \"icon\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"saveProfile\", \"\"], [3, \"icon\"]], template: function ProfileComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Gc\" /* ɵɵtemplate */](0, ProfileComponent_ng_container_0_Template, 30, 15, \"ng-container\", 0);\n            }\n            if (rf & 2) {\n                core[\"pc\" /* ɵɵproperty */](\"wmContentSelect\", \"settings-profile\");\n            }\n        }, directives: [content_directive[\"a\" /* ContentDirective */], gtag_directive[\"a\" /* GtagDirective */], actionbar_directive[\"a\" /* ActionbarDirective */], divider[\"a\" /* MatDivider */], flex[\"e\" /* DefaultLayoutDirective */], flex[\"d\" /* DefaultLayoutAlignDirective */], flex[\"f\" /* DefaultLayoutGapDirective */], profile_form_component_ProfileFormComponent, flex[\"c\" /* DefaultFlexOrderDirective */], profile_photo_component_ProfilePhotoComponent, prefs_form_component_PreferencesFormComponent, dialog_component[\"a\" /* DialogComponent */], can_leave_directive[\"a\" /* CanLeaveDirective */], fesm2015_dialog[\"h\" /* MatDialogTitle */], fesm2015_dialog[\"e\" /* MatDialogContent */], readme_component[\"a\" /* ReadmeComponent */], fesm2015_dialog[\"c\" /* MatDialogActions */], fesm2015_button[\"b\" /* MatButton */], fesm2015_dialog[\"d\" /* MatDialogClose */], button_media_changer_directive[\"a\" /* ButtonMediaChanger */], common[\"m\" /* NgIf */], icon_component[\"a\" /* IconComponent */]], styles: [\"[_nghost-%COMP%]{display:flex;position:relative;flex-flow:column;justify-content:center}[_nghost-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:32px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{margin-bottom:16px}\"] });\n    return ProfileComponent;\n})();\n\n// EXTERNAL MODULE: ./content/src/lib/router/content-router.module.ts\nvar content_router_module = __webpack_require__(\"J3Me\");\n\n// CONCATENATED MODULE: ./wizdm/src/app/pages/settings/profile/profile.module.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        content: 'settings-profile',\n        component: profile_component_ProfileComponent,\n        canDeactivate: [can_leave[\"a\" /* CanLeaveGuard */]]\n    }\n];\nlet profile_module_ProfileModule = /*@__PURE__*/ (() => {\n    class ProfileModule {\n    }\n    ProfileModule.ɵmod = core[\"Ob\" /* ɵɵdefineNgModule */]({ type: ProfileModule });\n    ProfileModule.ɵinj = core[\"Nb\" /* ɵɵdefineInjector */]({ factory: function ProfileModule_Factory(t) { return new (t || ProfileModule)(); }, imports: [[\n                common[\"c\" /* CommonModule */],\n                flex_layout[\"a\" /* FlexLayoutModule */],\n                divider[\"b\" /* MatDividerModule */],\n                fesm2015_button[\"c\" /* MatButtonModule */],\n                src[\"a\" /* GtagModule */],\n                dialog[\"b\" /* DialogModule */],\n                readme_src[\"a\" /* ReadmeModule */],\n                icon[\"a\" /* IconModule */],\n                lib_button[\"a\" /* ButtonChangerModule */],\n                can_leave[\"b\" /* CanLeaveModule */],\n                actionbar[\"a\" /* ActionbarModule */],\n                profile_form_module_ProfileFormModule,\n                profile_photo_module_ProfilePhotoModule,\n                prefs_form_module_PreferencesFormModule,\n                content_src[\"e\" /* ContentRouterModule */].forChild(routes)\n            ]] });\n    return ProfileModule;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}